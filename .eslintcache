[{"C:\\Ana\\servidor2.0\\cliente\\src\\index.js":"1","C:\\Ana\\servidor2.0\\cliente\\src\\App.js":"2","C:\\Ana\\servidor2.0\\cliente\\src\\primera.js":"3","C:\\Ana\\servidor2.0\\cliente\\src\\reportWebVitals.js":"4","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\Userform.js":"5","C:\\Ana\\servidor2.0\\cliente\\src\\RutasWeb.js":"6","C:\\Ana\\servidor2.0\\cliente\\src\\components\\InicioAdministrador.js":"7","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosPersonales.js":"8","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mydropbox.js":"9","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\perfilErasmus.js":"10","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\enviados.js":"11","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\gestionProfesores.js":"12","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\coordinador.js":"13","C:\\Ana\\servidor2.0\\cliente\\src\\components\\pantallaInicial.js":"14","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosUniversidad.js":"15","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Informacion.js":"16","C:\\Ana\\servidor2.0\\cliente\\src\\components\\prueba.js":"17","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\PasswordEdit.js":"18","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\mensaje.js":"19","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\destinos.js":"20","C:\\Ana\\servidor2.0\\cliente\\src\\components\\NuevoDocumento.js":"21","C:\\Ana\\servidor2.0\\cliente\\src\\components\\InicioSesion.js":"22","C:\\Ana\\servidor2.0\\cliente\\src\\GlobalProfesor.js":"23","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\EditPefil.js":"24","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\Success.js":"25","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Documentos.js":"26","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\UseformProfesor.js":"27","C:\\Ana\\servidor2.0\\cliente\\src\\components\\DocumentoOficial.js":"28","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\MenuPerfil.js":"29","C:\\Ana\\servidor2.0\\cliente\\src\\components\\baja.js":"30","C:\\Ana\\servidor2.0\\cliente\\src\\components\\inicio\\donde-estamos.js":"31","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Sidebar.js":"32","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\menu-mensajes.js":"33","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\enviar.js":"34","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Footer.js":"35","C:\\Ana\\servidor2.0\\cliente\\src\\components\\inicio\\quienes-somos.js":"36","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosPlataforma.js":"37","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Alumnos.js":"38","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\editDestinos.js":"39","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Header.js":"40","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\responder.js":"41","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosErasmus.js":"42","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Slider.js":"43","C:\\Ana\\servidor2.0\\cliente\\src\\Global.js":"44","C:\\Ana\\servidor2.0\\cliente\\src\\GlobalDocumentos.js":"45","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\MiPerfil.js":"46","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Inicio.js":"47","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\recibidos.js":"48","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\borrardestino.js":"49","C:\\Ana\\servidor2.0\\cliente\\src\\GlobalMensaje.js":"50","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\menu-admin.js":"51","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\erasmus.js":"52","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\deleteProfesor.js":"53","C:\\Ana\\servidor2.0\\cliente\\src\\Rutas.js":"54","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Input.js":"55","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Message.js":"56","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\InfoBar.js":"57","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Chat.js":"58","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Messages.js":"59","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Dropbox.js":"60","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Join.js":"61"},{"size":500,"mtime":499162500000,"results":"62","hashOfConfig":"63"},{"size":403,"mtime":1606401880807,"results":"64","hashOfConfig":"63"},{"size":804,"mtime":1606403234549,"results":"65","hashOfConfig":"63"},{"size":362,"mtime":499162500000,"results":"66","hashOfConfig":"63"},{"size":4070,"mtime":1606403990181,"results":"67","hashOfConfig":"63"},{"size":4737,"mtime":1606825526233,"results":"68","hashOfConfig":"63"},{"size":6090,"mtime":1606929902113,"results":"69","hashOfConfig":"63"},{"size":10910,"mtime":1606403988832,"results":"70","hashOfConfig":"63"},{"size":9865,"mtime":1607106191690,"results":"71","hashOfConfig":"63"},{"size":4083,"mtime":1606404595908,"results":"72","hashOfConfig":"63"},{"size":7019,"mtime":1607188097257,"results":"73","hashOfConfig":"63"},{"size":0,"mtime":1606403973642,"results":"74","hashOfConfig":"63"},{"size":4569,"mtime":1606404372298,"results":"75","hashOfConfig":"63"},{"size":3011,"mtime":1606403934841,"results":"76","hashOfConfig":"63"},{"size":7164,"mtime":1606403989430,"results":"77","hashOfConfig":"63"},{"size":4806,"mtime":1606403933937,"results":"78","hashOfConfig":"63"},{"size":293,"mtime":1606403934999,"results":"79","hashOfConfig":"63"},{"size":12119,"mtime":1606404034379,"results":"80","hashOfConfig":"63"},{"size":6371,"mtime":1607334669978,"results":"81","hashOfConfig":"63"},{"size":8424,"mtime":1607184181681,"results":"82","hashOfConfig":"63"},{"size":20117,"mtime":1607190233979,"results":"83","hashOfConfig":"63"},{"size":14742,"mtime":1607337503644,"results":"84","hashOfConfig":"63"},{"size":121,"mtime":1606404223130,"results":"85","hashOfConfig":"63"},{"size":25638,"mtime":1607022071876,"results":"86","hashOfConfig":"63"},{"size":1825,"mtime":1606403989694,"results":"87","hashOfConfig":"63"},{"size":4740,"mtime":1607102191249,"results":"88","hashOfConfig":"63"},{"size":4021,"mtime":1606403989914,"results":"89","hashOfConfig":"63"},{"size":28140,"mtime":1607183635938,"results":"90","hashOfConfig":"63"},{"size":1584,"mtime":1606404033709,"results":"91","hashOfConfig":"63"},{"size":2654,"mtime":1607078122456,"results":"92","hashOfConfig":"63"},{"size":1612,"mtime":1606404005436,"results":"93","hashOfConfig":"63"},{"size":485,"mtime":1606837552276,"results":"94","hashOfConfig":"63"},{"size":1097,"mtime":1606404019021,"results":"95","hashOfConfig":"63"},{"size":10394,"mtime":1607188110590,"results":"96","hashOfConfig":"63"},{"size":374,"mtime":1606403933411,"results":"97","hashOfConfig":"63"},{"size":5926,"mtime":1606404005772,"results":"98","hashOfConfig":"63"},{"size":6785,"mtime":1606403989032,"results":"99","hashOfConfig":"63"},{"size":9448,"mtime":1607189687638,"results":"100","hashOfConfig":"63"},{"size":8801,"mtime":1606404432613,"results":"101","hashOfConfig":"63"},{"size":26945,"mtime":1607338048485,"results":"102","hashOfConfig":"63"},{"size":6751,"mtime":1606404019502,"results":"103","hashOfConfig":"63"},{"size":10008,"mtime":1606404649402,"results":"104","hashOfConfig":"63"},{"size":8416,"mtime":1606648680421,"results":"105","hashOfConfig":"63"},{"size":185,"mtime":1606404224720,"results":"106","hashOfConfig":"63"},{"size":128,"mtime":1606404225750,"results":"107","hashOfConfig":"63"},{"size":5026,"mtime":1607110087050,"results":"108","hashOfConfig":"63"},{"size":378,"mtime":1606403934076,"results":"109","hashOfConfig":"63"},{"size":11058,"mtime":1607188147775,"results":"110","hashOfConfig":"63"},{"size":6791,"mtime":1606404354381,"results":"111","hashOfConfig":"63"},{"size":113,"mtime":1606404226875,"results":"112","hashOfConfig":"63"},{"size":2888,"mtime":1607184164869,"results":"113","hashOfConfig":"63"},{"size":3557,"mtime":1606404559414,"results":"114","hashOfConfig":"63"},{"size":5576,"mtime":1606404384373,"results":"115","hashOfConfig":"63"},{"size":1479,"mtime":1606730742681,"results":"116","hashOfConfig":"63"},{"size":611,"mtime":1606730535247,"results":"117","hashOfConfig":"63"},{"size":1201,"mtime":1606730536016,"results":"118","hashOfConfig":"63"},{"size":607,"mtime":1606730534876,"results":"119","hashOfConfig":"63"},{"size":1800,"mtime":1606733030819,"results":"120","hashOfConfig":"63"},{"size":386,"mtime":1606730536397,"results":"121","hashOfConfig":"63"},{"size":12166,"mtime":1607189977324,"results":"122","hashOfConfig":"63"},{"size":1586,"mtime":1606730535598,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"10xi9ru",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"133"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"178"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"133"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"171"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"133"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"191"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"146"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"178"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"161"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"133"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"133"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"178"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"191"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"161"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"191"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"274"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"191"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"133"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"297"},"C:\\Ana\\servidor2.0\\cliente\\src\\index.js",[],["298","299"],"C:\\Ana\\servidor2.0\\cliente\\src\\App.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\primera.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\reportWebVitals.js",[],["300","301"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\Userform.js",["302","303","304","305","306","307","308","309","310"],"import React, { Component } from 'react';\nimport FormDatosPersonales from './FormDatosPersonales';\nimport FormDatosPlataforma from './FormDatosPlataforma';\nimport FormDatosErasmus from './FormDatosErasmus';\nimport FormDatosUniversidad from './FormDatosUniversidad.js';\nimport Sucess from './Success';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Global from '../../Global';\nimport GlobalProfesor from '../../GlobalProfesor';\nimport axios from 'axios';\n\nexport class Useform extends Component {\n\n    state = {\n        step: 1,\n        formulario: false,\n        nombre: \"\",\n        apellido1: \"\",\n        apellido2: \"\",\n        usuario: \"\",\n        password1: \"\",\n        email1: \"\",\n        email2: \"\",\n        telefono: \"\",\n        destino: \"\",\n        despacho: \"\",\n        alumno: {},\n        profesor: {},\n        errors: {},\n\n    }\n\n    url = Global.url;\n    urlprofesor = GlobalProfesor.url;\n\n    //Proceed to the next step\n\n\n    nextStep = (tipo) => {\n        const { step } = this.state;\n        console.log(\"pasos:\" + step);\n        this.setState({\n            step: step + 1\n        });\n\n\n        if (this.state.step == 2) {\n            this.guardarAlumno();\n        }\n\n    }\n\n\n\n    // back to the previus step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n\n    }\n\n\n    //Handle fields change\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n\n    }\n\n    guardarAlumno = () => {\n\n        var body = {\n            nombre: this.state.nombre,\n            apellido1: this.state.apellido1,\n            apellido2: this.state.apellido2,\n            email: this.state.email1,\n            telefono: this.state.telefono,\n            usuario: this.state.usuario,\n            password: this.state.password1,\n            tipo: 'Alumno',\n          \n\n        }\n\n        axios.post(this.url + 'save', body)\n            .then(res => {\n                this.setState({\n                    alumno: res.data.alumno\n                })\n            })\n    }\n\n\n\n    render() {\n        const { step } = this.state;\n\n\n        const { nombre, apellido1, apellido2, usuario, password1, password2, email1, email2, telefono, destino, alumno, profesor, despacho } = this.state;\n        const values = { nombre, apellido1, apellido2, usuario, password1, password2, email1, email2, telefono, destino, alumno, profesor, despacho }\n        const { tipo } = this.props.location.state\n\n        switch (step) {\n            case 1:\n                return (\n                    <div>\n                        <FormDatosPersonales\n                            nextStep={this.nextStep}\n                            handleChange={this.handleChange}\n                            values={values}\n                            tipo={tipo}\n                        />\n\n\n                    </div>\n\n                );\n            case 2:\n                return (\n                    <FormDatosPlataforma\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                        tipo={tipo}\n                    />\n                )\n            case 3:\n                return (\n                    <FormDatosErasmus\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                        tipo={tipo}\n\n                    />\n\n\n                );\n\n            case 4:\n                return (\n                    <div>\n                        <Sucess />\n\n                    </div>\n\n                )\n        }\n\n\n\n\n\n\n    }\n}\n\nexport default Useform;",["311","312"],"C:\\Ana\\servidor2.0\\cliente\\src\\RutasWeb.js",["313","314","315","316"],"import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\nimport Inicio from './components/Inicio';\nimport Informacion from \"./components/Informacion\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Documento from './components/DocumentoOficial';\nimport Dropbox from './components/Dropbox';\nimport MiPerfil from './components/views/MiPerfil';\nimport EditPerfil from './components/views/EditPefil';\nimport RutasInicio from './Rutas';\nimport PasswordEdit from './components/views/PasswordEdit';\nimport perfilErasmus from './components/views/perfilErasmus';\nimport erasmus from './components/views/erasmus';\nimport './assets/css/App.css';\nimport enviar from './components/mensajes/enviar';\nimport recibidos from './components/mensajes/recibidos';\nimport enviados from './components/mensajes/enviados';\nimport mensaje from './components/mensajes/mensaje'\nimport Alumnos from './components/Alumnos';\nimport mydropbox from './components/mydropbox';\nimport quienes from './components/inicio/quienes-somos';\nimport donde from './components/inicio/donde-estamos';\nimport destinos from './components/admin/destinos';\nimport profesores from './components/admin/gestionProfesores';\nimport editardestino from './components/admin/editDestinos';\nimport borrardestino from './components/admin/borrardestino';\nimport baja from './components/baja';\nimport coordinador from './components/admin/coordinador';\nimport deleteProfesor from './components/admin/deleteProfesor';\nimport responder from './components/mensajes/responder';\n\nimport pruebas from './components/prueba';\n\nclass Rutas extends Component {\n\n    render() {\n\n        var user;\n        return (\n            <HashRouter>\n               <div className=\"grid-general\" >\n                    <Header />\n                    <div /*className=\"container\"*/>\n                        <Switch>\n                            <Route exact path=\"/inicio\" component={Inicio} />\n                            <Route exact path=\"/informacion\" component={Informacion}></Route>\n                            <Route exact path=\"/documentos/:id?\" component={Documento}></Route>\n                            <Route exact path=\"/nube/:id?/:nombre?/:apellido1?/:apellido2?\" component={Dropbox}></Route>\n                            <Route exact path=\"/mi_nube\" component={mydropbox}></Route>\n                            <Route exact path=\"/user/profile/:id?\" component={MiPerfil}></Route>\n                            <Route exact path=\"/user/edit\" component={EditPerfil}></Route>\n                            <Route exact path=\"/user/erasmus\" component={perfilErasmus}/>\n                            <Route exact path=\"/profesor/erasmus\" component={erasmus}/>\n                            <Route exact path=\"/user/seguridad\" component={PasswordEdit}></Route>\n                            <Route exact path=\"/mensajes\" component={recibidos} />\n                            <Route exact path=\"/mensajes/enviar\" component={enviar}/>\n                            <Route exact path=\"/responder/:id\" component={responder}/>\n                            <Route exact path=\"/mensajes/:id\" component={mensaje}></Route>\n                            <Route exact path=\"/enviados\" component={enviados}/>\n                            <Route exact path=\"/Alumnos\" component={Alumnos} />\n                            <Route exact path=\"/quienes-somos\" component={quienes}/>\n                            <Route exact path=\"/donde-estamos\" component={donde}/>\n                            <Route exact path=\"/destinos\" component={destinos}/>\n                            <Route exact path=\"/gestino-profesores\" component={profesores}/>\n                            <Route exact path=\"/editar-destinos\" component={editardestino}/>\n                            <Route exact path=\"/borrar-destinos\" component={borrardestino}/>\n                            <Route exact path=\"/solicitar_baja\" component={baja}/>\n                            <Route exact path=\"/cambiar-coordinador\" component={coordinador} />\n                            <Route exact path=\"/dar_de_baja\" component={deleteProfesor}/>\n\n                          \n                           \n                            <RutasInicio />\n                            {/*  <Route exact path=\"/\" component={InicioSesion}/> */}\n                            {/*} <Route exact path=\"/inicioSesion\" component={InicioSesion}/>*/}\n\n\n                        </Switch>\n                    </div >\n                    <div className=\"clearfix\">\n                      \n                    </div>\n                    \n\n                </div>\n\n            </HashRouter>\n\n        );\n    }\n}\n\n\nexport default Rutas;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\InicioAdministrador.js",["317","318","319","320","321","322"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosPersonales.js",["323","324","325","326","327","328","329","330","331","332"],"\n\nimport React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\nimport Card from 'react-bootstrap/Card';\nimport '../../assets/css/NuevoUsuario.css';\nimport { Link } from 'react-router-dom';\nimport Global from '../../Global';\nimport SimpleReactValidator from 'simple-react-validator';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\n\n\nexport class FormDatosPersonales extends Component {\n\n    url = Global.url;\n\n\n    state = {\n        errors: {}\n    }\n\n    validate = e => {\n        const errors = {};\n        let regex = new RegExp(\"^[a-z A-Z ]+$\");\n        let regexnumeros = new RegExp(\"[0-9]{9}\");\n\n        //NOMBRE \n        if (!this.props.values.nombre) {\n            errors.nombre = \"Campo obligatorio\";\n        } else {\n            if (!regex.test(this.props.values.nombre)) {\n                console.log(regex.test(this.props.values.nombre));\n                errors.nombre = \"No puede contener caracteres numéricos\";\n            }\n        }\n\n        //APELLIDOS\n        if (!this.props.values.apellido1) {\n\n            errors.apellido1 = \"Campo obligatorio\";\n        } else {\n            if (!regex.test(this.props.values.apellido1)) {\n                errors.apellido1 = \"No puede contener caracteres numéricos\";\n            }\n        }\n        if (!this.props.values.apellido2) {\n            errors.apellido2 = \"Campo obligatorio\";\n        } else {\n            if (!regex.test(this.props.values.apellido2)) {\n                errors.apellido2 = \"No puede contener caracteres numéricos\";\n            }\n        }\n\n        //EMAIL \n        if (!this.props.values.email1) {\n            errors.email1 = \"Campo obligatorio\";\n        }\n\n        if (!this.props.values.email2) {\n            errors.email2 = \"Campo obligatorio\";\n        }\n\n\n        if (this.props.values.email1 != this.props.values.email2) {\n            errors.email1 = \"Los correos electrónicos deben de coincidir\"\n            errors.email2 = \"Los correos electrónicos deben de coincidir\"\n        }\n\n        //TELEFONO\n\n        if (this.props.tipo === 'alumno') {\n\n\n            if (this.props.values.telefono) {\n                if (!regexnumeros.test(this.props.values.telefono)) {\n                    errors.telefono = \"Número no valido\";\n                }\n            } else {\n                errors.telefono = \"Campo obligatorio\";\n            }\n        }\n\n\n\n        return errors;\n    }\n\n\n    continue = e => {\n        e.preventDefault();\n        console.log(\"hey\");\n        const { errors, ...sinErrors } = this.state;\n        const result = this.validate(sinErrors);\n\n        console.log(result);\n        this.setState({ errors: result })\n        if (!Object.keys(result).length) {\n            console.log(\"hey2\");\n            this.props.nextStep();\n        }\n    }\n\n\n\n    render() {\n\n\n        const { values, handleChange, tipo } = this.props;\n\n\n        return (\n            <div>\n\n                < div className=\"grid-inicio\">\n\n                    <div className=\"logo-titulo\">\n                        <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                        <div className=\"titulo-completo\">\n                            <h3>Universidad de Huelva</h3>\n                            <h1> ERASMUS+ </h1>\n                        </div>\n                    </div>\n                    <hr className=\"linea\"></hr>\n\n                    < div className=\"registro-nuevoUsuario\">\n                        {tipo == 'alumno' &&\n                            <h1 className=\"titulo titulo-registro \"> ALTA DE ALUMNO/A</h1>\n                        }\n                        {tipo == 'profesor' &&\n                            <h1 className=\"titulo titulo-registro \" > ALTA DE PROFESOR/A</h1>\n                        }\n                        <h1 className=\"titulo titulo-registro titulo-registro-secundario\" style={{ fontSize: '21px' }}> DATOS PERSONALES </h1>\n\n                        <div className=\"subtitulo\">Asegúrese de que todos los datos introducidos sean correctos </div>\n                        <Link to='/' className=\"link-cancelar\">Cancelar registro de usuario</Link>\n                        <br />\n\n                        <Card className=\"card-nuevoUser\">\n                            <Form>\n                                <Form.Row>\n                                                                    <Form.Group as={Col} >\n                                        <Form.Control\n                                            onChange={handleChange('nombre')}\n                                            defaultValue={values.nombre}\n                                            type=\"text\"\n                                            placeholder=\"Nombre *\"\n                                            name=\"nombre\"\n                                            value={values.nombre}\n                                            required\n                                            title=\"Introduce tu nombre.\"\n                                        />\n                                        {this.state.errors.nombre && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.nombre}</Form.Label>}\n                                    </Form.Group>\n                                   \n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} >\n\n                                        <Form.Control\n                                            onChange={handleChange('apellido1')}\n                                            defaultValue={values.apellido1}\n                                            type=\"text\"\n                                            name=\"apellido1\"\n                                            placeholder=\"Primer apellido *\" />\n                                        {this.state.errors.apellido1 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.apellido1}</Form.Label>}\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} >\n\n                                        <Form.Control\n                                            onChange={handleChange('apellido2')}\n                                            defaultValue={values.apellido2}\n                                            name=\"apellido2\"\n                                            type=\"text\"\n                                            placeholder=\"Segundo apellido *\" />\n                                        {this.state.errors.apellido2 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.apellido2}</Form.Label>}\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} >\n                                        <InputGroup>\n                                            <Form.Control\n                                                onChange={handleChange('email1')}\n                                                defaultValue={values.email1}\n                                                type=\"email\"\n                                                placeholder=\"Correo electrónico *\"\n                                                name=\"email1\" />\n                                            {tipo == \"alumno\" &&\n                                                < div className=\"input-group-append\">\n                                                    <span className=\"input-group-text\" style={{ fontSize: '14px', border: 'solid 1px rgb(153, 153, 153)' }}>@alu.uhu.es</span>\n                                                </div>\n                                            }\n\n\n                                        </InputGroup>\n\n                                        {this.state.errors.email1 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.email1}</Form.Label>}\n\n                                    </Form.Group>\n                                    <Form.Group as={Col} >\n                                        <InputGroup>\n                                            <Form.Control\n                                                onChange={handleChange('email2')}\n                                                defaultValue={values.email2}\n                                                type=\"email\"\n                                                placeholder=\"Repetir correo electrónico*\"\n                                                name=\"email2\" />\n                                            {tipo == \"alumno\" &&\n                                                < div className=\"input-group-append\">\n                                                    <span className=\"input-group-text\" style={{ fontSize: '14px', border: 'solid 1px rgb(153, 153, 153)' }}>@alu.uhu.es</span>\n                                                </div>\n                                            }\n\n                                        </InputGroup>\n                                        {this.state.errors.email2 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.email2}</Form.Label>}\n                                    </Form.Group>\n                                </Form.Row>\n                                {tipo === 'alumno' &&\n                                    <Form.Group >\n\n                                        <Form.Control\n                                            onChange={handleChange('telefono')}\n                                            defaultValue={values.telefono}\n                                            type=\"phone\"\n                                            name=\"phone\"\n                                            placeholder=\"Teléfono\" />\n                                        {this.state.errors.telefono && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.telefono}</Form.Label>}\n                                    </Form.Group>\n                                }\n\n                                <button\n                                    label=\"continue\"\n                                    className=\"btn-continue form-login\"\n                                    style={styles.button}\n                                    onClick={this.continue}\n                                >   CONTINUAR </button>\n                            </Form>\n\n                            <br></br>\n\n\n                        </Card>\n\n                    </div>\n\n\n                </div>\n\n            </div >\n        );\n    }\n}\n\nconst styles = {\n    button: { margin: 15 }\n}\n\nexport default FormDatosPersonales;",["333","334"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mydropbox.js",["335","336","337","338","339","340","341","342","343","344"],"import React, { Component } from 'react';\r\nimport NuevoDocumento from './NuevoDocumento';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport GlobalDocumentos from '../GlobalDocumentos';\r\nimport '../assets/css/dropbox.css';\r\nimport Documentos from './Documentos';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport '../assets/css/dropbox.css';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport Global from '../Global';\r\nimport ButtonIcon from \"@material-ui/core/Button\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport swal from 'sweetalert';\r\n\r\n/*IMAGENES - BOTONES */\r\n\r\nimport btn1 from '../assets/images/pdf.png';\r\nimport btn2 from '../assets/images/zip.png';\r\nimport btn3 from '../assets/images/default.png';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass mydropbox extends Component {\r\n\r\n    url = GlobalDocumentos.url;\r\n\r\n\r\n    state = {\r\n        documentos: [],\r\n        identity: null,\r\n        pages: \"\",\r\n        currentPage: 0,\r\n        mensajesPerPage: 5,\r\n        offset: 0,\r\n\r\n\r\n    };\r\n\r\n    url = GlobalDocumentos.url;\r\n\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            identity: JSON.parse(localStorage.getItem('user')),\r\n        };\r\n\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        this.getDocumentos();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDocumentos();\r\n    }\r\n\r\n\r\n    getDocumentos() {\r\n\r\n        var pages = this.state.currentPage + 1;\r\n\r\n        if (this.state.identity.tipo === \"profesor\") {\r\n            axios.get(this.url + \"mydropboxProfesor/\" + this.state.identity._id + '/' + pages)\r\n                .then(res => {\r\n                    this.setState({\r\n                        documentos: res.data.documento,\r\n                        status: 'sucess',\r\n                        pages: res.data.pages\r\n                    });\r\n                });\r\n        } else {\r\n            axios.get(this.url + \"mydropboxAlumno/\" + this.state.identity._id + '/' + pages)\r\n                .then(res => {\r\n                    this.setState({\r\n                        documentos: res.data.documento,\r\n                        status: 'sucess',\r\n                        pages: res.data.pages\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handlePageClick = mensajes => {\r\n\r\n        const selectedPage = mensajes.selected;\r\n        const offset = selectedPage * this.state.mensajesPerPage;\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n\r\n        }, () =>\r\n            this.getDocumentos());\r\n\r\n    }\r\n\r\n    delete(title) {\r\n        axios.delete(this.url + \"delete/\" + title)\r\n            .then(res => {\r\n                this.setState({\r\n                    status: 'sucess'\r\n                })\r\n            })\r\n           \r\n            window.location.reload(true);\r\n                   \r\n                      \r\n                  \r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let paginationElement;\r\n\r\n        if (this.state.pages > 1) {\r\n            paginationElement = (\r\n                <ReactPaginate\r\n                    previousLabel={\"<<\"}\r\n                    nextLabel={\">>\"}\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={this.state.pages}\r\n                    onPageChange={this.handlePageClick}\r\n                    forcePage={this.state.currentPage}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n            )\r\n        }\r\n\r\n\r\n        if (this.state.documentos != undefined) {\r\n            var listardocumentos = this.state.documentos.map((documentos) => {\r\n                return (\r\n                    <div className=\"documento-item\">\r\n\r\n                        <table aria-rowcount={this.state.documentos.length} className=\"table-dropbox\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: '30%' }}>\r\n\r\n                                        <div>\r\n\r\n                                            {\r\n                                                  documentos.formato == \"pdf\" ? (\r\n                                                    <img src={btn1} alt=\"prueba\" className=\"image-wrap\" />\r\n                                                ) : documentos.formato === \"zip\"|| documentos.formato ==='rar' ? (\r\n                                                    <img src={btn2} alt=\"prueba\" className=\"image-wrap\" />\r\n                                                ) :  (                                        \r\n                                                                    <img src={documentos.image} alt=\"prueba\" className=\"image-wrap\" />\r\n                                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            \r\n                                            <a target=\"_blank\" href={ documentos.image} >{documentos.title}</a>\r\n                                        </div>\r\n\r\n                                    </td >\r\n\r\n                                    <td style={{ overflow: 'auto', width: '30%' }}>\r\n                                        {documentos.descripcion}\r\n                                    </td>\r\n\r\n                                    <td style={{ width: '30%' }}>\r\n                                        <spain>\r\n                                            <Moment format=\"DD-MM-YYYY\">{documentos.date}</Moment>\r\n                                        </spain>\r\n\r\n\r\n                                    </td>\r\n                                    <td className=\"th-pequeño\" >\r\n                                        <ButtonIcon onClick={() => { if (window.confirm('\\n' + 'Estas seguro de eliminar el archivo ' + documentos.title + '?')) this.delete(documentos.title); }}\r\n                                            className=\"btn-delete\" startIcon={<DeleteIcon />}></ButtonIcon>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n\r\n                <div className=\"grid-documentos\">\r\n                    <div >\r\n                        <h1 className=\"titulo-doc\">MI NUBE </h1>\r\n\r\n\r\n                        <Card className=\"card-bajas\" style={{border:'none'}}>\r\n                            <div className=\"bajas\">\r\n                                <h3 style={{ fontSize: '24px', color: '#BB0909' }}>¡Recuerda!</h3>\r\n                                <h5 style={{ fontSize: '16px' }}> Sólo se pueden subir imagenes o archivos en formato .pdf .jpg ó .png    </h5>\r\n                                <h5 style={{ fontSize: '16px' }}> El contenido de esta nube solo puede ser visto por usted.</h5>\r\n                         \r\n                            </div>\r\n                        </Card>\r\n\r\n                    </div>\r\n                    <div className=\" grid-documentos-col\">\r\n                        <div>\r\n                            <div >\r\n\r\n                                <table className=\"table-dropbox dropbox-cabecera\">\r\n                                    <thead >\r\n                                        <tr >\r\n                                            <th style={{ width: '30%'}}>Nombre</th>\r\n\r\n                                            <th style={{ width: '30%' }}>Descripción</th>\r\n                                            <th style={{ width: '30%' }}>Fecha de subida</th>\r\n                                            <th className=\"th-pequeño\"></th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                </table>\r\n\r\n                            </div>\r\n                            {listardocumentos}\r\n                            {paginationElement}\r\n\r\n                        </div>\r\n                        <div className=\"btn-docOficial\">\r\n                            <NuevoDocumento type=\"documento-particular\" />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            )\r\n\r\n\r\n        } else {\r\n            return (\r\n                <div className=\"grid-documentos\">\r\n                    <div >\r\n                        <h1 className=\"titulo-doc\">MI NUBE</h1>\r\n\r\n                    </div>\r\n                    <div className=\" grid-documentos-col\">\r\n                        <div>\r\n                            <div >\r\n                                <Spinner animation=\"border\" role=\"status\" style={{ textAlign: 'center' }}>\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </Spinner>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"btn-docOficial\">\r\n                            <NuevoDocumento type=\"documento-particular\" />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default mydropbox;\r\n","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\perfilErasmus.js",["345","346"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../../assets/css/MiPerfil.css\";\nimport { NavLink } from 'react-router-dom';\nimport Global from '../../Global';\nimport MenuPerfil from './MenuPerfil';\nimport Card from 'react-bootstrap/Card';\n\nclass MiPerfil extends Component {\n\n    state = {\n        identity: null,\n        destino: {},\n        status: \"\",\n        profesor: {},\n        coordinador: {}\n    }\n\n    url = Global.url;\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n        this.getInfoDestino();\n    }\n\n    getInfoDestino() {\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiDestino/destino/' + JSON.parse(localStorage.getItem('user')).destino)\n            .then(res => {\n                this.setState({\n                    destino: res.data.destinoget,\n                    status: 'sucess'\n                })\n\n                axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/profesor/' + JSON.parse(localStorage.getItem('user')).profesor)\n                    .then(res => {\n                        this.setState({\n                            profesor: res.data.userget\n                        })\n                    })\n\n                axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/profesor/' + JSON.parse(localStorage.getItem('user')).coordinador)\n                    .then(res => {\n                        this.setState({\n                            coordinador: res.data.userget\n                        })\n                    })\n\n            })\n\n    }\n\n\n    render() {\n\n\n\n        return (\n\n            <div id=\"content\" className=\"grid-passw\">\n                <MenuPerfil />\n                \n\n                <div >\n                    <h1 className=\"titulo\"> Información ERASMUS </h1>\n                    <Card className=\"elemt-one-passw\">\n                        <Card.Body>\n                            <Card.Title className=\"form-perfil-title\" style={{ borderBottom: '1px solid grey' }}>Coordinador de destino</Card.Title>\n                            <div className=\"profesor-erasmus\">\n                                <h6><strong>Nombre: </strong> {this.state.profesor.nombre + \" \" + this.state.profesor.apellido1 + \" \" + this.state.profesor.apellido2}</h6>\n                                <h6><strong>Correo electrónico: </strong>{this.state.profesor.email}</h6>\n                                <h6><strong>Télefono: </strong> {this.state.profesor.telefono}</h6>\n                                <h6><strong>Edificio: </strong> {this.state.profesor.edificio} <strong>Nº despacho: </strong>{this.state.profesor.despacho}</h6>\n                                <h6>{this.state.profesor.datos}</h6>\n                            </div>\n                        </Card.Body>\n\n\n                    </Card>\n\n                    <Card className=\"elemt-one-passw\">\n                        <Card.Body>\n                            <Card.Title className=\"form-perfil-title\" style={{ borderBottom: '1px solid grey' }}>Coordinador de Centro</Card.Title>\n                            <div className=\"profesor-erasmus\">\n                                <h6><strong>Nombre: </strong> {this.state.coordinador.nombre + \" \" + this.state.coordinador.apellido1 + \" \" + this.state.coordinador.apellido2}</h6>\n                                <h6><strong>Correo electrónico: </strong>{this.state.coordinador.email}</h6>\n                                <h6><strong>Télefono: </strong> {this.state.coordinador.telefono}</h6>\n                                <h6><strong>Edificio: </strong> {this.state.coordinador.edificio} <strong>Nº despacho: </strong>{this.state.coordinador.despacho}</h6>\n                                <h6>{this.state.coordinador.datos}</h6>\n                            </div>\n                        </Card.Body>\n\n\n                    </Card>\n\n                    \n                </div>\n            </div>\n        );\n\n\n\n    }\n\n\n\n}\n\nexport default MiPerfil;",["347","348"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\enviados.js",["349","350","351"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\gestionProfesores.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\coordinador.js",["352","353"],"import React, { Component } from 'react';\r\n\r\nimport Global from '../../Global';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nclass Coordinador extends Component {\r\n\r\n    state = {\r\n\r\n        status: null,\r\n        coordinador: {},\r\n        profesores: [],\r\n        profesor: {},\r\n        \r\n\r\n\r\n    };\r\n\r\n    urlprofesor = Global.urlprofesor;\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getcoordinador();\r\n        this.listarProfesores();\r\n\r\n    }\r\n\r\n\r\n    getcoordinador() {\r\n        axios.get(this.urlprofesor + 'get-coordinador-centro')\r\n            .then(res => {\r\n                this.setState({\r\n                    coordinador: res.data.profesor,\r\n\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    cambiarcoordinador=()=>{\r\n\r\n        console.log(this.state.coordinador._id);\r\n\r\n        var body={\r\n            profesor: this.state.profesor,\r\n            coordinador: this.state.coordinador._id\r\n        }\r\n\r\n        axios.put( 'https://plataforma-erasmus.herokuapp.com/apiProfesor/updatecoordinador', body)\r\n        .then(res => {\r\n            this.setState({\r\n              status:'sucess'\r\n\r\n            });\r\n\r\n            axios.put('https://plataforma-erasmus.herokuapp.com/apiDestino/update_coordinador/'+ this.state.profesor)\r\n            .then(res => {\r\n                this.setState({\r\n                   status:'sucess'\r\n    \r\n                });\r\n            });\r\n\r\n            axios.put('https://plataforma-erasmus.herokuapp.com/apiErasmus/setcoordinador/' + this.state.profesor)\r\n                .then(res=>{\r\n                    this.setState({\r\n                        status:'sucess'\r\n                    })\r\n                });    \r\n                this.forceUpdate();\r\n    });\r\n    this.forceUpdate();\r\n}\r\n\r\n\r\n    listarProfesores() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    profesores: res.data.profesor,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"delete-profesor\">\r\n                <h1 className=\"titulo-doc\" style={{ marginBottom: '25px' }}>CAMBIAR COORDINADOR DE CENTRO </h1>\r\n\r\n                <Card className=\"card-bajas\">\r\n                    <div className=\"bajas\">\r\n                        <h3 style={{ fontSize: '24px', color: '#BB0909' }}>Coordinador de Centro actual</h3>\r\n                        <h5 style={{ fontSize: '16px' }}><strong>Nombre:</strong> {this.state.coordinador.nombre + \" \" + this.state.coordinador.apellido1 + \" \" + this.state.coordinador.apellido2} </h5>\r\n                        <h5 style={{ fontSize: '16px' }}><strong>Correo electrónico: </strong>{this.state.coordinador.email}  </h5>\r\n                        <h5 style={{ fontSize: '16px' }}><strong>Télefono:</strong> {this.state.coordinador.telefono}  </h5>\r\n                    </div>\r\n                </Card>\r\n                <Card className=\"card-bajas\">\r\n                    <div className=\"bajas\">\r\n                        <h3 style={{ fontSize: '24px', color: '#BB0909' }}> Nuevo coordinador de Centro</h3>\r\n                        <Form className=\"form-añadir-destino\">\r\n                            <Form.Group>\r\n                                <Form.Label style={{ fontSize: '16px' }}> Elige al nuevo coordinador de centro:</Form.Label>\r\n                                <Form.Control as=\"select\" onChange={this.handleChange('profesor')} type=\"profesor\" >\r\n                                    <option> </option>\r\n                                    {this.state.profesores.map((prof) => (\r\n                                        <option key={prof._id} value={prof._id} >\r\n                                            {prof.nombre + \" \" + prof.apellido1 + \" \" + prof.apellido2}\r\n                                        </option>\r\n                                    ))\r\n\r\n                                    }\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        <button onClick={this.cambiarcoordinador} className=\"btn-style\" style={{ marginTop: '15px' }}> GUARDAR </button>\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Coordinador;",["354","355"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\pantallaInicial.js",["356","357","358","359","360"],"import React, { Component } from 'react';\nimport Global from '../Global';\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport imagenlogo from '../assets/images/logo-erasmus.png';\n\n\nimport imagen from '../assets/images/boton-alumno.png';\nimport imagenprof from '../assets/images/boton-profesor.png';\nimport '../assets/css/InicialScreen.css';\n\n\n\nclass pantallaInicial extends Component {\n\n    passwordRef = React.createRef();\n    usuarioRef = React.createRef();\n    gettoken = true;\n\n    url = Global.url;\n\n\n    state = {\n        alumno: {},\n        status: 'waiting',\n        nuevoAlumno: {},\n        token: \"\",\n        navigate: false\n    };\n\n\n    /* BUSCAR ALUMNOS EN LA BD */\n    change = () => {\n        this.setState({\n\n            nuevoAlumno: {\n                usuario: this.usuarioRef.current.value,\n                password: this.passwordRef.current.value\n\n            },\n\n        });\n\n    }\n\n\n\n\n\n\n\n    render() {\n\n        const { navigate } = this.state\n        if (navigate) {\n            return <Redirect to=\"/inicio\" push={true} />\n        }\n\n        return (\n\n            <div className=\"grid-inicio\">\n                <div className=\"logo-titulo\">\n                    <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                    <div className=\"titulo-completo\">\n                        <h3>Universidad de Huelva</h3>\n                        <h1> ERASMUS+ </h1>\n                    </div>\n                </div>\n                <hr className=\"linea\"></hr>\n\n                <div className=\"grid-logo-inicio\">\n                    \n                        <div className=\"boton-alumno\">\n\n                            <h3 id=\"header-boton\"> ALUMNOS </h3>\n                            <Link to={{\n                                pathname: '/inicioSesion',\n                                state: {\n                                    tipo: 'alumno'\n                                }\n                            }}>\n                                <img src={imagen} width=\"200px\" height=\"280px\"></img>\n                            </Link>\n\n\n                        </div>\n                        <div className='boton-profesor' >\n                            <h3 id=\"header-boton-prof\"> PROFESOR </h3>\n                            <Link to={{\n                                pathname: '/inicioSesion',\n                                state: {\n                                    tipo: 'profesor'\n                                }\n                            }}>\n                                <img src={imagenprof} width=\"200px\" height=\"280px\"></img>\n                            </Link>\n                        </div>\n                   \n\n                </div>\n                <div id=\"administrador\">\n                    <label>¿Eres administrador?</label> <Link to={\"/inicioAdministrador\"}>Inicia sesión aquí</Link>\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n        );\n\n    }\n}\n\nexport default pantallaInicial;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosUniversidad.js",["361","362","363","364","365","366","367","368"],"\n\nimport React, { Component } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\nimport Card from 'react-bootstrap/Card';\nimport '../../assets/css/NuevoUsuario.css';\nimport { Link } from 'react-router-dom';\nimport Global from '../../Global';\nimport SimpleReactValidator from 'simple-react-validator';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport class FormDatosUniversidad extends Component {\n\n    url = Global.url;\n\n    state = {\n        errors: {}\n    }\n\n    validate = e => {\n        const errors = {};\n        let regexnumeros = new RegExp(\"[0-9]{9}\");\n        //EDIFICIO \n        if (!this.props.values.edificio) {\n            errors.edificio = \"Campo obligatorio\";\n        }\n\n        //DESPACHO \n        if (!this.props.values.despacho) {\n            errors.despacho = \"Campo obligatorio\";\n        }\n        if (!this.props.values.telefono) {\n            errors.telefono = \"Campo obligatorio\";\n        }\n        else {\n            if (!regexnumeros.test(this.props.values.telefono)) {\n                errors.telefono = \"Número no valido\";\n            }\n        }\n\n        if (!this.props.values.tutoria) {\n            errors.tutoria = \"Campo obligatorio\";\n        }\n\n        return errors;\n    }\n\n    continue = e => {\n        e.preventDefault();\n        const { errors, ...sinErrors } = this.state;\n        const result = this.validate(sinErrors);\n\n        this.setState({ errors: result })\n        if (!Object.keys(result).length) {\n            this.props.nextStep();\n        }\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n\n    render() {\n\n\n        const { values, handleChange, tipo } = this.props;\n\n        return (\n            <div>\n\n                < div className=\"grid-inicio\">\n\n                    <div className=\"logo-titulo\">\n                        <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                        <div className=\"titulo-completo\">\n                            <h3>Universidad de Huelva</h3>\n                            <h1> ERASMUS+ </h1>\n                        </div>\n                    </div>\n                    <hr className=\"linea\"></hr>\n\n                    < div className=\"registro-nuevoUsuario\">\n                        <h1 className=\"titulo titulo-registro \"> ALTA DE PROFESOR/A</h1>\n                        <h1 className=\"titulo titulo-registro titulo-registro-secundario\"> DATOS UNIVERSIDAD </h1>\n                        <div className=\"subtitulo\">Es posible que otros usuarios puedan ver parte de la infomación al usar la plataforma. </div>\n                        <Link to='/' className=\"link-cancelar\">Cancelar registro de usuario</Link>\n                        <br />\n                        <Card className=\"card-nuevoUser\">\n\n                            <Form>\n                                <Form.Group >\n\n                                    <Form.Control\n                                        onChange={handleChange('edificio')}\n                                        defaultValue={values.edificio}\n                                        type=\"text\"\n                                        name=\"edificio\"\n                                        placeholder=\"Edificio\" />\n                                    {this.state.errors.edificio && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.edificio}</Form.Label>}\n                                </Form.Group>\n                                <Form.Group >\n\n                                    <Form.Control\n                                        onChange={handleChange('despacho')}\n                                        defaultValue={values.despacho}\n                                        type=\"number\"\n                                        name=\"despacho\"\n                                        placeholder=\"Número de despacho\" />\n                                    {this.state.errors.despacho && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.despacho}</Form.Label>}\n                                </Form.Group>\n                                <Form.Group >\n\n                                    <Form.Control\n                                        onChange={handleChange('telefono')}\n                                        defaultValue={values.telefono}\n                                        type=\"phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Teléfono\" />\n                                    {this.state.errors.telefono && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.telefono}</Form.Label>}\n                                </Form.Group>\n                                <Form.Group >\n\n                                    <textarea\n                                        className=\"form-control-textarea\"\n                                        style={{ width: '380px', height: '50px' }}\n                                        onChange={handleChange('datos')}\n                                        defaultValue={values.datos}\n                                        type=\"textarea\"\n                                        name=\"datos\"\n                                        placeholder=\"Datos de interés\" />\n\n                                </Form.Group>\n                                <Form.Group >\n\n                                    <textarea\n                                        className=\"form-control-textarea\"\n                                        style={{ width: '380px', height: '50px' }}\n                                        onChange={handleChange('tutoria')}\n                                        defaultValue={values.tutoria}\n                                        type=\"textarea\"\n                                        name=\"datos\"\n                                        placeholder=\"Tutorias\" />\n\n                                </Form.Group>\n\n\n                                <button\n                                    label=\"continue\"\n                                    className=\"btn-continue form-login\"\n                                    style={styles.button}\n                                    onClick={this.continue}\n                                    formnovalidate\n                                > CONTINUAR </button>\n                                <button\n                                    label=\"volver\"\n                                    className=\"btn-back form-login\"\n                                    style={styles.button}\n                                    onClick={this.back}\n                                > VOLVER </button>\n                            </Form>\n                            <br></br>\n\n\n                        </Card>\n\n                    </div>\n\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    button: { margin: 15 }\n}\n\nexport default FormDatosUniversidad;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Informacion.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React, { Component } from 'react';\nimport Sidebar from './Sidebar';\nimport imagen from '../assets/images/Ayuda-Estrella.png';\nimport Header from './Header';\n\nclass Informacion extends Component {\n    render() {\n        return (\n            <div  className=\"informacion\">\n                <h1 className=\"titulo-doc\"> INFORMACIÓN </h1>\n                <div className=\"ayuda\">\n                        <img src={imagen} alt=\"Ayuda\" />\n                        <a href=\"http://www.uhu.es/sric/uploads/2019/05/paso_a_paso_E_19-20.pdf\" target=\"_blanck\">¡Ayuda! Paso a Paso </a>\n                    </div>\n                <div className=\"grid-informacion\">\n\n                    <div>\n                        <h2> Antes de la movilidad </h2>\n\n                        <ul>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Modelo_renuncia_19-20.pdf\" target=\"_blank\"> Modelo de renuncia</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Fechas-limites.pdf\" target=\"_blank\">Fechas limite</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/CPRA_1920.doc\" target=\"_blank\">CPRA</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Learning_Agreement_1920.doc\" target=\"_blank\">Learning agreement</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2017/04/docs_Codigos_erasmus.pdf\" target=\"_blank\">Códigos Erasmus</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2017/04/docs_codigosCINE.pdf\" target=\"_blank\">Códigos CINE 2013</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Steps_to_fill_in_the_learning_agreement.pdf\" target=\"_blank\">Pasos para rellenar el Learning agreement</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Justificacion_creditos_erasmus.pdf\" target=\"_blank\">Justificación de exceso de créditos Erasmus</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Plantilla_Extrato_notas_ingles_19-20.pdf\" target=\"_blank\">Extracto de notas</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                    <h2> Durante la movilidad</h2>\n                        <ul>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Certificado_estancia.pdf\" target=\"_blank\">Certificado de estancia</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/CPRA_Mod_1920.doc\" target=\"_blank\">Modificacioón CPRA</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/LA_Mod_1920.doc\" target=\"_blank\">Modificación Learning agreement</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Solicitud-ampliacion-reduccion-estancia.pdf\" target=\"_blank\">Solicitud Ampliación/Reducción de Estancia</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                    <h2> Después de la movilidad</h2>\n                        <ul>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/LA_after_mobility.doc\" target=\"_blank\">Learning agreement after the mobility (Transcript)</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/Reconocimientos_Estudios.pdf\" target=\"_blank\">Solicitud Reconocimiento de Estudios</a>\n                            </li>\n                            <li>\n                                <a href=\"http://www.uhu.es/sric/uploads/2019/03/ACTA_RECONOCIMIENTO.pdf\" target=\"_blank\">Acta de Reconocimiento</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n\n\n\n            </div>\n\n        );\n    }\n\n\n}\n\n\nexport default Informacion;",["387","388"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\prueba.js",[],["389","390"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\PasswordEdit.js",["391","392","393","394","395","396","397","398","399","400","401","402","403"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../../assets/css/MiPerfil.css\";\nimport { NavLink } from 'react-router-dom';\nimport Global from '../../Global';\nimport ReactDOM from 'react-dom';\nimport swal from 'sweetalert';\nimport \"../../assets/css/Password.css\";\nimport MenuPerfil from './MenuPerfil';\nimport SimpleReactValidator from 'simple-react-validator';\nvar bcrypt = require('bcrypt-nodejs');\n\n\nclass PasswordEdit extends Component {\n\n  /*  passwordNuevaDos = React.createRef();\n    passwordNueva = React.createRef();\n    passwordActual = React.createRef();\n*/\n\n\n    url = Global.url;\n    urlprofesor=Global.urlprofesor;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: null,\n            alumno: {},\n            passwordNueva:\"\",\n            passwordNuevaDos: \"\",\n            passwordActual:\"\",\n           /* passwordActual: {},*/\n            errores: {\n                actual: null,\n                nueva: null,\n                nuevarep: null,\n            },\n            numerador: 0,\n\n        }\n\n    }\n\n\n\n\n    componentWillMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n        this.validator = new SimpleReactValidator({\n            messages: {\n                required: 'Este campo es requerido', //PERSONALIZAR MENSAJES DE ERROR\n                min: 'La contraseña debe contener como mínimo 8 caracteres'\n\n            }\n\n        });\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n\n    }\n\n\n\n    changeState = () => {\n        this.setState({\n            alumno: {\n                password: this.passwordNueva.current.value,\n            },\n\n            passwordNuevaDos: this.passwordNuevaDos.current.value,\n            passwordActual: {\n                password: this.passwordActual.current.value\n            }\n\n        });\n\n\n    }\n\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n\n    }\n\n    cambiarError(name) {\n        document.getElementById(name).style.borderColor = 'rgb(251,13,13,1)';\n\n    }\n\n\n\n    updatePassword = (e) => {\n        e.preventDefault();\n\n        var currentlypassword={\n            password: this.state.passwordActual\n        }\n\n        var nueva={\n            password: this.state.passwordNueva\n        }\n\n        console.log(currentlypassword);\n        console.log(nueva);\n\n        if(this.state.identity==='Alumno'){\n        if (this.state.passwordActual != \"\" && this.state.passwordNuevaDos != \"\" && this.state.passwordNueva != \"\") {\n            if (this.validator.fieldValid('min')) {\n                /* if(this.validator.allValid()){*/\n                   \n                axios.post(this.url + 'compararPassword/' + this.state.identity._id, currentlypassword)\n                    .then(res => {\n                        if (res.data.status == 'sucess') {\n                            if (this.state.passwordNueva == this.state.passwordNuevaDos) {\n                                \n                                axios.put(this.url + 'update-password/' + this.state.identity._id, nueva)\n                                    .then(res => {\n                                        if (res.data.alumno) {\n                                            this.setState({\n                                                alumno: res.data.alumno,\n                                                status: 'sucess'\n                                            });\n\n                                        } else {\n                                            this.setState({\n                                                status: 'failed'\n                                            });\n                                        }\n                                    });\n                            } else {\n                                this.setState({\n                                    errores: {\n                                        nueva: 'No coinciden las contraseñas',\n                                        nuevarep: 'No coinciden las contraseñas'\n                                    },\n                                    \n                                });\n                               /* this.cambiarError('input-error2');\n                                this.cambiarError('input-error3');*/\n                            }\n                        } else //no son iguales\n                        {\n                            this.setState({\n                                errores: {\n                                    actual: 'Contraseña incorrecta'\n                                },\n                                \n\n                            });\n                           /* this.cambiarError('input-error')*/\n\n                            console.log(\"error\");\n                        }\n                    });\n            } else {\n                this.validator.showMessages();\n                this.forceUpdate();\n            }\n        } else {\n            this.validator.showMessages();\n\n        }\n    }else{\n        console.log(\"profesor\")\n        if (this.state.passwordActual != null && this.state.passwordNuevaDos != null && this.state.passwordNueva != null) {\n           // if (this.validator.fieldValid('min')) {\n                console.log(\"no estan vacias\");\n                /* if(this.validator.allValid()){*/\n                axios.post(this.urlprofesor + 'compararPassword/' + this.state.identity._id, currentlypassword)\n                    .then(res => {\n                        console.log(\"2\");\n                        if (res.data.status == 'sucess') {\n                            if (this.state.passwordNueva == this.state.passwordNuevaDos) {\n                                console.log(\"son iguales\");\n                                axios.put(this.urlprofesor + 'update-password/' + this.state.identity._id, nueva)\n                                    .then(res => {\n                                        if (res.data.profesor) {\n                                            this.setState({\n                                                alumno: res.data.profesor,\n                                                status: 'sucess'\n                                            });\n\n                                            swal({\n                                                title: 'Documento creado con exito',\n                                                text: \"El documento ha sido creado correctamente\",\n                                                icon: \"sucess\",\n                                                buttons: true,\n                                            })\n                                        } else {\n                                            this.setState({\n                                                status: 'failed'\n                                            });\n                                        }\n                                    });\n                            } else {\n                                this.setState({\n                                    errores: {\n                                        nueva: 'No coinciden las contraseñas',\n                                        nuevarep: 'No coinciden las contraseñas'\n                                    },\n                                    \n                                });\n                               /* this.cambiarError('input-error2');\n                                this.cambiarError('input-error3');*/\n                            }\n                        } else //no son iguales\n                        {\n                            this.setState({\n                                errores: {\n                                    actual: 'Contraseña incorrecta'\n                                },\n                                \n\n                            });\n                           /* this.cambiarError('input-error')*/\n\n                            console.log(\"error\");\n                        }\n                    });\n           /* } else {\n                console.log(\"no\");\n                this.validator.showMessages();\n                this.forceUpdate();\n            }*/\n        } else {\n            console.log(\"no2\")\n            this.validator.showMessages();\n\n        }\n\n    }\n\n        this.forceUpdate();\n        this.formularioEnBlanco();\n\n    }\n\n    formularioEnBlanco=()=>{\n        this.setState({\n            passwordActual:\"\",\n            passwordNueva:\"\",\n            passwordNuevaDos:\"\"\n        })\n    }\n\n    render() {\n        this.validator.purgeFields();\n        return (\n\n            <div id=\"content\" className=\"grid-passw\">\n                <MenuPerfil />\n                <div>\n                    <h1 className=\"titulo\"> Contraseña </h1>\n\n                    <article className=\"elemt-one-passw\">\n\n                        <form className=\"elemt-form-passw\" onSubmit={this.updatePassword} noValidate>\n                            <div className=\"form-edit\">\n                            \n                                <label className=\"form-editpassw-value-title\">Contraseña actual</label>\n                                <input id=\"input-error\" className=\"form-editpassw-value\" name=\"actual\" value={this.state.passwordActual} onChange={this.handleChange('passwordActual')} type=\"password\" ref={this.passwordActual} required></input>\n                                <div className=\"error\" >\n                                    {this.validator.message('actual', this.state.passwordActual, 'required')}\n                                </div>\n\n                                {this.state.errores.actual != undefined &&\n                                    <label className=\"error\"> {this.state.errores.actual.toString()}</label>\n\n                                }\n\n                            </div>\n                            <label style={{ colore: 'grey', fontSize: '12px' }}>Las contraseñas deben de contener entre 8-12 carácteres. No incluir espacios, carácteres especiales o iconos</label>\n                            <div className=\"form-edit\">\n                                <label className=\"form-editpassw-value-title\">Nueva contraseña</label>\n                                <input id=\"input-error2\" className=\"form-editpassw-value\" name=\"nueva\" value={this.state.passwordNueva}  onChange={this.handleChange('passwordNueva')} type=\"password\" ref={this.passwordNueva} required></input>\n                                <div className=\"error\">\n                                    {this.validator.message('nueva', this.state.passwordNueva, 'required|min:8')}\n                                </div>\n                                {this.state.errores.nueva != undefined &&\n                                    <label className=\"error\"> {this.state.errores.nueva.toString()}</label>\n                                }\n                            </div>\n                            <div className=\"form-edit\">\n                                <label className=\"form-editpassw-value-title\">Vuelve a escribir la nueva contraseña</label>\n                                <input id=\"input-error3\" className=\"form-editpassw-value\" name=\"nuevarep\" value={this.state.passwordNuevaDos}  onChange={this.handleChange('passwordNuevaDos')} type=\"password\" ref={this.passwordNuevaDos} required></input>\n                                <div className=\"error\">\n                                    {this.validator.message('nuevarep', this.state.passwordNuevaDos, 'required|min:8')}\n                                </div>\n                                {this.state.errores.nuevarep != undefined &&\n                                    <label className=\"error\"> {this.state.errores.nuevarep.toString()}</label>\n                                }\n                            </div>\n                            <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-update\" ></input>\n                        </form>\n                    </article>\n                </div>\n            </div>\n        );\n    }\n\n\n\n\n}\n\nexport default PasswordEdit;",["404","405"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\mensaje.js",["406","407"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\destinos.js",["408","409","410","411","412","413","414","415","416","417","418"],"import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from './menu-admin';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport swal from 'sweetalert';\r\nimport Alert from 'bootstrap';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../../assets/css/admin.css';\r\nimport { ColorizeRounded } from '@material-ui/icons';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nclass destinos extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        profesores: [],\r\n        destino: {},\r\n        identity: JSON.parse(localStorage.getItem('user')),\r\n        status: 'false',\r\n        pais: \"\",\r\n        ciudad: \"\",\r\n        carrera: \"\",\r\n        profesor: \"\",\r\n        coordinador: {},\r\n        error:\"\"\r\n\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.listarProfesores();\r\n        this.getcoordinador();\r\n        this.handleChangeProf = this.handleChange.bind(this);\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            messages: {\r\n                required: 'Este campo es obligatorio',\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n\r\n    }\r\n\r\n    handleChangeProf(e) {\r\n\r\n        console.log(\"hola\");\r\n        this.setState({ profesor: e.target.value });\r\n        console.log(\"h\" + this.state.profesor);\r\n    }\r\n\r\n    formularioEnBlanco = () => {\r\n        this.setState({\r\n            pais: \"\",\r\n            ciudad: \"\",\r\n            carrera: \"\",\r\n            profesor: \"\",\r\n            coordinador: \"\",\r\n\r\n        });\r\n    }\r\n\r\n    listarProfesores() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    profesores: res.data.profesor,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    getcoordinador() {\r\n        console.log(\"getcoordinador\");\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/get-coordinador-centro')\r\n            .then(res => {\r\n                this.setState({\r\n                    coordinador: res.data.profesor\r\n                })\r\n                console.log(\"h\" + this.state.coordinador.nombre);\r\n                console.log(\"h\" + this.state.coordinador._id);\r\n\r\n            });\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n    añadirDestino = (e) => {\r\n\r\n        var body = {\r\n            pais: this.state.pais,\r\n            ciudad: this.state.ciudad,\r\n            carrera: this.state.carrera,\r\n            profesor: this.state.profesor,\r\n            coordinador: this.state.coordinador._id\r\n        };        \r\n\r\n        console.log(\"hola añadiendo\");\r\n        if (this.validator.allValid()) {\r\n        axios.post('https://plataforma-erasmus.herokuapp.com/apiDestino/' + 'save', body)\r\n            .then(res => {\r\n                console.log(\"añadido\")\r\n                this.setState({\r\n                    destino: res.data.destino,\r\n                    status:'sucess',\r\n                    error:\"\",\r\n\r\n                })\r\n                this.formularioEnBlanco();\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    destino: {},\r\n                    status: 'failed',\r\n                    error: 'El destino ya esta registrado'\r\n                });\r\n\r\n            });\r\n        }\r\n            else {\r\n                this.validator.showMessages();\r\n               // this.forceUpdate();\r\n            }\r\n            \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div  className=\"grid-mensajeria-col\">\r\n\r\n                    <Menu></Menu>\r\n                    <div>\r\n\r\n                        <h1 className=\"titulo-doc\"> NUEVO DESTINO </h1>\r\n                        <div className=\"form-destino\" >\r\n                        {this.state.error !=\"\" &&\r\n                        <label style={{color:'#A6250E', backgroundColor:'#F7A99C', width:'60%', textAlign:'center',margin:'auto', display:'block', fontWeight:'bold', marginTop:'20px'}}>\r\n                            {this.state.error}</label>\r\n                        }\r\n                        {this.state.status === 'sucess' &&\r\n                          <label style={{color:'#1D4C14', backgroundColor:'#DAF7A6', width:'60%', textAlign:'center',margin:'auto', display:'block', fontWeight:'bold', marginTop:'20px'}}>\r\n                              El destino ha sido añadido correctamente.</label>\r\n                        }\r\n                            <Form className=\"form-añadir-destino\" onSubmit={this.añadirDestino}>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Pais</Form.Label>\r\n                                    <Form.Control type=\"pais\" placeholder=\"Introduce el pais\" onChange={this.handleChange('pais')} name=\"pais\" />\r\n                                    {this.validator.message('pais', this.state.pais, 'required')}\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Ciudad</Form.Label>\r\n                                    <Form.Control name=\"ciudad\" type=\"ciudad\" placeholder=\"Introduce la ciudad\" onChange={this.handleChange('ciudad')} />\r\n                                    {this.validator.message('ciudad', this.state.ciudad, 'required')}\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Grado universitario</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange('carrera')} type=\"carrera\" name=\"carrera\">\r\n                                        <option></option>\r\n                                        <option>Grado en Ingeniería Informática</option>\r\n                                        <option>Grado en Ingeniería Agrícola</option>\r\n                                        <option>Grado en Ingeniería Química industrial</option>\r\n                                        <option>Grado en Ingeniería Eléctrica</option>\r\n                                        <option>Grado en Ingeniería Mecánica</option>\r\n                                        <option>Grado en Ingeniería Forestal y del medio natural</option>\r\n                                        <option>Grado en Ingeniería Electrónica industrial</option>\r\n                                        <option>Grado en Ingeniería Energética</option>\r\n                                        <option>Grado de Ingeniería en Exp. Minas y Rec. Energéticos</option>\r\n                                    </Form.Control>\r\n                                    {this.validator.message('carrera', this.state.carrera, 'required')}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Label> Coordinador de destino</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange('profesor')} type=\"profesor\" name=\"profesor\">\r\n                                        <option> </option>\r\n                                        {this.state.profesores.map((prof) => (\r\n                                            <option key={prof._id} value={prof._id} >\r\n                                                {prof.nombre + \" \" + prof.apellido1 + \" \" + prof.apellido2}\r\n                                            </option>\r\n                                        ))\r\n\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                    {this.validator.message('profesor', this.state.profesor, 'required')}\r\n                                </Form.Group>\r\n\r\n                                <input type=\"submit\" value=\"CREAR\" className=\"  button-join \" style={{width:'60%'}}></input>\r\n                            </Form>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default destinos;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\NuevoDocumento.js",["419","420","421","422","423"],"import React, { Component, useState } from 'react';\nimport GlobalDocumentos from '../GlobalDocumentos';\nimport Global from '../Global';\n\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport ButtonIcon from '@material-ui/core/Button';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\nimport Modal from 'react-bootstrap/Modal';\nimport \"../assets/css/dropbox.css\";\nimport SimpleReactValidator from 'simple-react-validator';\n\n\nclass NuevoDocumento extends Component {\n\n    titleRef = React.createRef();\n    nombreRef = React.createRef();\n    fileRef = React.createRef();\n    contentRef = React.createRef();\n    descripcionRef = React.createRef();\n\n    url = GlobalDocumentos.url;\n    urldocoficial = Global.url;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            documento: {},\n            documentoOficial: {},\n            nombre: \"\",\n            status: null,\n            statuss: null,\n            value: null,\n            selectedFile: null,\n            open: false,\n            identity: JSON.parse(localStorage.getItem('user')),\n\n\n\n        };\n    }\n\n    componentWillMount() {\n        this.validator = new SimpleReactValidator({\n            messages: {\n                required: 'Este campo es obligatorio',\n            }\n        });\n    }\n\n    changeState = () => {\n\n\n        if (this.props.type === \"documento-particular\") {\n            this.setState({\n                documento: {\n                    title: this.titleRef.current.value,\n                    //  url: this.fileRef.current.value,\n                    nombre: this.state.identity._id,\n                    tipoDocumento: null,\n                    tipousuario: this.state.identity.tipo,\n                    descripcion: this.descripcionRef.current.value,\n                    tipo_nube: 'particular'\n                }\n            });\n        }\n        else {\n            if (this.state.identity.tipo === \"profesor\") {\n                var alumnoid = { alumno: this.props.alumno }\n                console.log(\"change - profesor\" + alumnoid.alumno)\n                console.log(\"message:\" + this.props.message);\n                this.setState({\n                    documento: {\n                        title: this.titleRef.current.value,\n                        //    url: this.fileRef.current.value,\n                        nombre: this.state.identity._id, //propietario\n                        nombre2: alumnoid.alumno,\n                        tipoDocumento: null,\n                        tipousuario: this.state.identity.tipo,\n                        descripcion: this.descripcionRef.current.value,\n                        tipo_nube: \"compartida\"\n                    }\n                });\n            } else {\n                this.setState({\n                    documento: {\n                        title: this.titleRef.current.value,\n                        //   url: this.fileRef.current.value,\n                        nombre: this.state.identity._id, //propietario\n                        nombre2: this.state.identity.profesor,\n                        tipoDocumento: null,\n                        tipousuario: this.state.identity.tipo,\n                        descripcion: this.descripcionRef.current.value,\n                        tipo_nube: \"compartida\"\n                    }\n                });\n            }\n\n        }\n    }\n\n\n    changeStateDocOficial = (e) => {\n        this.setState({\n            documentoOficial: {\n                nombre: this.nombreRef.current.value,\n            }\n        })\n    }\n\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n\n    }\n\n\n    openModal = () => {\n        this.setState({ open: true });\n    }\n\n    onCloseModal = () => {\n        this.setState({ open: false })\n    }\n\n\n    saveDocument = (e) => {\n        e.preventDefault();\n\n        // 1- Rellenar el state con el formulario\n        this.changeState();\n\n        const formData = new FormData();\n\n        formData.append(\n            'file0',\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        var docId;\n       \n\n        axios.post(this.url + 'saveDoc', this.state.documento)\n            .then(res => {\n                if (res.data.documento) {\n\n                    this.setState({\n                        documento: res.data.documento,\n                        status: 'waiting'\n                    });\n\n\n                    docId = this.state.documento._id;\n                    console.log(\"id del documento\" + docId);\n                }\n\n\n                axios.post('https://plataforma-erasmus.herokuapp.com/apiImages/images-add', formData)\n                    .then(res => {\n                        console.log(\"en proceso\")\n\n\n                        axios.put(this.url + 'add-files/' + docId, res.data.image)\n                       \n\n                            .then(res => {\n                                this.setState({\n\n                                    status: 'sucess',\n\n                                })\n\n                                swal({\n                                    title: 'Documento creado con exito',\n                                    text: \"El documento ha sido creado correctamente\",\n                                    icon: \"sucess\",\n                                    buttons: true,\n                                })\n                                    .then((value) => {\n                                        if (value) {\n                                            window.location.reload(true);\n                                        }\n                                    });\n\n                            });\n\n\n                    });\n            });\n\n\n    }\n\n\n    saveDocOficial = (e) => {\n\n        e.preventDefault();\n        const formDatadoc = new FormData();\n\n\n        console.log(this.state.selectedFile);\n\n        formDatadoc.append(\n            'file0',\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n\n        // VENTANA ALUMNO\n        if (this.props.type === \"nuevo\") {\n\n        \n\n            axios.post('https://plataforma-erasmus.herokuapp.com/apiImages/images-add', formDatadoc)\n                .then(res => {\n                    console.log(\"en proceso\")\n\n\n                    axios.put(this.urldocoficial + 'add-files-oficial/' + this.state.identity._id + '/' + this.state.nombre, res.data.image)\n                        \n                   \n\n                    .then(res => {\n                            this.setState({\n                                status: 'sucess',\n\n                            })\n\n\n                            swal({\n                                title: 'Documento creado con exito',\n                                text: \"El documento ha sido creado correctamente\",\n                                icon: \"sucess\",\n                                buttons: true,\n                            })\n                                .then((value) => {\n                                    if (value) {\n                                        window.location.reload(true);\n                                    }\n                                });\n\n                        });\n\n\n                });\n\n\n            //VENTANA PROFESOR\n        } else {\n\n            axios.post('https://plataforma-erasmus.herokuapp.com/apiImages/images-add', formDatadoc)\n                .then(res => {\n                    console.log(\"en proceso\")\n\n\n                    axios.put(this.urldocoficial + 'add-files-oficial/' + this.props.type + '/' + this.state.nombre, res.data.image)\n                        .then(res => {\n                            this.setState({\n                                status: 'sucess',\n\n                            })\n\n                            swal({\n                                title: 'Documento creado con exito',\n                                text: \"El documento ha sido creado correctamente\",\n                                icon: \"sucess\",\n                                buttons: true,\n                            })\n                                .then((value) => {\n                                    if (value) {\n                                        window.location.reload(true);\n                                    }\n                                });\n\n                        });\n\n\n                });\n\n\n        }\n\n\n\n    }\n\n\n    notificarProfesor = () => {\n        var mensaje = {\n            asunto: 'Modificación del documento ' + this.state.nombre,\n            texto: 'El documento ' + this.state.nombre + ' se ha subido por parte del alumno ' + this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2\n                + '  Puede obtener más información en el apartado de ALUMNOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { profesor: this.state.identity.profesor }\n        }\n\n        var mensaje2 = {\n            asunto: 'Modificación del documento ' + this.state.nombre,\n            texto: 'El documento ' + this.state.nombre + ' se ha subido por parte del alumno ' + this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2\n                + 'Puede obtener más información en el apartado de ALUMNOS',\n\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { profesor: this.state.identity.coordinador }\n        }\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/api/mensaje', mensaje)\n            .then(res => {\n                this.setState({\n                    nuevoMensaje: res.data.mensaje,\n                    status: 'sucess',\n                });\n            })\n            .catch(err => {\n                this.setState({\n                    status: 'failed'\n                });\n            });\n\n        if (this.state.documentoOficial.nombre == 'CPRA' || this.state.documentoOficial.nombre == 'Modificacion_CPRA') {\n            axios.post('https://plataforma-erasmus.herokuapp.com/api/mensaje', mensaje2)\n                .then(res => {\n                    this.setState({\n                        nuevoMensaje: res.data.mensaje,\n                        status: 'sucess',\n                    });\n                })\n                .catch(err => {\n                    this.setState({\n                        status: 'failed'\n                    });\n                });\n        }\n    }\n\n\n    notificarAlumno = () => {\n        var mensaje = {\n            asunto: ' Modificación del documento ' + this.state.nombre,\n            texto: 'El documento ' + this.state.nombre + ' se ha subido por parte del profesor ' + this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2\n                + '  Puede obtener más información en el apartado de DOCUMENTOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { alumno: this.props.type }\n        }\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/mensaje', mensaje)\n            .then(res => {\n                this.setState({\n                    nuevoMensaje: res.data.mensaje,\n                    status: 'sucess',\n                });\n            })\n            .catch(err => {\n                this.setState({\n                    status: 'failed'\n                });\n            });\n    }\n\n    fileChange = (event) => {\n\n        this.setState({\n\n            selectedFile: event.target.files[0] //aqui tengo el fichero que quiero subir.\n\n        });\n\n    }\n\n\n    render() {\n\n\n        /* if (this.state.status === 'sucess' || this.state.statuss=== 'sucess') {\n             window.location.reload(true);\n     \n         }\n         const { open } = this.state.open;*/\n\n\n        if (this.props.type === 'documento') {\n            return (\n\n\n                <div>\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={this.openModal}>\n                        <AddIcon onClick={this.openModal} />\n                    </Fab>\n\n\n                    <Modal show={this.state.open} onHide={this.onCloseModal} animation={false}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>SUBIR ARCHIVO</Modal.Title>\n                        </Modal.Header>\n                        <strong style={{ textAlign: 'center', fontSize: '16px' }}>¡Recuerda!</strong>\n                        <h5 style={{ textAlign: 'center', fontSize: '16px' }}>Sólo se pueden subir imagenes o archivos con formato .pdf .jpg ó .png</h5>\n                        <Modal.Body>\n\n                            <form onSubmit={this.saveDocument} className=\"nuevo-doc\" enctype=\"multipart/form-data\">\n                                <div >\n                                    {/*<label for=\"tittle\">Titulo:</label>*/}\n                                    <input type=\"text\" id=\"tittle\" name=\"tittle\" ref={this.titleRef} placeholder=\"Titulo\" className=\"form-input-nuevo\" maxlength=\"35\" />\n                                    {this.validator.message('tittle', this.state.documento.title, 'required')}\n                                </div>\n                                <div >\n                                    {/*<label for=\"tittle\">Titulo:</label>*/}\n                                    <textarea type=\"text\" id=\"descripcion\" name=\"descripcion\" ref={this.descripcionRef} maxlength=\"80\" placeholder=\"Comentario (opcional)\" className=\"form-input-nuevo\" style={{ resize: 'none' }} />\n\n                                </div>\n                                <div id=\"div_file\" >\n                                    {/*} <label htmlFor=\"file0\"> URL: </label>*/}\n                                    <input type=\"file\" name=\"file0\" onChange={this.fileChange} ref={this.fileRef} className=\"form-input-nuevo\" />\n                                    {this.validator.message('file0', this.state.selectedFile, 'required')}\n                                </div>\n                                <input type=\"submit\" value=\"SUBIR\" className=\"btn-submit\" ></input>\n                            </form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button variant=\"secondary\" onClick={this.onCloseModal} className=\"btn-cerrar\">\n                                Close\n                             </button>\n\n                        </Modal.Footer>\n                    </Modal>\n\n                </div>\n            );\n        } else if (this.props.type === \"documento-particular\") {\n            return (\n                <div>\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={this.openModal}>\n                        <AddIcon onClick={this.openModal} />\n                    </Fab>\n\n\n                    <Modal show={this.state.open} onHide={this.onCloseModal} animation={false}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>SUBIR ARCHIVO</Modal.Title>\n\n                        </Modal.Header>\n                        <strong style={{ textAlign: 'center', fontSize: '16px' }}>¡Recuerda!</strong>\n                        <h5 style={{ textAlign: 'center', fontSize: '16px' }}>Sólo se pueden subir imagenes o archivos con formato .pdf .jpg ó .png</h5>\n                        <Modal.Body>\n                            <form onSubmit={this.saveDocument} className=\"nuevo-doc\" encType=\"multipart/form-data\">\n                                <div >\n                                    {/*<label for=\"tittle\">Titulo:</label>*/}\n                                    <input type=\"text\" id=\"tittle\" name=\"tittle\" ref={this.titleRef} placeholder=\"Titulo\" maxlength=\"35\" className=\"form-input-nuevo\" />\n                                    {this.validator.message('tittle', this.state.documento.title, 'required')}\n                                </div>\n                                <div >\n                                    {/*<label for=\"tittle\">Titulo:</label>*/}\n                                    <textarea type=\"text\" id=\"descripcion\" name=\"descripcion\" ref={this.descripcionRef} maxlength=\"80\" placeholder=\"Comentario (opcional)\" className=\"form-input-nuevo\" style={{ resize: 'none' }} />\n\n                                </div>\n                                <div id=\"div_file\" >\n                                    {/*} <label htmlFor=\"file0\"> URL: </label>*/}\n                                    <input type=\"file\" name=\"file0\" onChange={this.fileChange} ref={this.fileRef} className=\"form-input-nuevo\" />\n                                    {this.validator.message('file0', this.state.selectedFile, 'required')}\n                                </div>\n                                <input type=\"submit\" value=\"SUBIR\" className=\"btn-submit\" ></input>\n                            </form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button variant=\"secondary\" onClick={this.onCloseModal} className=\"btn-cerrar\">\n                                Close\n                         </button>\n\n                        </Modal.Footer>\n                    </Modal>\n\n                   \n                </div>\n            );\n        } else {\n\n            return (\n                <div>\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={this.openModal} >\n                        <AddIcon onClick={this.openModal} />\n                    </Fab>\n\n                    <Modal show={this.state.open} onHide={this.onCloseModal} animation={false}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>SUBIR DOCUMENTO</Modal.Title>\n                        </Modal.Header>\n                        <strong style={{ textAlign: 'center', fontSize: '16px' }}>¡Recuerda!</strong>\n                        <h5 style={{ textAlign: 'center', fontSize: '16px' }}>Sólo se pueden subir documentos con formato .pdf </h5>\n                        <Modal.Body>\n\n                            <form onSubmit={this.saveDocOficial} className=\"nuevo-doc\" enctype=\"multipart/form-data\">\n                                <div className=\"form-subir\">\n                                    <label for=\"tittle\">Seleccionar documento:</label>\n                                    <select className=\"form-input-nuevo\" ref={this.nombreRef} onChange={this.handleChange('nombre')}>\n                                        <option selected value=\"\"></option>\n                                        <option value=\"CPRA\">CPRA</option>\n                                        <option value=\"Learning_Agreement\">Learning Agreement</option>\n                                        <option value=\"Modificacion_CPRA\">Modificacion CPRA</option>\n                                        <option value=\"Modificacion_LA\">Modificacion LA</option>\n                                    </select>\n                                    {this.validator.message('tittle', this.state.documentoOficial.nombre, 'required')}\n                                </div>\n                                <div id=\"div_file\" className=\"form-subir\">\n                                    {/*} <label htmlFor=\"file0\"> URL: </label>*/}\n                                    <input type=\"file\" name=\"file0\" onChange={this.fileChange} ref={this.fileRef} className=\"form-input-nuevo\" />\n                                    {this.validator.message('file0', this.state.selectedFile, 'required')}\n                                </div>\n                                <input type=\"submit\" value=\"SUBIR\" className=\"btn-submit\" ></input>\n                            </form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button variant=\"secondary\" onClick={this.onCloseModal} className=\"btn-cerrar\">\n                                Close\n                             </button>\n\n                        </Modal.Footer>\n                    </Modal>\n\n                    \n                </div>\n\n            );\n        }\n    }\n}\n\nexport default NuevoDocumento;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\InicioSesion.js",["424","425","426","427","428","429"],"C:\\Ana\\servidor2.0\\cliente\\src\\GlobalProfesor.js",[],["430","431"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\EditPefil.js",["432","433","434","435","436","437","438","439","440","441"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../../assets/css/MiPerfil.css\";\n\nimport Global from '../../Global';\nimport ReactDOM from 'react-dom';\nimport swal from 'sweetalert';\nimport MenuPerfil from './MenuPerfil';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport SimpleReactValidator from 'simple-react-validator';\n\nclass EditPerfil extends Component {\n\n    state = {\n        identity: null,\n        alumno: {},\n        profesor: {},\n        alumnoNuevo: {},\n        profesorNuevo: {},\n        selectedFile: null,\n        token: \"\",\n        navigate: false,\n    }\n\n\n\n    nombreRef = React.createRef();\n    usuarioRef = React.createRef();\n    emailRef = React.createRef();\n    telefonoRef = React.createRef();\n    edificioRef = React.createRef();\n    despachoRef = React.createRef();\n    apellido1Ref = React.createRef();\n    apellido2Ref = React.createRef();\n    imageRef = React.createRef();\n    datosRef = React.createRef();\n    tutoriasRef = React.createRef();\n\n    url = Global.url;\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n        this.validator = new SimpleReactValidator({\n            messages: {\n                required: 'Este campo es obligatorio',\n                alpha_space: 'No puede contener carácteres numéricos',\n                phone: 'Debe de ser un número de teléfono válido'\n            },\n            email: {\n                messages: 'Correo invalido. Ej: usuario.usuario@alu.uhu.es',\n                rule: (val, params, validator) => {\n                    return validator.helpers.testRegex(val, /([a-zA-Z]+.[a-zA-Z]+(@alu.uhu.es)$)/i) && params.indexOf(val) === -1\n                }\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n    }\n\n\n    changeState = () => {\n        this.setState({\n            alumno: {\n                nombre: this.nombreRef.current.value,\n                usuario: this.usuarioRef.current.value,\n                apellido1: this.apellido1Ref.current.value,\n                apellido2: this.apellido2Ref.current.value,\n                email: this.emailRef.current.value,\n                telefono: this.telefonoRef.current.value,\n\n\n\n\n            }\n        });\n\n    }\n\n    changeStateProfesor = () => {\n        this.setState({\n            profesor: {\n                nombre: this.nombreRef.current.value,\n                usuario: this.usuarioRef.current.value,\n                apellido1: this.apellido1Ref.current.value,\n                apellido2: this.apellido2Ref.current.value,\n                email: this.emailRef.current.value,\n                telefono: this.telefonoRef.current.value,\n                edificio: this.edificioRef.current.value,\n                despacho: this.despachoRef.current.value,\n                datos: this.datosRef.current.value,\n                tutoria: this.tutoriasRef.current.value,\n\n\n\n            }\n        });\n    }\n\n    fileChange = (event) => {\n        this.setState({\n            selectedFile: event.target.files[0] //aqui tengo el fichero que quiero subir.\n\n        });\n\n    }\n\n    updateUser = (e) => {\n        e.preventDefault();\n\n        this.changeState();\n        console.log(\"HOLA\");\n        if (this.validator.allValid()) {\n            axios.put(this.url + 'update-user/' + this.state.identity._id, this.state.alumno)\n                .then(res => {\n                    console.log(\"HOLA2\");\n                    this.setState({\n                        alumno: res.data.user,\n                        status: 'sucess',\n\n                    });\n                    console.log(\"prueba alumno:\" + this.state.alumno.telefono);\n                    localStorage.setItem('user', JSON.stringify(this.state.alumno));\n\n                    swal(\n                        '¡Perfil Actualizado!',\n                        'Su perfil ha sido actualizado correctamente',\n                        'sucess'\n                    )\n                })\n                .catch(err => {\n                    this.setState({\n                        alumno: {},\n                        status: 'failed'\n                    });\n                });\n        }\n        else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n\n\n\n    }\n\n    updateUserProfesor = (e) => {\n        e.preventDefault();\n        this.changeStateProfesor();\n\n        if (this.validator.allValid()) {\n            axios.put('https://plataforma-erasmus.herokuapp.com/apiProfesor/update-user/' + this.state.identity._id, this.state.profesor)\n                .then(res => {\n                    console.log(\"HOLA2\");\n                    this.setState({\n                        profesor: res.data.user,\n                        status: 'sucess',\n\n                    });\n                    console.log(\"prueba alumno:\" + this.state.profesor.edificio);\n                    localStorage.setItem('user', JSON.stringify(this.state.profesor));\n\n                    swal(\n                        '¡Perfil Actualizado!',\n                        'Su perfil ha sido actualizado correctamente',\n                        'sucess'\n                    )\n                })\n                .catch(err => {\n                    this.setState({\n                        profesor: {},\n                        status: 'failed'\n                    });\n                });\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n\n\n    }\n\n    updateImage = (e) => {\n        e.preventDefault();\n\n\n        console.log(this.state.selectedFile.name);\n       \n        const formData = new FormData();\n        formData.append(  //le vamos a vincular un fichero\n            'file0',\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n       \n\n      /*  axios.delete(this.url + 'delete-image/' + this.state.identity._id)\n            .then(res => {\n                console.log(\"sucess\");\n\n            });\n\n        axios.post(this.url + 'upload-image-user/' + this.state.identity._id, formData)\n            .then(res => {\n                console.log(\"actualizacion realizada\")\n                this.setState({\n                    alumnoNuevo: res.data.alumno,\n                    status: 'sucess',\n                    navigate: true\n                })\n                localStorage.setItem('user', JSON.stringify(this.state.alumnoNuevo));\n            })\n*/\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/apiImages/images-add', formData)\n            .then(res=>{\n               console.log(\"en proceso\")\n\n           \n            axios.put(this.url+ 'add-files/' + this.state.identity._id, res.data.image)  \n                .then(res=>{\n                    this.setState({\n                        alumnoNuevo: res.data.alumno,\n                        status: 'sucess',\n                        navigate:true\n                    })\n                    localStorage.setItem('user', JSON.stringify(this.state.alumnoNuevo));\n                });\n            })\n}\n\n    updateImageProfesor = (e) => {\n        e.preventDefault();\n\n        console.log(this.state.selectedFile.name);\n        const formData = new FormData();\n        formData.append(  //le vamos a vincular un fichero\n            'file0',\n            this.state.selectedFile,\n            this.state.selectedFile.name\n        );\n\n        //1º eliminamos la imagen anterior\n        console.log(\"eliminar\");\n        axios.delete('https://plataforma-erasmus.herokuapp.com/apiProfesor/delete-image/' + this.state.identity._id)\n            .then(res => {\n                console.log(\"sucess\");\n\n            });\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/apiProfesor/upload-image-user/' + this.state.identity._id, formData)\n            .then(res => {\n                console.log(\"actualizacion realizada\")\n                this.setState({\n                    profesorNuevo: res.data.profesor,\n                    status: 'sucess',\n                    navigate: true\n                })\n                localStorage.setItem('user', JSON.stringify(this.state.profesorNuevo));\n            })\n    }\n\n\n    render() {\n        const { navigate } = this.state\n        if (navigate) {\n            window.location.reload(true);\n        }\n\n        return (\n            <div>\n                {this.state.identity.tipo === 'Alumno' &&\n\n                    <div id=\"content\" className=\"grid\">\n                        <MenuPerfil />\n                        <div className=\"avatar-edit\" id=\"avatar-big\">\n                            <img src={ this.state.identity.image} classname=\" avatar-edit\"></img>\n\n                        </div>\n                        <div>\n                            <h1 className=\"titulo\"> Editar Perfil </h1>\n                            <div className=\"avatar-edit\" id=\"avatar-responsive\">\n                                <img src={this.state.identity.image} classname=\" avatar-edit\"></img>\n\n                            </div>\n                            <article className=\" elemt-one-edit\">\n\n                                <Form className=\"elemt-form\" onSubmit={this.updateUser}>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Nombre </label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.nombre}\n                                            ref={this.nombreRef} />\n                                        {this.validator.message('nombre', this.state.alumno.nombre, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Primer apellido</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.apellido1}\n                                            ref={this.apellido1Ref} />\n                                        {this.validator.message('apellido1', this.state.alumno.apellido1, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Segundo apellido</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.apellido2}\n                                            ref={this.apellido2Ref} />\n                                        {this.validator.message('apellido2', this.state.alumno.apellido2, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Usuario</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.usuario}\n                                            ref={this.usuarioRef} />\n                                        {this.validator.message('usuario', this.state.alumno.usuario, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Email</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.email}\n                                            ref={this.emailRef} />\n                                        {this.validator.message('email', this.state.alumno.email, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\">\n                                        <label className=\"form-edit-value-title\">Teléfono</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeState}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.telefono}\n                                            ref={this.telefonoRef} />\n                                        {/* {this.validator.message('telefono', this.state.alumno.telefono, 'phone', { className: 'text-danger' })}*/}\n                                    </Form.Group>\n\n\n\n\n                                    <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-update\" ></input>\n                                </Form>\n\n\n                            </article>\n\n                            <article className=\"elemt-one\">\n                                <Form className=\"elemt-formImage\" onSubmit={this.updateImage}>\n                                    <div className=\"form-editImage\">\n                                        <label className=\"form-editImage-value-title\">Imagen de perfil</label>\n                                        <br />\n                                        <input className=\"form-editImage-value\" type=\"file\" name=\"file0\" onChange={this.fileChange} required />\n\n                                    </div>\n                                    <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-update\" ></input>\n                                </Form>\n                            </article>\n                        </div>\n                    </div>\n                }\n                {this.state.identity.tipo === 'profesor' || this.state.identity.tipo === 'administrador' &&\n                    <div id=\"content\" className=\"grid\">\n                        <MenuPerfil />\n                        <div className=\"avatar\" id=\"avatar-big\">\n                            <img src={'https://plataforma-erasmus.herokuapp.com/public/' + this.state.identity.image} classname=\" avatar-edit\"></img>\n\n                        </div>\n                        <div>\n                            <h1 className=\"titulo\"> Editar Perfil </h1>\n                            <div className=\"avatar\" id=\"avatar-responsive\">\n                                <img src={'https://plataforma-erasmus.herokuapp.com/public/' + this.state.identity.image} classname=\" avatar-edit\"></img>\n\n                            </div>\n                            <article className=\"elemt-one-edit\">\n\n                                <Form className=\"elemt-form\" onSubmit={this.updateUserProfesor}>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Nombre </label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.nombre}\n                                            ref={this.nombreRef} />\n\n                                        {this.validator.message('nombre', this.state.profesor.nombre, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Primer apellido</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.apellido1}\n                                            ref={this.apellido1Ref} />\n                                        {this.validator.message('apellido1', this.state.profesor.apellido1, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Segundo apellido</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.apellido2}\n                                            ref={this.apellido2Ref} />\n                                        {this.validator.message('apellido2', this.state.profesor.apellido2, 'required|alpha_space', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Usuario</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.usuario}\n                                            ref={this.usuarioRef} />\n                                        {this.validator.message('usuario', this.state.profesor.usuario, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Correo electrónico</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.email}\n                                            ref={this.emailRef} />\n                                        {this.validator.message('email', this.state.profesor.email, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Teléfono</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.telefono}\n                                            ref={this.telefonoRef} />\n                                        {/*  {this.validator.message('telefono', this.state.profesor.telefono, 'phone', { className: 'text-danger' })}*/}\n                                    </Form.Group>\n\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Edificio</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"text\"\n                                            defaultValue={this.state.identity.edificio}\n                                            ref={this.edificioRef}\n                                            maxLength=\"50\" />\n                                        {this.validator.message('edificio', this.state.profesor.edificio, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '0.8em' }}>\n                                        <label className=\"form-edit-value-title\">Numero despacho</label>\n                                        <Form.Control\n                                            className=\"form-edit-value\"\n                                            onChange={this.changeStateProfesor}\n                                            type=\"number\"\n                                            defaultValue={this.state.identity.despacho}\n                                            ref={this.despachoRef} />\n                                        {this.validator.message('despacho', this.state.profesor.despacho, 'required', { className: 'text-danger' })}\n                                    </Form.Group>\n\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '1.2em' }}>\n                                        <label className=\"form-edit-value-title \">Datos de interes</label>\n                                        <textarea\n                                            className=\" form-control form-edit-value form-edit-value-textarea\"\n                                            style={{ resize: 'none' }}\n                                            onChange={this.changeStateProfesor}\n                                            type=\"textarea\"\n                                            defaultValue={this.state.identity.datos}\n                                            ref={this.datosRef}\n                                            maxLength=\"80\" />\n\n                                    </Form.Group>\n                                    <Form.Group className=\"form-edit\" style={{ marginBottom: '1.5em' }}>\n                                        <label className=\"form-edit-value-title\">Tutorias</label>\n                                        <textarea\n                                            className=\" form-control form-edit-value form-edit-value-textarea\"\n                                            style={{ resize: 'none' }}\n                                            onChange={this.changeStateProfesor}\n                                            type=\"textarea\"\n                                            defaultValue={this.state.identity.tutoria}\n                                            ref={this.tutoriasRef}\n                                            maxLength=\"80\"\n                                        />\n\n                                    </Form.Group>\n\n                                    <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-update\" style={{ float: 'right' }}></input>\n                                </Form>\n\n\n                            </article>\n\n                            <article className=\"elemt-one-edit\">\n                                <form className=\"elemt-formImage\" onSubmit={this.updateImageProfesor}>\n                                    <div className=\"form-editImage\">\n                                        <label className=\"form-editImage-value-title\">Imagen de perfil</label>\n                                        <br />\n                                        <input className=\"form-editImage-value\" type=\"file\" name=\"file0\" onChange={this.fileChange} required />\n\n                                    </div>\n                                    <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-update\" ></input>\n                                </form>\n                            </article>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n\n\n\n}\n\nexport default EditPerfil;\n","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\Success.js",["442","443","444"],"\n\nimport React, { Component } from 'react';\nimport { Redirect, Link, hashHistory } from 'react-router-dom';\n\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\nimport Card from 'react-bootstrap/Card';\n\n\n\nexport class Sucess extends Component {\n    render() {\n\n\n        return (\n            <div className=\"grid-inicio\">\n                <div className=\"logo-titulo\">\n                    <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                    <div className=\"titulo-completo\">\n                        <h3>Universidad de Huelva</h3>\n                        <h1> ERASMUS+ </h1>\n                    </div>\n                </div>\n                <hr className=\"linea\"></hr>\n\n                <div className=\"registro-nuevoUsuario\">\n                    <h1 className=\"titulo titulo-registro \"> ALTA DE ALUMNO/A</h1>\n\n                    <Card className=\"card-nuevoUser card-mensajes-sucess card-bajas\">\n\n                        <div className=\"mensaje-sucess\">\n                            <h1 style={{ fontSize: '30px' }}>USUARIO GUARDADO CORRECTAMENTE</h1>\n                            <br></br>\n                            <h2 style={{ fontSize: '22px' }}>Pulse <strong> <Link\n                                label=\"continue\"\n\n                                className=\" link-continue\"\n                                style={styles.button}\n                                to={\n                                    '/'\n                                }\n\n                            > SIGUIENTE </Link></strong> para ser redirigido a la pagina de Inicio de Sesion</h2>\n\n                        </div>\n\n\n\n\n                        <br></br>\n\n\n                    </Card>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    button: { margin: 15 }\n}\n\nexport default Sucess;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Documentos.js",["445","446","447","448","449","450","451"],"import React, { Component } from 'react';\nimport GlobalDocumentos from '../GlobalDocumentos';\nimport axios from 'axios';\nimport Moment from 'react-moment';\n\nimport ButtonIcon from \"@material-ui/core/Button\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport swal from 'sweetalert';\n\n/*IMAGENES - BOTONES */\n\nimport btn2 from '../assets/images/pdf.png';\n\nimport btn4 from '../assets/images/default.png';\n\n\nclass Documentos extends Component {\n\n    url = GlobalDocumentos.url;\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: JSON.parse(localStorage.getItem('user')),\n            documentos: [],\n            status: null,\n\n        };\n\n    }\n\n\n    componentWillMount() {\n        this.getDocumentos();\n    }\n\n\n    getDocumentos() {\n\n        var id = this.props.alumno;\n        console.log(id);\n        if (id == null) {\n            console.log(\"hola\");\n            axios.get(this.url + \"documentos\" + \"/\" + this.state.identity.usuario)\n                .then(res => {\n                    this.setState({\n                        documentos: res.data.documento,\n                        status: 'sucess'\n                    });\n                });\n        }\n        else {\n            console.log(\"hola2\");\n            axios.get(this.url + \"documentos\" + \"/\" + id)\n                .then(res => {\n                    this.setState({\n                        documentos: res.data.documento,\n                        status: 'sucess'\n                    });\n                });\n        }\n    }\n\n    delete(title) {\n        axios.delete(this.url + \"delete/\" + title)\n            .then(res => {\n                this.setState({\n                    status: 'sucess'\n                })\n            })\n        swal(\n            'Documento eliminado con exito',\n            'El documento ha sido eliminado correctamente',\n            'success'\n        )\n    }\n\n    render() {\n\n\n        if (this.state.documentos.length >= 1) {\n            var listdocumentos = this.state.documentos.map((documentos) => {\n                return (\n\n                    <div className=\"documento-item\">\n                        \n                        <table aria-rowcount={this.state.documentos.length} className=\"documento-table\">\n                            <tbody>\n                            <tr>\n                                <td className=\"table-icono\"> \n                                    <div>\n\n                                        {\n                                            \n                                        }\n\n                                    </div>\n                                    <div>\n                                        <a target=\"_blank\" href={'https://plataforma-erasmus.herokuapp.com/docdropbox/' + documentos.url}>{documentos.title}</a>\n                                    </div>\n                                </td>\n                                <td>\n                                    <label> {documentos.alumnoNombre}</label>\n                                </td>\n\n                                <td>\n                                    <spain>\n                                        <Moment format=\"DD-MM-YYYY\">{documentos.date}</Moment>\n                                    </spain>\n\n\n                                </td>\n                                <td>\n                                    <ButtonIcon onClick={() => { if (window.confirm('\\n' + 'Estas segudo de eliminar el archivo ' + documentos.title + '?')) this.delete(documentos.title); }}\n                                        className=\"btn-delete\" startIcon={<DeleteIcon />}></ButtonIcon>\n                                </td>\n\n                            </tr>\n                            </tbody>\n                        </table>\n\n                        <div className=\"clearfix\"></div>\n                    </div>\n\n                );\n\n            })\n            return (\n                <div>\n                    {listdocumentos}\n                </div>\n            )\n\n        } else if (this.state.documentos.length === 0 && this.state.status === 'sucess') {\n            return (\n                <div>\n\n                    <div id=\"articles\">\n\n                        <h2 className=\"subheader\">No hay articulos para mostrar</h2>\n                        <p>Todavia no hay contenido en esta sección</p>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div id=\"articles\">\n                    <h2 className=\"subheader\">Cargando...</h2>\n                    <p>Espere mientras carga el contenido</p>\n                </div>\n            );\n        }\n\n\n    }\n}\n\nexport default Documentos;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\UseformProfesor.js",["452","453","454"],"import React, { Component } from 'react';\nimport FormDatosPersonales from './FormDatosPersonales';\nimport FormDatosPlataforma from './FormDatosPlataforma';\nimport FormDatosUniversidad from './FormDatosUniversidad.js';\nimport Sucess from './Success';\n\n\nimport GlobalProfesor from '../../GlobalProfesor';\nimport axios from 'axios';\n\n\nconst validate= values =>{\n const errors={}\n if(!values.nombre){\n     errors.nombre=\"campo obligatorio\";\n }\n \n return errors;\n}\nexport class Useform extends Component {\n\n    state = {\n        step: 1,\n        nombre: \"\",\n        apellido1: \"\",\n        apellido2: \"\",\n        usuario: \"\",\n        password1: \"\",\n        password2:\"\",\n        email1: \"\",\n        email2:\"\",\n        telefono: \"\",\n        destino: \"\",\n        despacho: \"\",\n        edificio: \"\",\n        datos:\"\",\n        tutoria:\"\",\n        alumno: {},\n        profesor: {},\n        \n\n    }\n\n\n    urlprofesor = GlobalProfesor.url;\n\n    //Proceed to the next step\n\n \n\n    nextStep = e => {\n        const { step } = this.state;\n     \n       console.log(this.state.step);\n            this.setState({\n                step: step + 1\n            });\n       \n      \n     \n\n        if (this.state.step == 3) {\n            this.guardarProfesor();\n        }\n\n    }\n\n    // back to the previus step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n\n    }\n\n\n    //Handle fields change\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n\n    }\n\n\n    guardarProfesor() {\n        var body = {\n            nombre: this.state.nombre,\n            apellido1: this.state.apellido1,\n            apellido2: this.state.apellido2,\n            email: this.state.email1,\n            telefono: this.state.telefono,\n            usuario: this.state.usuario,\n            password: this.state.password1,\n            despacho: this.state.despacho,\n            edificio: this.state.edificio,\n            datos:this.state.datos,\n            tutoria: this.state.tutoria\n\n        }\n\n        axios.post(this.urlprofesor + 'save', body)\n            .then(res => {\n                this.setState({\n                    profesor: res.data.profesor\n                })\n            })\n    }\n\n\n\n    render() {\n        const { step } = this.state;\n\n\n        const { nombre, apellido1, apellido2, usuario, password1,password2, email1,email2, telefono, destino, alumno, profesor, despacho, edificio,datos, tutoria  } = this.state;\n        const values = { nombre, apellido1, apellido2, usuario, password1,password2, email1,email2, telefono, destino, alumno, profesor, despacho, edificio,datos, tutoria }\n        const { tipo } = this.props.location.state\n\n        switch (step) {\n            case 1:\n                return (\n                    <FormDatosPersonales\n                    nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                        tipo={tipo}\n                    />\n                )\n            case 2:\n                return (\n                    <FormDatosPlataforma\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                        tipo={tipo}\n                    />\n                )\n            case 3:\n                return (\n                    <div>\n                        <FormDatosUniversidad\n                            nextStep={this.nextStep}\n                            prevStep={this.prevStep}\n                            handleChange={this.handleChange}\n                            values={values}\n                            tipo={tipo} />\n\n                    </div>\n\n                );\n\n            case 4:\n                return (\n                    <div>\n                        <Sucess />\n\n                    </div>\n\n                )\n        }\n\n\n\n\n\n\n    }\n}\n\nexport default Useform;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\DocumentoOficial.js",["455","456","457","458","459","460","461","462","463","464","465"],"import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nimport '../assets/css/documentos.css';\n\nimport NuevoDocumento from './NuevoDocumento';\nimport Global from '../Global';\nimport doc from '../assets/images/default-document.png';\nimport Modal from 'react-bootstrap/Modal';\nimport Moment from 'react-moment';\nimport Card from 'react-bootstrap/Card';\nimport {FaFileDownload} from 'react-icons/fa';\n\nclass DocumentoOficial extends Component {\n\n    url = Global.url;\n    nombre = \"\";\n    estadoRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: JSON.parse(localStorage.getItem('user')),\n            alumno: {},\n            status: null,\n            open: false,\n            estado: \"\",\n\n        };\n\n\n    }\n\n\n    openModal = (name) => {\n        this.nombre = name;\n        this.setState({ open: true });\n    }\n\n    onCloseModal = () => {\n        this.setState({ open: false })\n    }\n\n    componentWillMount() {\n        this.getDocumentos();\n\n    }\n\n\n    componentDidMount() {\n        this.getDocumentos();\n    }\n\n    getDocumentos() {\n\n        //ventana del alumno\n        if (this.props.match.params.id == null) {\n            axios.get(this.url + \"getdocumentos\" + \"/\" + this.state.identity._id)\n                .then(res => {\n                    if (res.data.alumno) {\n                        this.setState({\n                            alumno: res.data.alumno,\n                            status: 'sucess'\n                        });\n\n                        console.log(this.state.alumno.length)\n\n                    }\n\n\n                });\n        } else {\n            //ventana del profesor\n            axios.get(this.url + \"getdocumentos\" + \"/\" + this.props.match.params.id)\n                .then(res => {\n                    if (res.data.alumno) {\n                        this.setState({\n                            alumno: res.data.alumno,\n                            status: 'sucess'\n                        });\n\n                        console.log(this.state.alumno.length)\n\n                    }\n\n\n                });\n        }\n\n\n    }\n\n    changeEstado = () => {\n        this.setState({\n            estado: this.estadoRef.current.value\n        })\n\n    }\n\n\n    //SOLO PROFESOR\n    modificarEstado = () => {\n\n        console.log(this.nombre);\n        var body = {\n            estado: this.state.estado\n        }\n\n\n        axios.put(this.url + \"cambioEstado/\" + this.props.match.params.id + \"/\" + this.nombre, body)\n            .then(res => {\n                this.setState({\n                    status: 'sucess'\n                })\n            })\n        this.notificarAlumno();\n\n\n\n    }\n\n\n\n    notificarAlumno = () => {\n        var mensaje = {\n            asunto: 'Modificación documento ' + this.nombre,\n            texto: 'El estado del documento ' + this.nombre + ' ha sido modificado por el profesor ' + this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2\n                + '  Puede obtener más información en el apartado de DOCUMENTOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { alumno: this.props.match.params.id }\n        }\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/api/mensaje', mensaje)\n            .then(res => {\n                this.setState({\n                    nuevoMensaje: res.data.mensaje,\n                    status: 'sucess',\n                });\n            })\n            .catch(err => {\n                this.setState({\n                    status: 'failed'\n                });\n            });\n    }\n\n    render() {\n\n        if (this.state.alumno.length == 1) {\n            return (\n\n\n\n                <div className=\"grid-documentos-oficiales\">\n                    {/* FILA 1 */}\n                    <div>\n                    {\n                        this.state.identity.tipo === \"profesor\" &&\n                        <div>\n                            <h1 className=\"titulo-secundario\">DOCUMENTOS OFICIALES</h1>\n                            <h4 className=\"subtitulo-doc\" style={{marginBottom: '25px'}}>{this.state.alumno[0].nombre + \" \" + this.state.alumno[0].apellido1 + \"  \" + this.state.alumno[0].apellido2}</h4>\n                        </div>\n                    }\n                    {\n                        this.state.identity.tipo === \"Alumno\" &&\n                        <h1 className=\"titulo-doc\">DOCUMENTOS OFICIALES</h1>\n                    }\n                    </div>\n                    {/* FILA 2 */}\n                    <div className=\"grid-doc-oficial\">\n                        {/* COLUMNA 1 */}\n                        <div style={{ marginLeft: '100px' }}>\n                            <h1 className=\"titulo-seccion-doc\"> · Antes del Erasmus </h1>\n\n                            <div className=\"bloque-uno-docOfi\">\n\n\n                                <Card style={{ marginRight: '30px' }} className=\"card-doc-ofi\">\n\n                                    <Card.Img variant=\"left\" src={doc} className=\"doc-default\" />\n\n                                    <Card.Body id=\"cardbody\">\n\n                                        <Card.Text >\n                                            <h4>CPRA</h4>\n                                            <hr />\n                                            {this.state.alumno[0].documentos[0].estado === 'En tramite' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'blue' }}>En trámite</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'blue' } : { display: 'none' }}><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg> </button> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[0].estado === 'Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'green' }}>Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'green' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[0].estado === 'No Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'red' }}>No Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'red' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[0].estado === 'No Presentado' &&\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'grey' }}>No Presentado</strong> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[0].estado != 'No Presentado' &&\n                                                <div>\n                                                    <a id=\"link-doc\" target=\"_blank\" href={this.state.alumno[0].documentos[0].image}>\n                                                        <FaFileDownload/>\n                                                    </a>\n                                                    <h5 id=\"estado-doc\" style={{ fontSize: '16px' }}>Ultima modificación:  <Moment format=\"DD-MM-YYYY\">{this.state.alumno[0].documentos[1].fecha}</Moment></h5>\n                                                </div>\n                                            }\n                                        </Card.Text>\n\n\n                                    </Card.Body>\n\n\n\n                                </Card>\n\n                                <Card className=\"card-doc-ofi   \">\n\n                                    <Card.Img variant=\"left\" src={doc} className=\"doc-default\" />\n\n                                    <Card.Body id=\"cardbody\">\n\n                                        <Card.Text >\n                                            <h4>Learning Agreement</h4>\n                                            <hr />\n                                            {this.state.alumno[0].documentos[1].estado === 'En tramite' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'blue' }}>En trámite</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'blue' } : { display: 'none' }}><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg> </button> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[1].estado === 'Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'green' }}>Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'green' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[1].estado === 'No Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'red' }}>No Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'red' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[1].estado === 'No Presentado' &&\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'grey' }}>No Presentado</strong> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[1].estado != 'No Presentado' &&\n                                                <div>\n                                                    <a id=\"link-doc\" target=\"_blank\" href={ this.state.alumno[0].documentos[1].image}>\n                                                    <FaFileDownload/>\n                                                    </a>\n                                                    <h5 id=\"estado-doc\" style={{ fontSize: '16px' }}>Ultima modificación:  <Moment format=\"DD-MM-YYYY\">{this.state.alumno[0].documentos[1].fecha}</Moment></h5>\n                                                </div>\n                                            }\n                                        </Card.Text>\n\n\n                                    </Card.Body>\n\n\n\n                                </Card>\n                            </div>\n                            <h1 className=\"titulo-seccion-doc\"> ·Durante el Erasmus</h1>\n\n                            <div className=\"bloque-uno-docOfi\">\n                                <Card style={{ marginRight: '30px' }} className=\"card-doc-ofi   \">\n\n                                    <Card.Img variant=\"left\" src={doc} className=\"doc-default\" />\n\n                                    <Card.Body id=\"cardbody\">\n\n                                        <Card.Text >\n                                            <h4>Modificación CPRA</h4>\n                                            <hr />\n                                            {this.state.alumno[0].documentos[2].estado === 'En tramite' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'blue' }}>En trámite</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'blue' } : { display: 'none' }}><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg> </button> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[2].estado === 'Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'green' }}>Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'green' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[2].estado === 'No Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'red' }}>No Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'red' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[2].estado === 'No Presentado' &&\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'grey' }}>No Presentado</strong> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[2].estado != 'No Presentado' &&\n                                                <div>\n                                                    <a id=\"link-doc\" target=\"_blank\" href={this.state.alumno[0].documentos[2].image}>\n                                                    <FaFileDownload/>\n                                                    </a>\n                                                    <h5 id=\"estado-doc\" style={{ fontSize: '16px' }}>Ultima modificación:  <Moment format=\"DD-MM-YYYY\">{this.state.alumno[0].documentos[1].fecha}</Moment></h5>\n                                                </div>\n                                            }\n                                        </Card.Text>\n\n\n                                    </Card.Body>\n\n\n\n                                </Card>\n                                <Card className=\"card-doc-ofi   \">\n\n                                    <Card.Img variant=\"left\" src={doc} className=\"doc-default\" />\n\n                                    <Card.Body id=\"cardbody\">\n\n                                        <Card.Text >\n                                            <h4>Modificación LA</h4>\n                                            <hr />\n                                            {this.state.alumno[0].documentos[3].estado === 'En tramite' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'blue' }}>En trámite</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'blue' } : { display: 'none' }}><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg> </button> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[3].estado === 'Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'green' }}>Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'green' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[3].estado === 'No Aceptado' &&\n\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'red' }}>No Aceptado</strong>\n                                                    <button onClick={() => this.openModal('CPRA')} id=\"edit-style\" style={this.props.match.params.id ? { color: 'red' } : { display: 'none' }}> <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                                                    </svg></button></h5>\n\n                                            }\n                                            {this.state.alumno[0].documentos[3].estado === 'No Presentado' &&\n                                                <h5 id=\"estado-doc\">Estado : <strong style={{ color: 'grey' }}>No Presentado</strong> </h5>\n                                            }\n                                            {this.state.alumno[0].documentos[3].estado != 'No Presentado' &&\n                                                <div>\n                                                    <a id=\"link-doc\" target=\"_blank\" href={ this.state.alumno[0].documentos[3].image}>\n                                                    <FaFileDownload/>\n                                                    </a>\n                                                    <h5 id=\"estado-doc\" style={{ fontSize: '16px' }}>Ultima modificación:  <Moment format=\"DD-MM-YYYY\">{this.state.alumno[0].documentos[1].fecha}</Moment></h5>\n                                                </div>\n                                            }\n                                        </Card.Text>\n\n\n                                    </Card.Body>\n\n\n\n                                </Card>\n\n\n                                <Modal show={this.state.open} onHide={this.onCloseModal} animation={false}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title >MODIFICAR ESTADO <strong>-- {this.nombre} --</strong> </Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                        <form onSubmit={this.modificarEstado} className=\"nuevo-doc\">\n                                            <div className=\"form-subir\">\n                                                <label for=\"tittle\">Seleccionar nuevo estado:</label>\n                                                <select className=\"form-input-nuevo\" ref={this.estadoRef} onChange={this.changeEstado}>\n                                                    <option selected value=\"\"></option>\n                                                    <option value=\"No Aceptado\">No Aceptado</option>\n                                                    <option value=\"Aceptado\">Aceptado</option>\n                                                    <option value=\"En tramite\">En trámite</option>\n\n                                                </select>\n\n                                            </div>\n\n                                            <input type=\"submit\" value=\"ACTUALIZAR\" className=\"btn-submit\" ></input>\n                                        </form>\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                        <button variant=\"secondary\" onClick={this.onCloseModal} className=\"btn-cerrar\">\n                                            Close\n                            </button>\n\n                                    </Modal.Footer>\n                                </Modal>\n                            </div>\n                        </div>\n                          {/* COLUMNA 2 */}\n                        <div className=\"btn-docOficial\" >\n\n                        {\n                            this.props.match.params.id != null\n                                ? <NuevoDocumento type={this.props.match.params.id} />\n                                : <NuevoDocumento type=\"nuevo\" />\n                        }\n\n                    </div>\n                    </div>\n                  \n                    \n                </div >\n            );\n        } else {\n            return (\n                <div>\n                    <h3>No hay documentos</h3>\n                </div>\n            )\n\n        }\n\n\n    }\n\n}\n\nexport default DocumentoOficial;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\MenuPerfil.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\baja.js",["466","467"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\inicio\\donde-estamos.js",["468","469"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass donde extends Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n\r\n                <h1 className=\"titulo-doc\">Donde estamos</h1>\r\n                <div className=\"quienes-somos\" >\r\n                    <div style={{width:'1000px', margin:'auto'}}>\r\n\r\n                    <h4 style={{marginTop:'30px'}}>El Servicio de Relaciones Internacionales se encuentra en el Campus El Carmen, en el edificio \"Juan Agustín de Mora\" (pabellón Nº13),\r\n                   justo al lado del Comedor Universitario.</h4>\r\n            <br/><br/>\r\n                    <h5>\r\n                        Si se entra al edificio por la cara que da al Comedor Universitario,\r\n             es el pasillo de planta baja que está a la derecha.</h5>\r\n             <br/><br/>\r\n                    <h5>En dicho pasillo se encuentran todo el personal del servicio. </h5>\r\n\r\n                    <div className=\"donde-estamos\">\r\n                        <p>Pabellón Juan Agustín de Mora</p>\r\n                        <p>Campus El Carmen</p>\r\n                        <p>Avda. Fuerzas Armadas, s/n</p>\r\n                        <p>21007 - Huelva</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <img style={{marginTop: '25px'}} src='https://www.huelvainformacion.es/2020/07/04/huelva/facultades-Campus-Carmen-Universidad-Huelva_1479762213_123442891_667x375.jpg'/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default donde;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Sidebar.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\menu-mensajes.js",[],["470","471"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\enviar.js",["472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"import React, { Component } from 'react';\n\nimport Menu from './menu-mensajes';\nimport Global from '../../GlobalMensaje';\nimport axios from 'axios';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nclass enviar extends Component {\n\n    state = {\n        title: 'Enviar mensaje',\n        usuarios: [],\n        profesor: [],\n        identity: JSON.parse(localStorage.getItem('user')),\n        status: 'false',\n        tags: \"\",\n        texto: \"\",\n        asunto: \"\",\n\n    }\n\n\n    paraRef = React.createRef();\n    asuntoRef = React.createRef();\n    mensajeRef = React.createRef();\n\n    urlprofesor = Global.urlprofesor;\n    url = Global.url;\n\n    constructor(props) {\n        super(props)\n\n        this.listarProfesores();\n        this.listarAlumnos();\n\n    }\n\n    componentWillMount() {\n\n        this.listarProfesores();\n        this.listarAlumnos();\n\n\n    }\n\n    listarProfesores() {\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\n            .then(res => {\n\n                this.setState({\n                    profesor: res.data.profesor,\n\n                });\n            });\n\n        console.log(this.state.usuarios.length)\n\n    }\n\n    listarAlumnos() {\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiErasmus/alumnos')\n            .then(res => {\n                this.setState({\n                    usuarios: res.data.alumno\n                })\n            })\n\n\n\n    }\n\n\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n\n    }\n\n    addMessage = (e) => {\n        e.preventDefault();\n\n        if (this.state.identity.tipo == 'Alumno' && this.state.tags.tipo == 'Alumno') {\n            var mensaje = {\n                texto: this.state.texto,\n                asunto: this.state.asunto,\n                emisor: { alumno: this.state.identity._id },\n                receptor: { alumno: this.state.tags._id },\n                tipo: this.state.tags.tipo,\n            }\n        } else if (this.state.identity.tipo == 'Alumno' && this.state.tags.tipo == 'profesor') {\n            var mensaje = {\n                texto: this.state.texto,\n                asunto: this.state.asunto,\n                emisor: { alumno: this.state.identity._id },\n                receptor: { profesor: this.state.tags._id },\n                tipo: this.state.tags.tipo,\n            }\n        } else if (this.state.identity.tipo == 'profesor' && this.state.tags.tipo == 'Alumno') {\n            var mensaje = {\n                texto: this.state.texto,\n                asunto: this.state.asunto,\n                emisor: { profesor: this.state.identity._id },\n                receptor: { alumno: this.state.tags._id },\n                tipo: this.state.tags.tipo,\n            }\n        } else if (this.state.identity.tipo == 'profesor' && this.state.tags.tipo == 'profesor') {\n            var mensaje = {\n                texto: this.state.texto,\n                asunto: this.state.asunto,\n                emisor: { profesor: this.state.identity._id },\n                receptor: { profesor: this.state.tags._id },\n                tipo: this.state.tags.tipo,\n            }\n        }\n\n        var elem = document.getElementById('fp-container');\n        elem.style.display='block'\n\n\n        axios.post(this.url + 'mensaje', mensaje)\n            .then(res => {\n\n                elem.style.display='none'\n                this.setState({\n                    nuevoMensaje: res.data.mensaje,\n                    status: 'sucess',\n\n                });\n\n\n            })\n            .catch(err => {\n                this.setState({\n\n                    status: 'failed'\n                });\n            });\n\n        this.formularioEnBlanco();\n    }\n\n    formularioEnBlanco = () => {\n        this.setState({\n            texto: \"\",\n            asunto: \"\",\n            tags: \"\"\n\n        });\n    }\n\n\n\n    onTagsChange = (event, values) => {\n        this.setState({\n            tags: values\n        }, () => {\n            // This will output an array of objects\n            // given by Autocompelte options property.\n\n        });\n    }\n\n\n    render() {\n\n        if (this.props.location.state != null) {\n            const { mensajeId, emisor, texto } = this.props.location.state;\n            console.log(this.texto)\n        }\n\n\n        return (\n\n            <div>\n\n                <div className=\"grid-mensajeria-col\">\n\n                    <Menu />\n\n                    <div>\n                        {this.state.status == 'sucess' &&\n                            <div className=\"alert alert-success\">\n\n                                <strong>¡Correo enviado correctamente!</strong>\n                                <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\n                            </div>\n\n                        }\n                        {this.state.status == 'failed' &&\n                            <div className=\"alert alert-danger\">\n\n                                <strong>¡Error!</strong> El correo no se pudo enviar correctamente\n                            <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\n                            </div>\n                        }\n\n                        {/* <h3 className=\"title-pantalla-mensaje\">{this.state.title} </h3>*/}\n\n                        <div>\n                            <form onSubmit={this.addMessage} className=\"form-mensajeria\">\n                                <div className=\"mensaje-estilo-uno\">\n                                    <p>\n                                        <label>Remitente</label>\n                                        <label id=\"remitente\">{this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2 + \" <\" + this.state.identity.email + \"> \"}</label>\n                                    </p>\n                                    <div className=\"destinatario\">\n                                        <label>Para</label>\n                                        {this.state.identity.tipo == \"Alumno\" &&\n                                            <Autocomplete\n                                                className=\"autocomplete\"\n                                                value={this.state.profesor._id}\n                                                options={this.state.usuarios.concat(this.state.profesor)}\n                                                onChange={this.onTagsChange}\n                                                getOptionLabel={(option) => option.nombre + \" \" + option.apellido1 + \" \" + option.apellido2 + \"  <\" + option.email + \"> \"}\n                                                style={{ width: 750 }}\n                                                renderInput={(params) => <TextField {...params} />}\n                                            />\n                                        }\n                                        {this.state.identity.tipo == \"profesor\" &&\n                                            <Autocomplete\n                                                className=\"autocomplete\"\n                                                value={this.state.usuarios._id}\n                                                options={this.state.usuarios.concat(this.state.profesor)}\n                                                onChange={this.onTagsChange}\n                                                getOptionLabel={(option) => option.nombre + \" \" + option.apellido1 + \" \" + option.apellido2 + \"  <\" + option.email + \"> \"}\n                                                style={{ width: 750 }}\n                                                renderInput={(params) => <TextField {...params} />}\n                                            />\n\n                                        }\n                                        {this.state.identity.tipo == \"administrador\" &&\n                                            <Autocomplete\n                                                className=\"autocomplete\"\n                                                value={this.state.usuarios._id}\n                                                options={this.state.usuarios.concat(this.state.profesor)}\n                                                onChange={this.onTagsChange}\n                                                getOptionLabel={(option) => option.nombre + \" \" + option.apellido1 + \" \" + option.apellido2 + \"  <\" + option.email + \"> \"}\n                                                style={{ width: 750 }}\n                                                renderInput={(params) => <TextField {...params} />}\n                                            />\n\n                                        }\n\n                                    </div>\n\n                                    <p className=\"mensaje-asunto\">\n                                        <label>Asunto</label>\n                                        <input type=\"text\" onChange={this.handleChange('asunto')} ref={this.asuntoRef} id=\"asunto\" value={this.state.asunto}></input>\n                                    </p>\n                                </div>\n                                <div className=\"mensaje-estilo-dos\">\n                                    {this.props.location.state != null\n                                        ? <textarea type=\"text\" name=\"text\" onChange={this.handleChange('texto')} ref={this.mensajeRef} value={this.state.texto} placeholder=\"Escribe tu mensaje\" className=\"textarea-mensaje\">     {this.texto}</textarea>\n                                        : <textarea type=\"text\" name=\"text\" onChange={this.handleChange('texto')} ref={this.mensajeRef} value={this.state.texto} placeholder=\"Escribe tu mensaje\" className=\"textarea-mensaje\"> </textarea>\n                                    }\n                                </div>\n                                <input type=\"submit\" value=\"ENVIAR\" className=\"btn-enviar\" ></input>\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className=\"fp-container\" id=\"fp-container\">\n                    <Spinner animation=\"border\" role=\"status\" className=\"fp-loader\"></Spinner>\n                </div>\n\n            </div>\n\n        );\n\n\n    }\n}\n\n\nexport default enviar;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Footer.js",["492"],"import React, {Component} from 'react';\r\n\r\n\r\nconst Footer =()=>{\r\n    return(\r\n\r\n        <div >\r\n            <footer id=\"footer\">\r\n                <div className=\"center\">\r\n                    <p>\r\n                        Plataforma Erasmus\r\n                    </p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Footer;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\inicio\\quienes-somos.js",["493"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass quienessomos extends Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"titulo-doc\">¿Quienes somos?</h1>\r\n                <div style={{ marginTop: '35px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Directora de Proyección Internacional y Movilidad </strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Prof. Dra. Mª Teresa Aceytuno Pérez</h4>\r\n                        <h5>direccion.internacionales@uhu.es</h5>\r\n                        <h5>+34 646 13 65 41</h5>\r\n                    </p>\r\n                    <hr></hr>\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Director de Cooperación Internacional</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Prof. Dr. Francisco Marín Pageo</h4>\r\n                        <h5>direccion.cooperacion@uhu.es</h5>\r\n                        <h5>+34 689 17 58 62</h5>\r\n                    </p>\r\n                    <hr></hr>\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Responsable de Unidad de RR.II.</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Dª Inmaculada Martínez López</h4>\r\n                        <h5>inmacu@uhu.es</h5>\r\n                        <h5>+34 959 21 91 69</h5>\r\n                    </p>\r\n\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Jefe de Negociado de RR.II.</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}> D. Eulogio Toscano Recamales</h4>\r\n                        <h5>eulogio@uhu.es</h5>\r\n                        <h5>drinter08@sc.uhu.es</h5>\r\n                        <h5>959219453</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}> D. Juan Carlos Jara Reyes Técnico Grado Superior</h4>\r\n                        <h5>carlos.jara@sc.uhu.es| drinter12@sc.uhu.es</h5>\r\n                        <h5>+34 959 21 99 32</h5>\r\n                    </p>\r\n                    <hr />\r\n\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong> Administrativos</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Dª Susana Díaz Fernández</h4>\r\n                        <h5>susana.diaz@sc.uhu.es</h5>\r\n                        <h5>+34 959 21 94 95</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Dª Conchi Gómez Álvarez</h4>\r\n                        <h5>concepcion.gomez@sc.uhu.es</h5>\r\n                        <h5>+34 959 21 91 67</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Dª Olga Núñez Prieto</h4>\r\n                        <h5>drinter03@sc.uhu.es</h5>\r\n\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Dª María Luz Capelo Álvarez</h4>\r\n                        <h5>drinter09@sc.uhu.es</h5>\r\n                        <h5>959219496</h5>\r\n\r\n                    </p>\r\n                    <hr />\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Contactos</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Para movilidad internacional de estudiantes UHU-OUTGOING</h4>\r\n                        <h4 style={{ color: 'grey' }}>Dª Rosario Alamillo Granados</h4>\r\n                        <h5>drinter01@sc.uhu.es</h5>\r\n                        <h5>+34 959 21 96 40</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Para estudiantes internacionales-INCOMING</h4>\r\n                        <h4 style={{ color: 'grey' }}>D. Juan José Gómez Boullosa</h4>\r\n                        <h5>drinter02@sc.uhu.es</h5>\r\n                        <h5>+34 959 21 94 94</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Para acuerdos bilaterales, movilidad PDI y PAS UHU- INCOMING,</h4>\r\n                        <h4 style={{ color: 'grey' }}>Semana Internacional de la UHU</h4>\r\n                        <h4 style={{ color: 'grey' }}>Dª Claire Martin</h4>\r\n                        <h5>drinter06@sc.uhu.es</h5>\r\n                        <h5>959218237</h5>\r\n                    </p>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Becario/a del Servicio Técnico Informático</h4>\r\n                       \r\n                        <h5>drinter04@sc.uhu.es</h5>\r\n                        <h5>959219436</h5>\r\n                    </p>\r\n                    <hr/>\r\n\r\n                </div>\r\n                <div style={{ marginTop: '25px' }} className=\"quienes-somos\">\r\n                    <h3> <strong>Dirección Postal</strong></h3>\r\n                    <p>\r\n                        <h4 style={{ color: 'grey' }}>Servicio de Relaciones Internacionales</h4>\r\n                        <h4 style={{ color: 'grey' }}>Edificio Juan Agustín de Mora y Garrocho. Campus «El Carmen»</h4>\r\n                        <h4 style={{ color: 'grey' }}>Avda. Fuerzas Armadas, s/n. 21007 Huelva</h4>\r\n                        <h5>drinter@uhu.es</h5>\r\n                      \r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default quienessomos;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosPlataforma.js",["494","495","496","497","498","499","500","501","502","503","504"],"import React, { Component } from 'react';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport AppBar from '@material-ui/core/AppBar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport { Link } from 'react-router-dom';\n\nexport class FormDatosPlataforma extends Component {\n\n    state = {\n        errors: {}\n    }\n\n    validate = e => {\n        const errors = {};\n        let regex = new RegExp(\"[!#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ]+\");\n        let regexnumeros = new RegExp(\"[0-9]{9,}\");\n\n        //USUARIO \n        if (!this.props.values.usuario) {\n            errors.usuario = \"Campo obligatorio\";\n        }\n\n\n        //PASSWORD \n        if (!this.props.values.password1) {\n            errors.password1 = \"Campo obligatorio\";\n        } else {\n            if (regex.test(this.props.values.password1)) {\n                errors.password1 = \"No puede contener carácteres especiales o espacios\";\n            }\n            if (this.props.values.password1.length < 8 || this.props.values.password1.length > 12) {\n                errors.password1 = \"Debe de tener entre 8-12 carácteres\";\n            }\n        }\n\n        if (!this.props.values.password2) {\n            errors.password2 = \"Campo obligatorio\";\n        } else {\n            if (regex.test(this.props.values.password2)) {\n                errors.password2 = \"No puede contener carácteres especiales o espacios\";\n            }\n            if (this.props.values.password2.length < 8 || this.props.values.password2.length > 12) {\n                errors.password2 = \"Debe de tener entre 8-12 carácteres\";\n            }\n        }\n\n        if (this.props.values.password1 != this.props.values.password2) {\n            errors.password1 = \"Las contraseñas deben de coincidir\"\n            errors.password2 = \"Las contraseñas deben de coincidir\"\n        }\n\n\n\n\n        return errors;\n    }\n\n\n    continue = e => {\n        e.preventDefault();\n        const { errors, ...sinErrors } = this.state;\n        const result = this.validate(sinErrors);\n\n        this.setState({ errors: result })\n        if (!Object.keys(result).length) {\n            this.props.nextStep();\n        }\n\n\n\n\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n\n    }\n\n    render() {\n        const { values, handleChange, tipo } = this.props;\n\n\n        return (\n            <div className=\"grid-inicio\">\n                <div className=\"logo-titulo\">\n                    <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                    <div className=\"titulo-completo\">\n                        <h3>Universidad de Huelva</h3>\n                        <h1> ERASMUS+ </h1>\n                    </div>\n                </div>\n                <hr className=\"linea\"></hr>\n\n                <div className=\"registro-nuevoUsuario\">\n                    {tipo === 'alumno' &&\n                        <h1 className=\"titulo titulo-registro \"> ALTA DE ALUMNO/A</h1>\n                    }\n                    {tipo === 'profesor' &&\n                        <h1 className=\"titulo titulo-registro \" > ALTA DE PROFESOR/A</h1>\n                    }\n                    <h1 className=\"titulo titulo-registro titulo-registro-secundario\"> DATOS PLATAFORMA </h1>\n                    <div className=\"subtitulo\">Es posible que otros usuarios puedan ver parte de la infomación al usar la plataforma. </div>\n                    <Link to='/' className=\"link-cancelar\">Cancelar registro de usuario</Link><br />\n                    <Card className=\"card-nuevoUser\">\n                        <Form>\n                            <Form.Group >\n                                <Form.Control\n                                    placeholder=\"Usuario\"\n                                    onChange={handleChange('usuario')}\n                                    defaultValue={values.usuario} />\n                                {this.state.errors.usuario && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.usuario}</Form.Label>}\n                            </Form.Group>\n                            <label style={{ colore: 'grey', fontSize: '12px' }}>La contraseña debe de contener entre 8-12 carácteres. No incluir espacios, carácteres especiales o iconos</label>\n                            <Form.Row>\n\n                                <Form.Group as={Col} >\n\n                                    <Form.Control\n                                        onChange={handleChange('password1')}\n                                        defaultValue={values.password1}\n                                        type=\"password\"\n                                        type=\"password\"\n                                        placeholder=\"Contraseña\" />\n\n                                    {this.state.errors.password1 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.password1}</Form.Label >}\n\n                                </Form.Group>\n                                <Form.Group as={Col}>\n\n                                    <Form.Control\n                                        onChange={handleChange('password2')}\n                                        defaultValue={values.password2}\n                                        type=\"password\"\n                                        type=\"password\"\n                                        placeholder=\"Repetir contraseña\" />\n\n\n                                    {this.state.errors.password1 && <Form.Label style={{ color: 'red', fontSize: '12px' }}>{this.state.errors.password1}</Form.Label >}\n\n                                </Form.Group>\n                            </Form.Row>\n\n                            <button\n                                label=\"continue\"\n                                className=\"btn-continue form-login\"\n                                style={styles.button}\n                                onClick={this.continue}\n                            >   CONTINUAR </button>\n                            <button\n                                label=\"volver\"\n                                className=\"btn-back form-login\"\n                                style={styles.button}\n                                onClick={this.back}\n                            > VOLVER </button>\n                        </Form>\n\n\n                        <br></br>\n\n\n                    </Card>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    button: { margin: 15 }\n}\n\nexport default FormDatosPlataforma;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Alumnos.js",["505","506","507","508","509","510"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Global from '../Global';\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\n\r\nclass Alumnos extends Component {\r\n\r\n    state = {\r\n        identity: JSON.parse(localStorage.getItem('user')),\r\n        status: '',\r\n        alumnos: [],\r\n        alumnosCord: [],\r\n        pages: \"\",\r\n        currentPage: 0,\r\n        elements: [], //los que cargamos en la pagina actual\r\n        mensajesPerPage: 5,\r\n        offset: 0,\r\n\r\n    }\r\n\r\n    url = Global.urlprofesor;\r\n    urlalumnos = Global.url;\r\n\r\n    componentWillMount() {\r\n        if(this.state.identity.rol==='coordinador_de_destino'){\r\n            this.getalumno();\r\n        }else{\r\n            this.getalumnosCoordinador();\r\n        }\r\n       \r\n       \r\n    }\r\n\r\n    getalumno = () => {\r\n\r\n        var pages= this.state.currentPage+1;\r\n\r\n        axios.get(this.urlalumnos + 'get-alumnos-profesor/' + this.state.identity._id + '/'+ pages)\r\n            .then(res => {\r\n                this.setState({\r\n                    alumnos: res.data.users, \r\n                    pages: res.data.pages,\r\n                    status: 'sucess',\r\n\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    alumnos: {},\r\n                    status: 'failed'\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n\r\n    getalumnosCoordinador = () => {\r\n        var pages= this.state.currentPage+1;\r\n        axios.get(this.urlalumnos + 'coordinador/' + this.state.identity._id + '/' + pages)\r\n            .then(res => {\r\n                this.setState({\r\n                    alumnosCord: res.data.users,\r\n                    pages: res.data.pages,\r\n                    status: 'sucess',\r\n\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    alumnosCord: {},\r\n                    status: 'failed'\r\n                });\r\n            });\r\n\r\n    }\r\n    handlePageClick = mensajes => {\r\n      \r\n\r\n        const selectedPage = mensajes.selected;\r\n        const offset = selectedPage * this.state.mensajesPerPage;\r\n        if( this.state.identity.rol === \"coordinador_de_destino\"){\r\n            this.setState({\r\n                currentPage: selectedPage,\r\n                offset: offset\r\n          \r\n           }, () => \r\n                this.getalumno());\r\n           }else{\r\n            this.setState({\r\n                currentPage: selectedPage,\r\n                offset: offset\r\n          \r\n           }, () => \r\n                this.getalumnosCoordinador());\r\n            \r\n           }\r\n       \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n       if(this.state.identity.rol==='coordinador_de_destino'){\r\n           this.getalumno();\r\n       }else{\r\n           this.getalumnosCoordinador();\r\n       }\r\n      \r\n    }\r\n\r\n    render() {\r\n\r\n        let paginationElement;\r\n\r\n        if (this.state.pages > 1) {\r\n            paginationElement = (\r\n                <ReactPaginate\r\n                    previousLabel={\"← Anterior\"}\r\n                    nextLabel={\"Siguiente →\"}\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={this.state.pages}\r\n                    onPageChange={this.handlePageClick}\r\n                    forcePage={this.state.currentPage}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n            )\r\n}\r\n\r\n        if (this.state.alumnos != [] && this.state.identity.rol === \"coordinador_de_destino\") {\r\n            var listaralumnos = this.state.alumnos.map((alumno) => {\r\n                return (\r\n\r\n\r\n                    <Card className=\"card-root\">\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                className=\"card-media\"\r\n                                image={alumno.image}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <hr />\r\n                            <CardContent>\r\n                                <div className=\"group-nombre\">\r\n                                    <h3 className=\"card-nombre\">{alumno.nombre + \" \" + alumno.apellido1 + \" \" + alumno.apellido2}</h3>\r\n\r\n                                    <Link size=\"small\" color=\"primary\" style={{ color: '#A6250E' }} className=\"card-link-perfil\" to={\"/user/profile/\" + alumno._id}>ver perfil</Link>\r\n                                </div>\r\n                                <div className=\"card-nombre-uni\" >\r\n                                    <h4 className=\"card-nombre-uni\">{alumno.destino.ciudad + \" (\" + alumno.destino.pais + \")  -\" + alumno.destino.carrera}</h4>\r\n\r\n                                </div>\r\n\r\n                            </CardContent>\r\n                            <hr></hr>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Link size=\"small\" color=\"secondary\" style={{ color: 'rgb(16,8,168)' }} to={\"/documentos/\" + alumno._id} >\r\n                                Documentos\r\n                         </Link>\r\n                            <Link size=\"small\" color=\"primary\" style={{ color: 'rgb(39,149,192)' }} to={\"/nube/\" + alumno._id + '/' + alumno.nombre + \"/\" + alumno.apellido1 + \"/\" + alumno.apellido2}>\r\n                                Nube Compartida\r\n                         </Link>\r\n\r\n\r\n\r\n                        </CardActions>\r\n                    </Card>\r\n\r\n                )\r\n\r\n            })\r\n            return (\r\n                <div>\r\n                    <h1 className=\"titulo-doc\" > ALUMNOS</h1>\r\n                    {listaralumnos}\r\n                    {paginationElement}\r\n\r\n                </div>\r\n            );\r\n\r\n        }\r\n        else if (this.state.alumnosCord != [] && this.state.identity.rol === \"coordinador_de_centro\") {\r\n            var listaralumnos2 = this.state.alumnosCord.map((alumno) => {\r\n                return (\r\n\r\n\r\n                    <Card className=\"card-root\">\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                className=\"card-media\"\r\n                                image={ alumno.image}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <hr />\r\n                            <CardContent>\r\n                                <div className=\"group-nombre\">\r\n                                    <h3 className=\"card-nombre\">{alumno.apellido1 + \" \" + alumno.apellido2 +\", \"+ alumno.nombre  }</h3>\r\n\r\n                                    <Link size=\"small\" color=\"primary\" style={{ color: '#A6250E' }} className=\"card-link-perfil\" to={\"/user/profile/\" + alumno._id}>ver perfil</Link>\r\n                                </div>\r\n                                <div className=\"card-nombre-uni\" >\r\n                                    <h4 className=\"card-nombre-uni\">{alumno.destino.ciudad + \" (\" + alumno.destino.pais + \")  -\" + alumno.destino.carrera}</h4>\r\n\r\n                                </div>\r\n\r\n                            </CardContent>\r\n                            <hr></hr>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                            <Link size=\"small\" color=\"secondary\" style={{ color: 'rgb(16,8,168)' }} to={\"/documentos/\" + alumno._id} >\r\n                                Documentos\r\n                         </Link>\r\n                            <Link size=\"small\" color=\"primary\" style={{ color: 'rgb(39,149,192)' }} to={\"/nube/\" + alumno._id + \"/\" + alumno.nombre + \"/\" + alumno.apellido1 + \"/\" + alumno.apellido2}>\r\n                                Nube Compartida\r\n                         </Link>\r\n\r\n\r\n\r\n                        </CardActions>\r\n                    </Card>\r\n\r\n                )\r\n\r\n            })\r\n            return (\r\n                <div>\r\n                    <h1 className=\"titulo-doc\" > ALUMNOS</h1>\r\n\r\n                    {listaralumnos2}\r\n                    {paginationElement}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1 className=\"titulo-doc\" > ALUMNOS</h1>\r\n                    <h2>No hay alumno</h2>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n    export default Alumnos","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\editDestinos.js",["511"],"import React, { Component } from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\nimport Global from '../../Global';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport Menu from './menu-admin';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass editdestinos extends Component {\r\n\r\n    state = {\r\n        destinos: [],\r\n        profesores:[],\r\n        destino:\"\",\r\n        open: false,\r\n        profesor:\"\",\r\n        update:{},\r\n        pages:\"\",\r\n        currentPage:0,\r\n        mensajesPerPage: 5,\r\n        offset: 0,\r\n\r\n\r\n    }\r\n\r\n    url=Global.url;\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.listarDestinos();\r\n        this.listarProfesores();\r\n    }\r\n\r\n\r\n   \r\n\r\n    openModal = (id) => {\r\n        console.log(\"id:\" + id)\r\n        this.setState({ open: true, destino:id });\r\n        \r\n    }\r\n  \r\n    handlePageClick = mensajes => {\r\n       \r\n        const selectedPage = mensajes.selected;\r\n        const offset = selectedPage * this.state.mensajesPerPage;\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n      \r\n       }, () => \r\n            this.listarDestinos());\r\n        \r\n    }\r\n\r\n\r\n    onCloseModal = () => { this.setState({ open: false }); }\r\n\r\n    listarDestinos() {\r\n        var pages= this.state.currentPage+1;\r\n\r\n\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiDestino/destinos/' + pages)\r\n            .then(res => {\r\n                this.setState({\r\n                    destinos: res.data.destino,\r\n                    pages:res.data.pages\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    listarProfesores() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    profesores: res.data.profesor,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    }\r\n\r\n    updateDestino=()=>{\r\n\r\n        var body={\r\n            profesor: this.state.profesor\r\n        }\r\n        console.log(\"updatedestino:\"+ this.state.destino);\r\n\r\n        axios.put('https://plataforma-erasmus.herokuapp.com/apiDestino/updateProfesor/'+ this.state.destino, body)\r\n        .then(res => {\r\n            this.setState({\r\n                update: res.data.destino,\r\n\r\n            });\r\n            axios.put(this.url+'/setdestino/'+this.state.destino, res.data.destino)\r\n            .then(res=>{\r\n                this.setState({\r\n                    status:'sucess'\r\n                });\r\n            })        });\r\n\r\n       this.onCloseModal();\r\n       this.forceUpdate();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        let paginationElement;\r\n\r\n        if (this.state.pages > 1) {\r\n            paginationElement = (\r\n                <ReactPaginate\r\n                    previousLabel={\"<<\"}\r\n                    nextLabel={\">>\"}\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={this.state.pages}\r\n                    onPageChange={this.handlePageClick}\r\n                    forcePage={this.state.currentPage}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n            )\r\n}\r\n        const listarDestinos = this.state.destinos.map((destino) => {\r\n            return (\r\n\r\n                <div>\r\n                    <table >\r\n                        <tbody>\r\n                            <tr>\r\n                                <td >\r\n                                    {destino.pais}\r\n                                </td>\r\n                                <td >\r\n                                    {destino.ciudad}\r\n                                </td>\r\n                                <td>\r\n                                    {destino.carrera}\r\n                                </td>\r\n                                <td>\r\n                                    {destino.profesor.nombre + \"  \" + destino.profesor.apellido1 + \" \" + destino.profesor.apellido2}\r\n                                    <button variant=\"primary\"onClick={() => this.openModal(destino._id)} style={{border:'none', backgroundColor:'transparent', marginLeft:'3px'}}>\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                                        </svg>\r\n                                    </button>\r\n\r\n                                </td>\r\n                                <td>\r\n                                    {destino.coordinador.nombre + \" \" + destino.coordinador.apellido1 + \" \" + destino.coordinador.apellido2}\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            )\r\n        })\r\n        return (\r\n\r\n            <div className=\"grid-admin\">\r\n\r\n                <Menu></Menu>\r\n                <div>\r\n                    <div>\r\n                        <h1 className=\"titulo-doc\">    EDITAR DESTINOS </h1></div>\r\n\r\n                    <div >\r\n\r\n                    </div>\r\n                    <div >\r\n                        {/* NUEVOOOOO TABLAS */}\r\n\r\n                        <table style={{ marginTop: '20px' }} >\r\n                            <thead >\r\n                                <tr className=\"table-admin\">\r\n                                    <th >Pais</th>\r\n                                    <th >Ciudad</th>\r\n                                    <th>Grado</th>\r\n                                    <th>Coordinador de destino</th>\r\n                                    <th>Coordinador de centro</th>\r\n                                  \r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                        {listarDestinos}\r\n                        {paginationElement}\r\n                        <div>\r\n                            <Modal show={this.state.open} onHide={this.onCloseModal}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Modificar coordinador</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form>\r\n                                    <Form.Group>\r\n                                    <Form.Label> Coordinador de destino</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange('profesor')} type=\"profesor\" >\r\n                                        <option> </option>\r\n                                        {this.state.profesores.map((prof) => (\r\n                                            <option key={prof._id} value={prof._id} >\r\n                                                {prof.nombre + \" \" + prof.apellido1 + \" \" + prof.apellido2}\r\n                                            </option>\r\n                                        ))\r\n\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    \r\n                                    <button variant=\"primary\" onClick={this.updateDestino} className=\"button-join \">\r\n                                        GUARDAR\r\n                                  </button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default editdestinos;",["512","513"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\Header.js",["514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\responder.js",["531","532","533","534","535","536","537"],"import React, { Component } from 'react';\r\n\r\nimport Menu from './menu-mensajes';\r\nimport Global from '../../GlobalMensaje';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport Alert from 'bootstrap';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass responder extends Component {\r\n\r\n    url = Global.url;\r\n\r\n    state = {\r\n        identity: JSON.parse(localStorage.getItem('user')),\r\n        mensaje: [],\r\n        status: \"\",\r\n        texto:\"\",\r\n        nuevoMensaje:{},\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getMessage();\r\n\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n\r\n    }\r\n\r\n    getMessage=(e)=> {\r\n        var id = this.props.match.params.id;\r\n\r\n        axios.get(this.url + 'mensaje/' + id)\r\n            .then(res => {\r\n                this.setState({\r\n                    mensaje: res.data.mensajes\r\n                })\r\n            })\r\n    }\r\n\r\n    addMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.identity.tipo === 'Alumno' && this.state.mensaje[0].emisor.alumno != null) {\r\n            var mensaje = {\r\n                texto: this.state.texto,\r\n                asunto: this.state.mensaje[0].asunto,\r\n                emisor: { alumno: this.state.identity._id },\r\n                receptor: { alumno: this.state.mensaje[0].emisor.alumno._id },\r\n                tipo: 'Alumno',\r\n            }\r\n        } else if (this.state.identity.tipo === 'Alumno' && this.state.mensaje[0].emisor.profesor != null) {\r\n            var mensaje = {\r\n                texto: this.state.texto,\r\n                asunto: this.state.mensaje[0].asunto,\r\n                emisor: { alumno: this.state.identity._id },\r\n                receptor: { profesor: this.state.mensaje[0].emisor.profesor._id },\r\n                tipo:'profesor',\r\n            }\r\n        } else if (this.state.identity.tipo === 'profesor' && this.state.mensaje[0].emisor.alumno != null) {\r\n            var mensaje = {\r\n                texto: this.state.texto,\r\n                asunto:this.state.mensaje[0].asunto,\r\n                emisor: { profesor: this.state.identity._id },\r\n                receptor: { alumno: this.state.mensaje[0].emisor.alumno._id },\r\n                tipo:'Alumno',\r\n            }\r\n        } else if (this.state.identity.tipo === 'profesor' && this.state.mensaje[0].emisor.profesor != null) {\r\n            var mensaje = {\r\n                texto: this.state.texto,\r\n                asunto: this.state.mensaje[0].asunto,\r\n                emisor: { profesor: this.state.identity._id },\r\n                receptor: { profesor: this.state.mensaje[0].emsior.profesor._id },\r\n                tipo:'profesor',\r\n            }\r\n        }\r\n\r\n        console.log(mensaje);\r\n\r\n\r\n        axios.post(this.url + 'mensaje', mensaje)\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    nuevoMensaje: res.data.mensaje,\r\n                    status: 'sucess',\r\n\r\n                });\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n\r\n                    status: 'failed'\r\n                });\r\n            });\r\n\r\n            this.formularioEnBlanco();\r\n        }\r\n    \r\n        formularioEnBlanco = () => {\r\n            this.setState({\r\n                texto: \"\",\r\n               \r\n    \r\n            });\r\n        }\r\n\r\n    render() {\r\n        var listarmensajes = this.state.mensaje.map((mensaje) => {\r\n            return (\r\n            \r\n                <div>\r\n                {this.state.status === 'sucess' &&\r\n                    <div className=\"alert alert-success\">\r\n\r\n                        <strong>¡Correo enviado correctamente!</strong>\r\n                        <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\r\n                    </div>\r\n\r\n                }\r\n                {this.state.status === 'failed' &&\r\n                    <div className=\"alert alert-danger\">\r\n\r\n                        <strong>¡Error!</strong> El correo no se pudo enviar correctamente\r\n                    <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\r\n                    </div>\r\n                }\r\n\r\n                \r\n\r\n                <div>\r\n                    <form onSubmit={this.addMessage} className=\"form-mensajeria\">\r\n                        <div className=\"mensaje-estilo-uno\">\r\n                            <p>\r\n                                <label>Remitente</label>\r\n                                <label id=\"remitente\">{this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2 + \" <\" + this.state.identity.email + \"> \"}</label>\r\n                            </p>\r\n                            <div className=\"destinatario\">\r\n                                <label>Para</label>\r\n                                {mensaje.emisor.alumno != null &&\r\n                                  <label id=\"remitente\">{mensaje.emisor.alumno.nombre + \" \" + mensaje.emisor.alumno.apellido1+ \" \"+ mensaje.emisor.alumno.apellido2 + \" <\"+ mensaje.emisor.alumno.email+ \">\"}</label>\r\n                                }\r\n                                {mensaje.emisor.profesor != null &&\r\n                                <label id=\"remitente\">{mensaje.emisor.profesor.nombre + \" \" + mensaje.emisor.profesor.apellido1+ \" \"+ mensaje.emisor.profesor.apellido2 +\" <\"+ mensaje.emisor.profesor.email+ \">\"}</label>\r\n                                }\r\n                             \r\n\r\n                            </div>\r\n\r\n                            <p>\r\n                                <label>Asunto</label>\r\n                                <label  id=\"remitente\" >Re: {mensaje.asunto}</label>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"mensaje-estilo-dos\">\r\n                                \r\n                                    <textarea type=\"text\" name=\"text\" onChange={this.handleChange('texto')}  className=\"textarea-mensaje\">  \r\n                                    { ' \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n  Re: ' + mensaje.texto} \r\n                                    </textarea>\r\n                                    \r\n                                \r\n                        </div>\r\n                        <input type=\"submit\" value=\"ENVIAR\" className=\"btn-enviar\" ></input>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n            )\r\n\r\n        });\r\n        return(\r\n            <div className=\"grid-mensajeria-col\">\r\n\r\n            <Menu />\r\n\r\n\r\n            <div>\r\n                {listarmensajes}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n}\r\n\r\nexport default responder;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\newUser\\FormDatosErasmus.js",["538","539","540","541","542","543","544","545"],"import React, { Component } from 'react';\n\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport ReactPaginate from \"react-paginate\";\n\n\nexport class FormDatosErasmus extends Component {\n\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n\n    }\n\n    state = {\n        destinos: [],\n        alumno: {},\n        status: \"\",\n        pages:\"\",\n        currentPage:0,\n        mensajesPerPage: 5,\n        offset: 0,\n    }\n\n\n\n    constructor(props) {\n        super(props);\n        this.listarDestinos();\n    }\n\n    listarDestinos =(e) => {\n        var pages= this.state.currentPage+1;\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiDestino/destinos/' + pages)\n            .then(res => {\n                this.setState({\n                    destinos: res.data.destino,\n                    pages: res.data.pages\n\n                });\n            });\n\n    }\n\n    componentDidMount(){\n        this.listarDestinos();\n    }\n\n \n\n\n    guardarDestino(alumno, update, profesor, coordinador) {\n\n        var body = {\n            destino: update\n        }\n        var body2 = {\n            profesor: profesor,\n            coordinador: coordinador\n        }\n        var body3 = {\n            alumno: alumno\n        }\n        var mensaje = {\n            asunto: 'Nueva notificación Plataforma Erasmus+',\n            texto: 'Se ha añadido un nuevo alumno'\n                + '  Puede obtener más información en el apartado de ALUMNOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { profesor: profesor }\n        }\n        var mensaje2={\n            asunto: 'Nueva notificación Plataforma Erasmus+',\n            texto: 'Se ha añadido un nuevo alumno'\n                + '  Puede obtener más información en el apartado de ALUMNOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { profesor: coordinador }\n        }\n\n        axios.put('https://plataforma-erasmus.herokuapp.com/apiErasmus/savedestino/' + alumno, body)\n            .then(res => {\n                this.setState({\n                    alumno: res.data.alumno\n                })\n                axios.put('https://plataforma-erasmus.herokuapp.com/apiErasmus/saveprofesor/' + alumno, body2)\n                    .then(res => {\n                        this.setState({\n                            alumno: res.data.alumno,\n                            status: 'sucess'\n                        })\n                        console.log(\"Done\")\n\n                    })\n                    console.log(\"mensaje\");\n          \n                    this.notificarProfesor(profesor);\n                    this.notificarProfesor(coordinador);\n                    \n\n            })\n\n\n    }\n\n\n    notificarProfesor = (prof) => {\n\n        var mensaje = {\n            asunto: 'Alta de un nuevo alumno',\n            texto: 'Se ha añadido un nuevo alumno'\n                + '  Puede obtener más información en el apartado de ALUMNOS. ',\n            emisor: { profesor: '5f7c4c32fceb54223c41cf44' },\n            receptor: { profesor: prof }\n        }\n\n        axios.post('https://plataforma-erasmus.herokuapp.com/api/mensaje', mensaje)\n            .then(res => {\n                this.setState({\n                    nuevoMensaje: res.data.mensaje,\n                    status: 'sucess',\n                });\n            })\n            .catch(err => {\n                this.setState({\n                    status: 'failed'\n                });\n            });\n    }\n\n    handlePageClick = mensajes => {\n       \n        const selectedPage = mensajes.selected;\n        const offset = selectedPage * this.state.mensajesPerPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n      \n       }, () => \n            this.listarDestinos());\n        \n    }\n\n\n\n    render() {\n        let paginationElement;\n\n        if (this.state.pages > 1) {\n            paginationElement = (\n                <ReactPaginate\n                    previousLabel={\"<<\"}\n                    nextLabel={\">>\"}\n                    breakLabel={<span className=\"gap\">...</span>}\n                    pageCount={this.state.pages}\n                    onPageChange={this.handlePageClick}\n                    forcePage={this.state.currentPage}\n                    containerClassName={\"pagination justify-content-center\"}\n                    pageClassName={\"page-link\"}\n                    previousClassName={\"page-link\"}\n                    previousLinkClassName={\"page-item\"}\n                    nextClassName={\"page-link\"}\n                    nextLinkClassName={\"page-item\"}\n                    disabledClassName={\"disabled\"}\n                    activeClassName={\"page-item active\"}\n                    activeLinkClassName={\"page-link\"}\n                />\n            )\n}\n\n        const { values, handleChange, tipo } = this.props;\n\n\n        const listarDestinos = this.state.destinos.map((destino) => {\n            return (\n\n                <div>\n                    {tipo == 'alumno' &&\n                        <table>\n                            <tbody style={{overflow:'scroll'}}>\n                                <tr>\n                                    <td className=\"th-pequeño\">\n                                        {destino.pais}\n                                    </td>\n                                    <td className=\"th-pequeño\">\n                                        {destino.ciudad}\n                                    </td>\n                                    <td>\n                                        {destino.carrera}\n                                    </td>\n                                    <td>\n                                        {destino.profesor.nombre + \" \" + destino.profesor.apellido1 + \" \" + destino.profesor.apellido2}\n                                    </td>\n                                    <td className=\"th-pequeño\">\n                                        <button\n                                            className=\"btn-continue btn-seleccionar\"\n                                            onClick={() => this.guardarDestino(values.alumno._id, destino._id, destino.profesor._id, destino.coordinador._id)}\n                                        >seleccionar</button>\n                                    </td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n\n                    }\n                </div>\n            )\n        })\n        return (\n            <div className=\"grid-inicio\">\n                <div className=\"logo-titulo\">\n                    <img src={imagenlogo} width=\"100px\" height=\"80px\"></img>\n                    <div className=\"titulo-completo\">\n                        <h3>Universidad de Huelva</h3>\n                        <h1> ERASMUS+ </h1>\n                    </div>\n                </div>\n                <hr className=\"linea\"></hr>\n\n                <div className=\"registro-nuevoUsuario\">\n                    <h1 className=\"titulo titulo-registro \"> ALTA DE ALUMNO/A</h1>\n                    <h1 className=\"titulo titulo-registro titulo-registro-secundario\"> DATOS ERASMUS </h1>\n                    <div className=\"subtitulo\">Es posible que otros usuarios puedan ver parte de la infomación al usar la plataforma. </div>\n                    <Link to='/' className=\"link-cancelar\">Cancelar registro de usuario</Link><br />\n                    <div>\n                        {this.state.status == 'sucess' &&\n                            <div className=\"alert alert-success alert-sucess-middle\">\n\n                                <strong>¡Destino guardado correctamente!</strong>\n                                <h5>Pulse <strong>SIGUIENTE</strong> para completar el alta de usuario</h5>\n                                <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\n                            </div>\n\n                        }\n                        {this.state.status == 'failed' &&\n                            <div className=\"alert alert-danger\">\n\n                                <strong>¡Error!</strong> El correo no se pudo enviar correctamente\n                            <button classsName=\"close\" data-dismiss=\"alert\"> <span>&times;</span></button>\n                            </div>\n                        }\n                    </div>\n                    {/* NUEVOOOOO TABLAS */}\n                  \n                    <table >\n                        <thead className=\"cabecera\" >\n                            <tr style={{background:'white'}}>\n                                <th className=\"th-pequeño\">Pais</th>\n                                <th className=\"th-pequeño\">Ciudad</th>\n                                <th>Especialidad</th>\n                                <th>Coordinador</th>\n                            </tr>\n                        </thead>\n                       \n                    </table>\n                    {listarDestinos}\n                      {paginationElement}\n                    \n                    <table>\n                        <tbody>\n                    <button\n                        label=\"continue\"\n                        className=\"btn-continue form-login\"\n                        style={styles.button}\n                        onClick={this.continue}\n                    > SIGUIENTE </button>\n                    <button\n                        label=\"volver\"\n                        className=\"btn-back form-login\"\n                        style={styles.button}\n                        onClick={this.back}\n                    > VOLVER </button>\n                    </tbody>\n                    </table>\n\n                   \n\n                </div>\n\n\n            </div>\n        );\n\n    }\n}\n\nconst styles = {\n    button: { margin: 15 }\n}\n\nexport default FormDatosErasmus;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Slider.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\Global.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\GlobalDocumentos.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\MiPerfil.js",["546","547","548","549"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"../../assets/css/MiPerfil.css\";\nimport { NavLink } from 'react-router-dom';\nimport Global from '../../Global';\nimport MenuPerfil from './MenuPerfil';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport Card from 'react-bootstrap/Card';\n\nclass MiPerfil extends Component {\n\n    state = {\n        identity: {},\n        tipo: null,\n    }\n\n    url = Global.url;\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentWillMount() {\n        var id = this.props.match.params.id;\n        if (id == null) {\n            console.log(\"hola\")\n            this.setState({\n                identity: JSON.parse(localStorage.getItem('user')),\n\n            });\n        } else {\n            console.log(\"hola2\")\n            this.getalumno();\n        }\n    }\n\n    getalumno = () => {\n\n        console.log(\"dentro\");\n        var id = this.props.match.params.id;\n        axios.get(this.url + 'user/' + id)\n            .then(res => {\n                this.setState({\n                    identity: res.data.user\n                })\n                console.log(this.state.identity.nombre);\n            })\n    }\n\n\n\n    render() {\n\n\n        return (\n            <div>\n\n                <div id=\"content\" className=\"grid\">\n\n                    {this.props.match.params.id == null &&\n                        <MenuPerfil />\n                    }\n                    {this.props.match.params.id != null &&\n                        < Breadcrumb >\n                            <Breadcrumb.Item ><NavLink exact to=\"/inicio\">Home</NavLink></Breadcrumb.Item>\n                            <Breadcrumb.Item ><NavLink exact to=\"/Alumnos\">Alumnos</NavLink>\n                              \n                    </Breadcrumb.Item>\n                            <Breadcrumb.Item active >{this.state.identity.nombre + \" \" + this.state.identity.apellido1 + \" \" + this.state.identity.apellido2}</Breadcrumb.Item>\n                        </Breadcrumb>\n                    }\n\n                    <div className=\"avatar\" id=\"avatar-big\">\n                        <img src={ this.state.identity.image} classname=\"avatar\"></img>\n                    </div>\n\n                    <div >\n\n                        <h1 className=\"titulo\"> Información personal </h1>\n                        <div className=\"subtitulo\">Es posible que otros usuarios puedan ver parte de la infomación al usar la plataforma. </div>\n\n                        <div className=\"avatar\" id=\"avatar-responsive\">\n                            <img src={ this.state.identity.image} classname=\"avatar\"></img>\n                        </div>\n                        <article className=\"elemt-one\">\n\n                            <div className=\"elemt-form\">\n                                <header >\n                                    <h2 className=\"form-perfil-title\">Perfil</h2>\n                                    <hr />\n                                </header>\n                                <div className=\"profesor-erasmus\">\n                                    <h5><strong>Nombre: </strong> {this.state.identity.nombre}</h5>\n                                    <h5><strong>Apellidos: </strong>{this.state.identity.apellido1 + \" \" + this.state.identity.apellido2}</h5>\n                                    <h5><strong>Usuario: </strong> {this.state.identity.usuario}</h5>\n\n\n\n\n                                </div>\n\n\n\n                            </div>\n                        </article>\n\n                        <article className=\"elemt-one\">\n                            <div className=\"elemt-form\">\n                                <header >\n                                    <h2 className=\"form-perfil-title\">Información de contacto</h2>\n                                    <hr />\n\n                                </header>\n                                <div className=\"profesor-erasmus\">\n\n                                    <h5><strong>Correo electrónico: </strong>{this.state.identity.email}</h5>\n                                    <h5><strong>Teléfono: </strong> {this.state.identity.telefono}</h5>\n\n                                    {this.state.identity.tipo === 'profesor' &&\n                                        <div>\n                                            <h5><strong>Edificio: </strong>{this.state.identity.edificio}</h5>\n                                            <h5>{this.state.identity.datos}</h5>\n                                            <h5><strong>Nº Despacho: </strong>{this.state.identity.despacho}</h5>\n                                            <h5><strong>Tutoria</strong></h5>\n                                            <h5>{this.state.identity.tutoria}</h5>\n                                        </div>\n                                    }\n\n\n\n\n                                </div>\n                            </div>\n                        </article>\n                    </div>\n                </div>\n\n            </div >\n        );\n    }\n}\n\nexport default MiPerfil;\n","C:\\Ana\\servidor2.0\\cliente\\src\\components\\Inicio.js",["550","551","552"],"import React, { Component } from 'react';\nimport Slider from './Slider';\nimport Sidebar from './Sidebar';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\n\n\n\nclass Inicio extends Component {\n\n   \n\n\n\n    render() {\n        return (\n            <div>\n                \n                <Slider/>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Inicio;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\mensajes\\recibidos.js",["553","554","555","556","557","558"],"import React, { Component, useEffect } from 'react';\n\nimport Menu from './menu-mensajes';\nimport axios from 'axios';\n\nimport Card from 'react-bootstrap/Card';\nimport Global from '../../GlobalMensaje';\nimport GlobalPerfil from '../../Global';\nimport Moment from 'react-moment';\nimport ReactPaginate from \"react-paginate\";\nimport { Link, Redirect } from 'react-router-dom';\n\n\n\nclass recibidos extends Component {\n\n    state = {\n        title: 'Bandeja de entrada',\n        mensaje: [],\n        pages: \"\",\n        identity: JSON.parse(localStorage.getItem('user')),\n        currentPage: 0,\n        elements: [], //los que cargamos en la pagina actual\n        mensajesPerPage: 5,\n        offset: 0,\n        eliminado: {},\n\n    }\n\n\n    url = Global.url;\n    urlperfil = GlobalPerfil.url;\n\n\n    componentWillMount() {\n        this.setState({\n            identity: JSON.parse(localStorage.getItem('user'))\n        })\n\n        this.getMessage();\n    }\n\n\n\n\n    getMessage = () => {\n\n        var pages = this.state.currentPage + 1;\n        console.log(pages);\n\n        axios.get(this.url + 'myMessages/' + this.state.identity._id + '/' + pages)\n            .then(res => {\n\n                this.setState({\n                    mensaje: res.data.mensajes,\n                    pages: res.data.pages,\n                    status: 'sucess',\n                });\n\n                /* }, () => this.setElementsForCurrentPage());*/\n\n            })\n            .catch(err => {\n                this.setState({\n                    mensaje: {},\n                    status: 'failed'\n                });\n            });\n    }\n\n\n\n\n    /* setElementsForCurrentPage() {\n         let elements = this.state.mensaje.slice(this.state.offset, this.state.offset + this.state.mensajesPerPage)\n         this.setState({ elements: elements });\n     }*/\n\n    handlePageClick = mensajes => {\n        console.log(\"hola\");\n        const selectedPage = mensajes.selected;\n        const offset = selectedPage * this.state.mensajesPerPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n\n        }, () =>\n            this.getMessage());\n\n    }\n\n    componentDidMount() {\n        this.getMessage();\n    }\n\n    deleteMessage(id) {\n        axios.delete(this.url + 'delete/' + id)\n            .then(res => {\n                this.setState({\n                    eliminado: res.data.mensaje,\n                    status: 'sucess',\n                });\n                window.location.reload(true);\n            })\n            .catch(err => {\n                this.setState({\n                    eliminado: {},\n                    status: 'failed'\n                });\n            });\n    }\n\n\n    render() {\n\n        /*const {currentPage, mensajesPerPage, mensaje, pages} =this.state;\n \n         const indexOfLastPost= currentPage * mensajesPerPage;\n         const indexOfFirstPost= indexOfLastPost - mensajesPerPage;\n \n         const paginate= pageNum => this.setState({ currentPage: pageNum});\n         const currentPost= mensaje.slice(indexOfFirstPost, indexOfLastPost);*/\n\n        let paginationElement;\n\n        if (this.state.pages > 1) {\n            paginationElement = (\n                <ReactPaginate\n                    previousLabel={\"← Anterior\"}\n                    nextLabel={\"Siguiente →\"}\n                    breakLabel={<span className=\"gap\">...</span>}\n                    pageCount={this.state.pages}\n                    onPageChange={this.handlePageClick}\n                    forcePage={this.state.currentPage}\n                    containerClassName={\"pagination justify-content-center\"}\n                    pageClassName={\"page-link\"}\n                    previousClassName={\"page-link\"}\n                    previousLinkClassName={\"page-item\"}\n                    nextClassName={\"page-link\"}\n                    nextLinkClassName={\"page-item\"}\n                    disabledClassName={\"disabled\"}\n                    activeClassName={\"page-item active\"}\n                    activeLinkClassName={\"page-link\"}\n                />\n            )\n        }\n\n        if (this.state.mensaje.length >= 1) {\n            var listarmensajes = this.state.mensaje.map((mensajes) => {\n                return (\n                    <div >\n                        {mensajes.visto == 'true' &&\n\n\n                            <Card style={{ width: '70em' }} className=\"card-mensajes row no-gutters \">\n                                {mensajes.emisor.profesor != null &&\n                                    <Card.Img variant=\"left\" src={ mensajes.emisor.profesor.image} className=\"image-user\" />\n                                }\n                                {mensajes.emisor.alumno != null &&\n                                    <Card.Img variant=\"left\" src={ mensajes.emisor.alumno.image} className=\"image-user\" />\n                                }\n\n                                <Card.Body id=\"cardbody\">\n                                    <Link to={'/mensajes/' + mensajes._id}>\n                                    <div className=\"mensaje-header\">\n                                        {mensajes.emisor.profesor != null &&\n                                            <h4 id=\"mensaje-nombre\">{mensajes.emisor.profesor.nombre + \"  \" + mensajes.emisor.profesor.apellido1 + \"    \" + mensajes.emisor.profesor.apellido2} </h4>\n                                        }\n                                        {mensajes.emisor.alumno != null &&\n                                            <h4 id=\"mensaje-nombre\">{mensajes.emisor.alumno.nombre + \"  \" + mensajes.emisor.alumno.apellido1 + \"    \" + mensajes.emisor.alumno.apellido2} </h4>\n                                        }\n\n                                        <h6 className=\"fecha\"> <Moment format=\"DD-MM-YYYY\">{mensajes.fecha}</Moment></h6>\n                                    </div>\n                                    \n                                        <Card.Text className=\"mensaje-texto\" id=\"mensaje-texto-grande\">\n                                            <strong>{mensajes.asunto}        </strong>\n                                            {mensajes.texto}\n                                        </Card.Text>\n                                       \n                                    </Link>\n                                    <button href={\"#\"} className=\"mensaje-enlace boton-sin-estilo\" onClick={() => { if (window.confirm('\\n' + '¿Estas seguro de eliminar el mensaje ?')) this.deleteMessage(mensajes._id); }} >\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\" />\n                                        </svg>\n                                    </button>\n                                </Card.Body>\n\n\n\n                            </Card>\n\n\n\n                        }\n\n                        {mensajes.visto == 'false' &&\n                           \n                                <Card style={{ width: '70em' }} className=\"card-mensaje-novisto row no-gutters \">\n                                    {mensajes.emisor.profesor != null &&\n                                        <Card.Img variant=\"left\" src={mensajes.emisor.profesor.image} className=\"image-user\" />\n                                    }\n                                    {mensajes.emisor.alumno != null &&\n                                        <Card.Img variant=\"left\" src={ mensajes.emisor.alumno.image} className=\"image-user\" />\n                                    }\n                                    <Card.Body id=\"cardbody\">\n                                    <Link to={'/mensajes/' + mensajes._id}>\n                                        <div className=\"mensaje-header-novisto\">\n                                            {mensajes.emisor.profesor != null &&\n                                                <h4 id=\"mensaje-nombre\">{mensajes.emisor.profesor.nombre + \"  \" + mensajes.emisor.profesor.apellido1 + \"    \" + mensajes.emisor.profesor.apellido2} </h4>\n                                            }\n                                            {mensajes.emisor.alumno != null &&\n                                                <h4 id=\"mensaje-nombre\">{mensajes.emisor.alumno.nombre + \"  \" + mensajes.emisor.alumno.apellido1 + \"    \" + mensajes.emisor.alumno.apellido2} </h4>\n                                            }\n                                            <h6 className=\"fecha\"> <Moment format=\"DD-MM-YYYY\">{mensajes.fecha}</Moment></h6>\n                                        </div>\n\n                                        <Card.Text className=\"mensaje-texto-novisto\">\n                                            <strong>{mensajes.asunto}       </strong>\n                                            {mensajes.texto}\n                                        </Card.Text>\n                                        </Link>\n                                        <button href={\"#\"} className=\"mensaje-enlace boton-sin-estilo\" onClick={() => { if (window.confirm('\\n' + '¿Estas seguro de eliminar el mensaje ?')) this.deleteMessage(mensajes._id); }} >\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\" />\n                                        </svg>\n                                    </button>\n                                    </Card.Body>\n\n\n\n                                </Card>\n                            \n                        }\n\n                    </div>\n\n                )\n            })\n            return (\n\n                <div className=\"grid-mensajeria-col\">\n\n                    <Menu />\n\n\n\n                    <div>\n                        <h3 className=\"title-pantalla-mensaje\">{this.state.title} </h3>\n                        {listarmensajes}\n                        {paginationElement}\n                    </div>\n\n                </div>\n\n\n\n            );\n        } else {\n            return (\n\n                <div className=\"grid-mensajeria-col\">\n\n                    <Menu />\n\n\n\n                    <div>\n                        <h3>No hay mensajes </h3>\n\n\n                    </div>\n                </div>\n\n\n\n            );\n        }\n\n    }\n}\n\n\nexport default recibidos;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\borrardestino.js",["559","560"],"import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Menu from './menu-admin';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\nclass borrar extends Component {\r\n\r\n    state = {\r\n        destinos: [],\r\n        profesores: [],\r\n        destino: \"\",\r\n        open: false,\r\n        profesor: \"\",\r\n        update: {},\r\n        status: \"\",\r\n        pages:\"\",\r\n        currentPage:0,\r\n        mensajesPerPage: 5,\r\n        offset: 0,\r\n\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.listarDestinos();\r\n        this.listarProfesores();\r\n    }\r\n\r\n    \r\n\r\n    openModal = (id) => {\r\n        console.log(\"id:\" + id)\r\n        this.setState({ open: true, destino: id });\r\n\r\n    }\r\n\r\n\r\n    onCloseModal = () => { this.setState({ open: false }); }\r\n\r\n    handlePageClick = mensajes => {\r\n       \r\n        const selectedPage = mensajes.selected;\r\n        const offset = selectedPage * this.state.mensajesPerPage;\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n      \r\n       }, () => \r\n            this.listarDestinos());\r\n        \r\n    }\r\n\r\n    listarDestinos() {\r\n\r\n        var pages= this.state.currentPage+1;\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiDestino/destinos/'+ pages)\r\n            .then(res => {\r\n                this.setState({\r\n                    destinos: res.data.destino,\r\n                    pages:res.data.pages\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    listarProfesores() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    profesores: res.data.profesor,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    }\r\n\r\n    delete = (id) => {\r\n\r\n\r\n\r\n        axios.put('https://plataforma-erasmus.herokuapp.com/apiDestino/delete/' + id)\r\n            .then(res => {\r\n                this.setState({\r\n                    status: 'sucess'\r\n\r\n                });\r\n            });\r\n        this.onCloseModal();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let paginationElement;\r\n\r\n        if (this.state.pages > 1) {\r\n            paginationElement = (\r\n                <ReactPaginate\r\n                    previousLabel={\"<<\"}\r\n                    nextLabel={\">>\"}\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={this.state.pages}\r\n                    onPageChange={this.handlePageClick}\r\n                    forcePage={this.state.currentPage}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-link\"}\r\n                    previousClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-item\"}\r\n                    nextClassName={\"page-link\"}\r\n                    nextLinkClassName={\"page-item\"}\r\n                    disabledClassName={\"disabled\"}\r\n                    activeClassName={\"page-item active\"}\r\n                    activeLinkClassName={\"page-link\"}\r\n                />\r\n            )\r\n}\r\n        const listarDestinos = this.state.destinos.map((destino) => {\r\n            return (\r\n\r\n                <div>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td >\r\n                                    {destino.pais}\r\n                                </td>\r\n                                <td >\r\n                                    {destino.ciudad}\r\n                                </td>\r\n                                <td>\r\n                                    {destino.carrera}\r\n                                </td>\r\n                                <td>\r\n                                    {destino.profesor.nombre + \"  \" + destino.profesor.apellido1 + \" \" + destino.profesor.apellido2}\r\n\r\n\r\n                                </td>\r\n                                <td>\r\n                                    {destino.coordinador.nombre + \" \" + destino.coordinador.apellido1 + \" \" + destino.coordinador.apellido2}\r\n                                </td>\r\n                                <td>\r\n                                    <button variant=\"primary\" onClick={() => { if (window.confirm('\\n' + 'Estas seguro de eliminar el destino ' + destino.ciudad + \"(\" + destino.pais + \") ?\")) this.delete(destino._id); }}\r\n                                        style={{ border: 'none', backgroundColor: 'transparent', marginLeft: '3px' }}>\r\n                                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            )\r\n        })\r\n        return (\r\n\r\n            <div className=\"grid-admin\">\r\n\r\n                <Menu></Menu>\r\n                <div>\r\n                    <div>\r\n                        <h1 className=\"titulo-doc\">    BORRAR DESTINOS </h1></div>\r\n\r\n                    <div >\r\n\r\n                    </div>\r\n                    <div >\r\n                        {/* NUEVOOOOO TABLAS */}\r\n\r\n                        <table style={{ marginTop: '20px' }} >\r\n                            <thead >\r\n                                <tr className=\"table-admin\">\r\n                                    <th >Pais</th>\r\n                                    <th >Ciudad</th>\r\n                                    <th>Grado</th>\r\n                                    <th>Coordinador de destino</th>\r\n                                    <th>Coordinador de centro</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                        {listarDestinos}\r\n                        {paginationElement}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default borrar;","C:\\Ana\\servidor2.0\\cliente\\src\\GlobalMensaje.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\menu-admin.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\views\\erasmus.js",["561","562"],"import React, { Component } from 'react';\r\nimport MenuPerfil from './MenuPerfil';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../../Global';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\n\r\nclass erasmus extends Component {\r\n\r\n    state = {\r\n        identity: JSON.parse(localStorage.getItem('user')),\r\n        coordinador: {},\r\n        destinos: [],\r\n        status: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.getcoordinador();\r\n        this.getdestinos();\r\n\r\n\r\n    }\r\n\r\n    urlprofesor = Global.urlprofesor;\r\n\r\n\r\n    getcoordinador() {\r\n        axios.get(this.urlprofesor + 'get-coordinador-centro')\r\n            .then(res => {\r\n                this.setState({\r\n                    coordinador: res.data.profesor,\r\n\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    getdestinos() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiDestino/destinoByProfesor/' + this.state.identity._id)\r\n            .then(res => {\r\n                this.setState({\r\n                    destinos: res.data.destino,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.destinos != undefined) {\r\n            var listardocumentos = this.state.destinos.map((destino, index) => {\r\n                return (\r\n                    <div>\r\n                        <h6><strong>{index+1 +\". \" }</strong>{destino.ciudad + \" (\" + destino.pais + \") --- \"+ destino.carrera}</h6>\r\n                        <br></br>\r\n                        \r\n                    </div>\r\n\r\n                );\r\n            })\r\n        }else{\r\n            return(\r\n                <h6>No hay elementos</h6>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <div id=\"content\" className=\"grid-passw\">\r\n                <MenuPerfil />\r\n                \r\n                <div >\r\n                    <h1 className=\"titulo\"> Información ERASMUS </h1>\r\n                    <Card className=\"elemt-one-passw\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"form-perfil-title\" style={{ borderBottom: '1px solid grey' }}>Coordinador de Centro</Card.Title>\r\n                            <div className=\"profesor-erasmus\">\r\n                                <h6><strong>Nombre: </strong> {this.state.coordinador.nombre + \" \" + this.state.coordinador.apellido1 + \" \" + this.state.coordinador.apellido2}</h6>\r\n                                <h6><strong>Correo electrónico: </strong>{this.state.coordinador.email}</h6>\r\n                                <h6><strong>Télefono: </strong> {this.state.coordinador.telefono}</h6>\r\n                                <h6><strong>Edificio: </strong> {this.state.coordinador.edificio} <strong>Nº despacho: </strong>{this.state.coordinador.despacho}</h6>\r\n                                <h6>{this.state.coordinador.datos}</h6>\r\n                            </div>\r\n                        </Card.Body>\r\n\r\n\r\n                    </Card>\r\n\r\n                    <Card className=\"elemt-one-passw\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"form-perfil-title\" style={{ borderBottom: '1px solid grey' }}>Tus destinos</Card.Title>\r\n                            <div className=\"profesor-erasmus\">\r\n                                {listardocumentos}\r\n                            </div>\r\n                        </Card.Body>\r\n\r\n\r\n                    </Card>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default erasmus;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\admin\\deleteProfesor.js",["563","564","565","566"],"import React, { Component } from 'react';\r\n\r\nimport Global from '../../Global';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from 'axios';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\n\r\n\r\nclass DeleteProfesor extends Component {\r\n\r\n    state = {\r\n\r\n        status: null,\r\n        message: \"\",\r\n        profesores: [],\r\n        profesor: {},\r\n        getprofesor: {},\r\n\r\n\r\n\r\n    };\r\n\r\n    urlprofesor = Global.urlprofesor;\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listarProfesores();\r\n\r\n    }\r\n\r\n\r\n    getcoordinador() {\r\n        axios.get(this.urlprofesor + 'get-coordinador-centro')\r\n            .then(res => {\r\n                this.setState({\r\n                    coordinador: res.data.profesor,\r\n\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n\r\n    bajaProfesor(e) {\r\n       \r\n        axios.get('https://plataforma-erasmus.herokuapp.com/comprobarprofesor/' + this.state.profesor)\r\n            .then(res => {\r\n                this.setState({\r\n                    message: res.data.message\r\n                });\r\n\r\n                if (res.data.message === 'no existe') {\r\n                    axios.delete(this.urlprofesor + 'dardebaja/' + this.state.profesor)\r\n                        .then(res => {\r\n                            this.setState({\r\n                                status: 'sucess'\r\n                            })\r\n\r\n                        });\r\n                }else{\r\n                    this.setState({\r\n                        status:'no'\r\n                    })\r\n                    var elem = document.getElementById('toast');\r\n                    elem.style.display = 'block';\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    listarProfesores() {\r\n        axios.get('https://plataforma-erasmus.herokuapp.com/apiProfesor/' + 'profesores')\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    profesores: res.data.profesor,\r\n\r\n                });\r\n            });\r\n    }\r\n\r\n    handleChange = input => e => {\r\n        this.setState({ [input]: e.target.value });\r\n    }\r\n\r\n\r\n    mostrarFormulario() {\r\n        var elem = document.getElementById('form-baja-profesor');\r\n        elem.style.display = 'block';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"delete-profesor\">\r\n                <h1 className=\"titulo-doc\" style={{ marginBottom: '25px' }}>DAR DE BAJA PROFESOR</h1>\r\n\r\n                <Card className=\"card-bajas\">\r\n                    <div className=\"bajas\">\r\n                        <h3 style={{ fontSize: '24px', color: '#BB0909' }}>¡IMPORTANTE!</h3>\r\n                        <h5 style={{ fontSize: '18px' }}><strong>Antes de dar de baja a un profesor debes de tener en cuenta:</strong></h5>\r\n                        <h5 style={{ fontSize: '16px' }}><strong>1.</strong> El profesor no puede ser coordinador de centro. </h5>\r\n                        <h5 style={{ fontSize: '16px' }}><strong>2.</strong> El profesor no puede tener ningún destino a su cargo, es decir, no puede ser coordinador de algún destino </h5>\r\n                        <h5 style={{ fontSize: '16px' }}>Si alguna de las anteriores condiciones se incumple, deberá ir a gestión de destino y modificar los datos necesarios. </h5>\r\n                        <h5 style={{ fontSize: '20px' }}> <strong>Recuerda</strong></h5>\r\n                        <h5 style={{ fontSize: '16px' }}>Al efectuar la baja del perfil todos sus datos desaparecerán de nuestro servidor,\r\n                        por lo que para poder acceder a la web el usuario deberá registrarse de nuevo.\r\n                </h5>\r\n                        <label>¿Quiere seguir con la solicitud de la baja? <button onClick={this.mostrarFormulario}> SI </button></label>\r\n                        <div id=\"form-baja-profesor\" style={{ display: 'none' }}>\r\n                            <Form className=\"form-borrar-profesor\" >\r\n                                <Form.Group>\r\n                                    <Form.Label style={{ fontSize: '16px' }}> Elige al profesor que desea dar de baja</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange('profesor')} type=\"profesor\" >\r\n                                        <option> </option>\r\n                                        {this.state.profesores.map((prof) => (\r\n                                            <option key={prof._id} value={prof._id} >\r\n                                                {prof.nombre + \" \" + prof.apellido1 + \" \" + prof.apellido2}\r\n                                            </option>\r\n                                        ))\r\n\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            \r\n                                 <label id=\"toast\" style={{display:'none', color:'red'}}> No se puede dar de baja al usuario. Revisa las condiciones descritas arribas </label>\r\n                               \r\n                                \r\n                               \r\n                            </Form>\r\n                            <button onClick={() => { if (window.confirm('\\n' + '¿Esta usted seguro? El profesor será eliminado del sistema ')) this.bajaProfesor(); }} className=\"btn-style\"> DAR DE BAJA </button>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteProfesor;",["567","568"],"C:\\Ana\\servidor2.0\\cliente\\src\\Rutas.js",["569"],"import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\n\nimport RutasWeb from './RutasWeb';\nimport InicioSesion from './components/InicioSesion';\nimport InicioAdministrador from './components/InicioAdministrador';\nimport pantallaInicial from './components/pantallaInicial';\nimport Userform from './components/newUser/Userform';\nimport UseformProfesor from './components/newUser/UseformProfesor';\nimport Chat from './components/chat/Chat';\nimport Join from './components/chat/Join';\n\n\nclass Rutas extends Component {\n    render() {\n        return (\n           \n\n                <HashRouter basename=\"/\">\n\n                    <Switch>\n                        <Route exact path=\"/\" component={pantallaInicial} />\n                        <Route exact path=\"/inicioSesion\" component={InicioSesion} />\n                        <Route exact path=\"/nuevoUsuario\" component={Userform} />\n                        <Route exact path='/nuevoProfesor' component={UseformProfesor} />\n                        <Route exact path='/inicioAdministrador' component={InicioAdministrador} />\n\n\n                        <Route exact path=\"/chat\" component={Chat} />\n                        <Route exact path=\"/join\" component={Join} />\n                        <RutasWeb />\n\n\n                    </Switch>\n                    <div className=\"clearfix\"></div>\n                </HashRouter>\n           \n        );\n    }\n}\n\n\nexport default Rutas;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Input.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Message.js",["570"],"import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nimport './Message.css';\r\n\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({ message :{user, text}, name }) => {\r\n\r\n    let isSentByCurrentUser = false;\r\n\r\n    const trimedName = name.trim().toLowerCase();\r\n    if (user === trimedName) {\r\n        isSentByCurrentUser = true;\r\n    }\r\n\r\n    return (\r\n        isSentByCurrentUser\r\n            ? (\r\n                <div className=\"messageContainer justifyEnd\" >\r\n                    <p className=\"sentText pr-10\">{trimedName}</p>\r\n                    <div className=\"messageBox backgroundBlue\">\r\n                        <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n            : (\r\n                <div className=\"messageContainer justifyStart\">\r\n               \r\n                <div className=\"messageBox backgroundLight\">\r\n                    <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n                </div>\r\n                <p className=\"sentText pl-10\">{user}</p>\r\n            </div>\r\n        )\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Message;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\InfoBar.js",["571","572"],"import React from 'react';\r\n\r\nimport closeIcon from '../../assets/images/closeIcon.png';\r\nimport onlineIcon from '../../assets/images/onlineIcon.png';\r\n\r\nimport './InfoBar.css';\r\n\r\nconst InfoBar = ({room})=>(\r\n\r\n    <div className=\"infoBar\">\r\n        <div className=\"leftInnerContainer\">\r\n            <img className=\"onlineIcon\" src={onlineIcon} alt=\"online image\"></img>\r\n            <h3>{room}</h3>\r\n        </div>  \r\n        <div className=\"rightInnerContainer\">\r\n            <a href=\"/join\"><img src={closeIcon} alt=\"close image\"></img></a>\r\n        </div>  \r\n     </div>\r\n)\r\n\r\n\r\nexport default InfoBar;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Chat.js",["573"],"import React, { Component, useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport InfoBar from './InfoBar';\r\nimport Input from './Input';\r\nimport Messages from './Messages';\r\n\r\n\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\n\r\nlet socket;\r\n\r\nconst Chat=({location}) =>{\r\n\r\n       const [name, setName] = useState('');\r\n       const [room, setRoom] = useState('');\r\n       const [message, setMessage] = useState('');\r\n       const [messages, setMessages] = useState([]);\r\n       const ENDPOINT='https://plataforma-erasmus.herokuapp.com/'\r\n\r\n    useEffect(()=>{\r\n        const {name, room}=queryString.parse(location.search);\r\n        socket=io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n        \r\n       socket.emit('join', {name, room}, ()=>{\r\n        \r\n       }); \r\n\r\n       return () =>{\r\n           socket.emit('disconnect');\r\n           socket.off();\r\n       }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n\r\n    useEffect(()=>{\r\n        socket.on('message', (message)=>{\r\n            setMessages([...messages, message]);\r\n        });\r\n    },[messages]);\r\n\r\n    // funcion para enviar mensajes\r\n\r\n    const sendMessage =(event) =>{\r\n    \r\n        event.preventDefault();\r\n\r\n        if(message){\r\n            socket.emit('sendMessage', message, ()=> setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n    \r\n        return (\r\n            <div className=\"outerContainer\">\r\n               <div className=\"container\">\r\n                <InfoBar room={room}/>\r\n                <Messages messages={messages} name={name}/>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n               </div>\r\n              \r\n\r\n            </div>\r\n\r\n        );\r\n   \r\n}\r\n\r\nexport default Chat;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Messages.js",[],"C:\\Ana\\servidor2.0\\cliente\\src\\components\\Dropbox.js",["574","575","576","577","578","579","580","581","582"],"import React, { Component } from 'react';\nimport NuevoDocumento from './NuevoDocumento';\n\nimport GlobalDocumentos from '../GlobalDocumentos';\nimport '../assets/css/NuevoUsuario.css';\nimport Documentos from './Documentos';\nimport Spinner from 'react-bootstrap/Spinner';\nimport '../assets/css/dropbox.css';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport Global from '../Global';\nimport ButtonIcon from \"@material-ui/core/Button\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ReactPaginate from \"react-paginate\";\nimport Card from 'react-bootstrap/Card';\nimport swal from 'sweetalert';\n\n/*IMAGENES - BOTONES */\n\nimport btn1 from '../assets/images/pdf.png';\nimport btn2 from '../assets/images/zip.png';\nimport btn3 from '../assets/images/default.png';\n\n\n\nclass Dropbox extends Component {\n\n    url = GlobalDocumentos.url;\n\n\n    state = {\n        documentos: [],\n        docprofesor: [],\n        doccordinador:[],\n        status: null,\n        identity: null,\n        eliminado: {},\n        value: false,\n        pages: \"\",\n        currentPage: 0,\n        mensajesPerPage: 5,\n        offset: 0,\n\n\n\n    };\n\n    url = GlobalDocumentos.url;\n    urlalumno = Global.urlalumno;\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: JSON.parse(localStorage.getItem('user')),\n        };\n        this.getDocumentos();\n    }\n\n\n\n\n\n    getDocumentos = (e) => {\n        /*  e.preventDefault();*/\n\n        var id = this.props.match.params.id;\n        var pages = this.state.currentPage + 1;\n        if (this.state.identity.tipo === 'Alumno') { //view: alumno\n\n            /*axios.get(this.url + \"documentosAlumnos/\" + this.state.identity._id + '/' + this.state.identity.profesor)\n                .then(res => {\n                    this.setState({\n                        documentos: res.data.documento,\n                        status: 'sucess'\n                    });\n                });*/\n\n            axios.get(this.url + \"documentosProfesor/\" + this.state.identity.profesor + '/' + this.state.identity._id + \"/\" + pages)\n                .then(res => {\n                    this.setState({\n                        docprofesor: res.data.documento,\n                        status: 'sucess',\n                        pages: res.data.pages,\n                    });\n                    \n                    axios.get(this.url + \"documentosProfesor/\" + this.state.identity.coordinador + '/' + this.state.identity._id + \"/\" + pages)\n                .then(ress => {\n                    var lista= res.data.documento.concat(ress.data.documento)\n                    this.setState({\n                        docprofesor: lista,\n                        status: 'sucess',\n                        pages: res.data.pages,\n                    });\n                });\n                });\n                \n\n\n        }\n        else {\n            axios.get(this.url + \"documentosProfesor/\" + this.state.identity._id + '/' + id + '/' + pages)\n                .then(res => {\n                    this.setState({\n                        docprofesor: res.data.documento,\n                        status: 'sucess',\n                        pages: res.data.pages,\n                    });\n                });\n\n        }\n    }\n\n\n    handlePageClick = mensajes => {\n\n        const selectedPage = mensajes.selected;\n        const offset = selectedPage * this.state.mensajesPerPage;\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n\n        }, () =>\n            this.getDocumentos());\n\n    }\n\n    delete(title) {\n        axios.delete(this.url + \"delete/\" + title)\n            .then(res => {\n                this.setState({\n\n                    status: 'sucess',\n                    value: true\n                });\n                window.location.reload(true);\n\n            })\n\n\n\n\n    }\n\n\n\n    render() {\n\n        let paginationElement;\n\n        if (this.state.pages > 1) {\n            paginationElement = (\n                <ReactPaginate\n                    previousLabel={\"<<\"}\n                    nextLabel={\">>\"}\n                    breakLabel={<span className=\"gap\">...</span>}\n                    pageCount={this.state.pages}\n                    onPageChange={this.handlePageClick}\n                    forcePage={this.state.currentPage}\n                    containerClassName={\"pagination justify-content-center\"}\n                    pageClassName={\"page-link\"}\n                    previousClassName={\"page-link\"}\n                    previousLinkClassName={\"page-item\"}\n                    nextClassName={\"page-link\"}\n                    nextLinkClassName={\"page-item\"}\n                    disabledClassName={\"disabled\"}\n                    activeClassName={\"page-item active\"}\n                    activeLinkClassName={\"page-link\"}\n                />\n            )\n        }\n\n        if (this.state.docprofesor != undefined) {\n            var listardocumentos = this.state.docprofesor.map((documentos) => {\n                return (\n                    <div className=\"documento-item\">\n\n                        <table aria-rowcount={this.state.docprofesor.length} className=\"table-dropbox\" >\n                            <tbody>\n                                <tr>\n                                    <td >\n                                        <div>\n\n                                            {\n                                                 documentos.formato == \"pdf\" ? (\n                                                    <img src={btn1} alt=\"prueba\" className=\"image-wrap\" />\n                                                ) : documentos.formato === \"zip\"|| documentos.formato ==='rar' ? (\n                                                    <img src={btn2} alt=\"prueba\" className=\"image-wrap\" />\n                                                ) :  (                                        \n                                                                    <img src={documentos.image} alt=\"prueba\" className=\"image-wrap\" />\n                                                                )\n                                            }\n\n                                        </div>\n                                        <div>\n                                        <a target=\"_blank\" href={ documentos.image} title=\"descargar\">{documentos.title}</a>\n                                        </div>\n                                    </td>\n                                    <td style={{ overflow: 'auto', maxHeight: '200px' }}>\n                                        {documentos.descripcion}\n                                    </td>\n                                    <td>\n                                        {documentos.propietario === 'Alumno' ? (\n                                            documentos.alumno.nombre + \" \" + documentos.alumno.apellido1 + \" \" + documentos.alumno.apellido2\n                                        ) :\n                                            documentos.profesor.nombre + \" \" + documentos.profesor.apellido1 + \" \" + documentos.profesor.apellido2\n                                        }\n\n                                    </td>\n\n\n                                    <td>\n                                        <spain>\n                                            <Moment format=\"DD-MM-YYYY\">{documentos.date}</Moment>\n                                        </spain>\n\n                                    </td>\n                                    <td className=\"th-pequeño\">\n                                        <ButtonIcon onClick={() => { if (window.confirm('\\n' + 'Estas seguro de eliminar el archivo ' + documentos.title + '?')) this.delete(documentos.title); }}\n                                            className=\"btn-delete\" startIcon={<DeleteIcon />}></ButtonIcon>\n                                    </td>\n\n                                </tr>\n                            </tbody>\n                        </table>\n\n                        <div className=\"clearfix\"></div>\n                    </div>\n                );\n            });\n            return (\n\n                <div className=\"grid-documentos\">\n                    <div >\n\n                        {this.props.match.params.nombre != null &&\n                            <div>\n                                <h1 className=\"titulo-secundario\">NUBE COMPARTIDA</h1>\n                                <h4 className=\"subtitulo-doc\">Alumno: {this.props.match.params.nombre + \" \" + this.props.match.params.apellido1 + \"  \" + this.props.match.params.apellido2}</h4>\n                            </div>\n                        }\n                        {this.state.identity.tipo === \"Alumno\" &&\n                            <h1 className=\"titulo-doc\">NUBE COMPARTIDA</h1>\n                        }\n\n                    </div>\n                    <div className=\" grid-documentos-col-compartida\">\n                        <div>\n                            <div >\n\n                                <Card className=\"card-bajas\" style={{ border: 'none', background:'transparent'}}>\n                                    <div className=\"bajas\">\n                                        <h3 style={{ fontSize: '24px', color: '#BB0909' }}>¡Recuerda!!</h3>\n                                        <h5 style={{ fontSize: '16px' }}> Sólo se pueden subir imagenes o archivos en formato .pdf .jpg ó .png </h5>\n                                        <h5 style={{ fontSize: '16px' }}> Otros usuarios pueden ver el contenido de esta nube.</h5>\n\n                               \n\n                                    </div>\n                                </Card>\n\n                                <table className=\"table-dropbox dropbox-cabecera\">\n                                    <thead >\n                                        <tr>\n                                            <th className=\"table-dropbox-th\" >Nombre</th>\n                                            <th className=\"table-dropbox-th\">Comentario</th>\n                                            <th className=\"table-dropbox-th\">Subido por:</th>\n                                            <th className=\"table-dropbox-th\">Fecha de subida</th>\n                                            <th className=\"th-pequeño\"></th>\n\n                                        </tr>\n                                    </thead>\n                                </table>\n\n                            </div>\n                            {listardocumentos}\n                            {paginationElement}\n\n                        </div>\n                        <div className=\"btn-docOficial\">\n                            <NuevoDocumento type=\"documento\" alumno={this.props.match.params.id} message=\"hola\" />\n                        </div>\n\n                    </div>\n\n                </div>\n\n            );\n        } else {\n            return (\n                <div className=\"grid-documentos\">\n                    <div >\n                        <h1 className=\"titulo-secundario\">DROPBOX</h1>\n                        {this.props.match.params.nombre != null &&\n                            <h4 className=\"subtitulo-doc\">{this.props.match.params.nombre + \" \" + this.props.match.params.apellido1 + \"  \" + this.props.match.params.apellido2}</h4>\n                        }\n                        <h1 className=\"titulo-doc\"></h1>\n                    </div>\n                    <div className=\" grid-documentos-col\">\n                        <div>\n                            <div style={{ textAlign: 'center' }}>\n                                <Spinner animation=\"border\" role=\"status\" >\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner>\n\n                            </div>\n\n                        </div>\n                        <div className=\"btn-docOficial\">\n\n\n                            <NuevoDocumento type=\"documento\" alumno={this.props.match.params.id} message=\"hola\" />\n\n\n                        </div>\n\n                    </div>\n\n                </div>\n            );\n\n        }\n\n\n    }\n}\n\nexport default Dropbox;","C:\\Ana\\servidor2.0\\cliente\\src\\components\\chat\\Join.js",["583","584"],"import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport imagenlogo from '../../assets/images/logo-erasmus.png';\r\n\r\nimport './Join.css';\r\n\r\n\r\n\r\nconst Join = () => {\r\n\r\n\r\n    const [room, setRoom] = useState('');\r\n    const identity = JSON.parse(localStorage.getItem('user'));\r\n    const nombre = identity.nombre + \" \" + identity.apellido1;\r\n    const name = nombre;\r\n    return (\r\n        <div>\r\n             <div className=\"profesor-erasmus mt-5\">\r\n                    <h4>¡Bienvenido!</h4>\r\n                    <h5>Para invitar a otros usuarios solo tiene que compartir con ellos el nombre de la sala que usted ha creado.</h5>\r\n                </div>\r\n            <div className=\"joinOuterContainer\">\r\n               \r\n                <div className=\"joinInnerContainer\">\r\n\r\n                    <h1 className=\"heading\">Crear sala</h1>\r\n\r\n                    <div> <input placeholder=\"Nombre\" className=\"joinInput\" type=\"text\" /*onChange={(event)=>setName(event.target.value)} */ value={nombre} /> </div>\r\n                    <div> <input placeholder=\"Nombre de la sala\" className=\"joinInput mt-20\" type=\"text\" onChange={(event) => setRoom(event.target.value)} /> </div>\r\n                    <Link onClick={event => (!name || !room) ? event.preventDefault() : null} to={'/chat?name=' + name + '&room=' + room}>\r\n                        <button className=\"button-join mt-20\" type=\"submit\">crear sala</button>\r\n                    </Link>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Join;",["585","586"],{"ruleId":"587","replacedBy":"588"},{"ruleId":"589","replacedBy":"590"},{"ruleId":"587","replacedBy":"591"},{"ruleId":"589","replacedBy":"592"},{"ruleId":"593","severity":1,"message":"594","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":28},{"ruleId":"593","severity":1,"message":"597","line":8,"column":10,"nodeType":"595","messageId":"596","endLine":8,"endColumn":20},{"ruleId":"593","severity":1,"message":"598","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":15},{"ruleId":"593","severity":1,"message":"599","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":12},{"ruleId":"593","severity":1,"message":"600","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":17},{"ruleId":"593","severity":1,"message":"601","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":14},{"ruleId":"593","severity":1,"message":"602","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":18},{"ruleId":"603","severity":1,"message":"604","line":53,"column":29,"nodeType":"605","messageId":"606","endLine":53,"endColumn":31},{"ruleId":"607","severity":1,"message":"608","line":110,"column":9,"nodeType":"609","messageId":"610","endLine":157,"endColumn":10},{"ruleId":"587","replacedBy":"611"},{"ruleId":"589","replacedBy":"612"},{"ruleId":"593","severity":1,"message":"613","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":23},{"ruleId":"593","severity":1,"message":"614","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":14},{"ruleId":"593","severity":1,"message":"615","line":33,"column":8,"nodeType":"595","messageId":"596","endLine":33,"endColumn":15},{"ruleId":"593","severity":1,"message":"616","line":39,"column":13,"nodeType":"595","messageId":"596","endLine":39,"endColumn":17},{"ruleId":"593","severity":1,"message":"617","line":3,"column":8,"nodeType":"595","messageId":"596","endLine":3,"endColumn":22},{"ruleId":"593","severity":1,"message":"618","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":14},{"ruleId":"593","severity":1,"message":"619","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":20},{"ruleId":"593","severity":1,"message":"620","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":18},{"ruleId":"593","severity":1,"message":"621","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":12},{"ruleId":"622","severity":1,"message":"623","line":104,"column":29,"nodeType":"624","endLine":104,"endColumn":79},{"ruleId":"593","severity":1,"message":"625","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":17},{"ruleId":"593","severity":1,"message":"601","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":14},{"ruleId":"593","severity":1,"message":"626","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":28},{"ruleId":"593","severity":1,"message":"627","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":13},{"ruleId":"603","severity":1,"message":"628","line":71,"column":38,"nodeType":"605","messageId":"606","endLine":71,"endColumn":40},{"ruleId":"622","severity":1,"message":"623","line":124,"column":25,"nodeType":"624","endLine":124,"endColumn":75},{"ruleId":"603","severity":1,"message":"604","line":133,"column":31,"nodeType":"605","messageId":"606","endLine":133,"endColumn":33},{"ruleId":"603","severity":1,"message":"604","line":136,"column":31,"nodeType":"605","messageId":"606","endLine":136,"endColumn":33},{"ruleId":"603","severity":1,"message":"604","line":197,"column":51,"nodeType":"605","messageId":"606","endLine":197,"endColumn":53},{"ruleId":"603","severity":1,"message":"604","line":217,"column":51,"nodeType":"605","messageId":"606","endLine":217,"endColumn":53},{"ruleId":"587","replacedBy":"629"},{"ruleId":"589","replacedBy":"630"},{"ruleId":"593","severity":1,"message":"631","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"593","severity":1,"message":"632","line":7,"column":8,"nodeType":"595","messageId":"596","endLine":7,"endColumn":18},{"ruleId":"593","severity":1,"message":"633","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":14},{"ruleId":"593","severity":1,"message":"634","line":14,"column":8,"nodeType":"595","messageId":"596","endLine":14,"endColumn":16},{"ruleId":"593","severity":1,"message":"635","line":18,"column":8,"nodeType":"595","messageId":"596","endLine":18,"endColumn":12},{"ruleId":"593","severity":1,"message":"636","line":24,"column":8,"nodeType":"595","messageId":"596","endLine":24,"endColumn":12},{"ruleId":"603","severity":1,"message":"628","line":150,"column":35,"nodeType":"605","messageId":"606","endLine":150,"endColumn":37},{"ruleId":"603","severity":1,"message":"604","line":163,"column":70,"nodeType":"605","messageId":"606","endLine":163,"endColumn":72},{"ruleId":"637","severity":1,"message":"638","line":175,"column":48,"nodeType":"639","endLine":175,"endColumn":63},{"ruleId":"640","severity":1,"message":"641","line":192,"column":94,"nodeType":"605","messageId":"642","endLine":192,"endColumn":95},{"ruleId":"593","severity":1,"message":"643","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":17},{"ruleId":"644","severity":1,"message":"645","line":21,"column":5,"nodeType":"646","messageId":"647","endLine":24,"endColumn":6},{"ruleId":"587","replacedBy":"648"},{"ruleId":"589","replacedBy":"649"},{"ruleId":"593","severity":1,"message":"650","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":20},{"ruleId":"593","severity":1,"message":"651","line":10,"column":16,"nodeType":"595","messageId":"596","endLine":10,"endColumn":24},{"ruleId":"640","severity":1,"message":"641","line":147,"column":141,"nodeType":"605","messageId":"642","endLine":147,"endColumn":142},{"ruleId":"593","severity":1,"message":"631","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"640","severity":1,"message":"641","line":84,"column":75,"nodeType":"605","messageId":"642","endLine":84,"endColumn":76},{"ruleId":"587","replacedBy":"652"},{"ruleId":"589","replacedBy":"653"},{"ruleId":"593","severity":1,"message":"627","line":4,"column":8,"nodeType":"595","messageId":"596","endLine":4,"endColumn":13},{"ruleId":"593","severity":1,"message":"635","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":12},{"ruleId":"622","severity":1,"message":"623","line":64,"column":21,"nodeType":"624","endLine":64,"endColumn":71},{"ruleId":"622","severity":1,"message":"623","line":83,"column":33,"nodeType":"624","endLine":83,"endColumn":80},{"ruleId":"622","severity":1,"message":"623","line":96,"column":33,"nodeType":"624","endLine":96,"endColumn":84},{"ruleId":"593","severity":1,"message":"625","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":17},{"ruleId":"593","severity":1,"message":"601","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":14},{"ruleId":"593","severity":1,"message":"626","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":28},{"ruleId":"593","severity":1,"message":"627","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":13},{"ruleId":"593","severity":1,"message":"654","line":15,"column":8,"nodeType":"595","messageId":"596","endLine":15,"endColumn":11},{"ruleId":"593","severity":1,"message":"655","line":16,"column":8,"nodeType":"595","messageId":"596","endLine":16,"endColumn":18},{"ruleId":"593","severity":1,"message":"656","line":74,"column":39,"nodeType":"595","messageId":"596","endLine":74,"endColumn":43},{"ruleId":"622","severity":1,"message":"623","line":82,"column":25,"nodeType":"624","endLine":82,"endColumn":75},{"ruleId":"593","severity":1,"message":"657","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":15},{"ruleId":"593","severity":1,"message":"658","line":4,"column":8,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"637","severity":1,"message":"638","line":22,"column":108,"nodeType":"639","endLine":22,"endColumn":123},{"ruleId":"637","severity":1,"message":"638","line":25,"column":101,"nodeType":"639","endLine":25,"endColumn":116},{"ruleId":"637","severity":1,"message":"638","line":28,"column":96,"nodeType":"639","endLine":28,"endColumn":111},{"ruleId":"637","severity":1,"message":"638","line":31,"column":110,"nodeType":"639","endLine":31,"endColumn":125},{"ruleId":"637","severity":1,"message":"638","line":34,"column":107,"nodeType":"639","endLine":34,"endColumn":122},{"ruleId":"637","severity":1,"message":"638","line":37,"column":103,"nodeType":"639","endLine":37,"endColumn":118},{"ruleId":"637","severity":1,"message":"638","line":40,"column":126,"nodeType":"639","endLine":40,"endColumn":141},{"ruleId":"637","severity":1,"message":"638","line":43,"column":117,"nodeType":"639","endLine":43,"endColumn":132},{"ruleId":"637","severity":1,"message":"638","line":46,"column":123,"nodeType":"639","endLine":46,"endColumn":138},{"ruleId":"637","severity":1,"message":"638","line":54,"column":107,"nodeType":"639","endLine":54,"endColumn":122},{"ruleId":"637","severity":1,"message":"638","line":57,"column":100,"nodeType":"639","endLine":57,"endColumn":115},{"ruleId":"637","severity":1,"message":"638","line":60,"column":98,"nodeType":"639","endLine":60,"endColumn":113},{"ruleId":"637","severity":1,"message":"638","line":63,"column":126,"nodeType":"639","endLine":63,"endColumn":141},{"ruleId":"637","severity":1,"message":"638","line":71,"column":104,"nodeType":"639","endLine":71,"endColumn":119},{"ruleId":"637","severity":1,"message":"638","line":74,"column":111,"nodeType":"639","endLine":74,"endColumn":126},{"ruleId":"637","severity":1,"message":"638","line":77,"column":106,"nodeType":"639","endLine":77,"endColumn":121},{"ruleId":"587","replacedBy":"659"},{"ruleId":"589","replacedBy":"660"},{"ruleId":"587","replacedBy":"661"},{"ruleId":"589","replacedBy":"662"},{"ruleId":"593","severity":1,"message":"643","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":17},{"ruleId":"593","severity":1,"message":"663","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":16},{"ruleId":"593","severity":1,"message":"664","line":11,"column":5,"nodeType":"595","messageId":"596","endLine":11,"endColumn":11},{"ruleId":"603","severity":1,"message":"628","line":115,"column":39,"nodeType":"605","messageId":"606","endLine":115,"endColumn":41},{"ruleId":"603","severity":1,"message":"628","line":115,"column":76,"nodeType":"605","messageId":"606","endLine":115,"endColumn":78},{"ruleId":"603","severity":1,"message":"628","line":115,"column":110,"nodeType":"605","messageId":"606","endLine":115,"endColumn":112},{"ruleId":"603","severity":1,"message":"604","line":121,"column":45,"nodeType":"605","messageId":"606","endLine":121,"endColumn":47},{"ruleId":"603","severity":1,"message":"604","line":122,"column":58,"nodeType":"605","messageId":"606","endLine":122,"endColumn":60},{"ruleId":"603","severity":1,"message":"604","line":180,"column":45,"nodeType":"605","messageId":"606","endLine":180,"endColumn":47},{"ruleId":"603","severity":1,"message":"604","line":181,"column":58,"nodeType":"605","messageId":"606","endLine":181,"endColumn":60},{"ruleId":"603","severity":1,"message":"628","line":274,"column":60,"nodeType":"605","messageId":"606","endLine":274,"endColumn":62},{"ruleId":"603","severity":1,"message":"628","line":287,"column":59,"nodeType":"605","messageId":"606","endLine":287,"endColumn":61},{"ruleId":"603","severity":1,"message":"628","line":297,"column":62,"nodeType":"605","messageId":"606","endLine":297,"endColumn":64},{"ruleId":"587","replacedBy":"665"},{"ruleId":"589","replacedBy":"666"},{"ruleId":"593","severity":1,"message":"667","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":16},{"ruleId":"593","severity":1,"message":"601","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":14},{"ruleId":"593","severity":1,"message":"631","line":3,"column":10,"nodeType":"595","messageId":"596","endLine":3,"endColumn":14},{"ruleId":"593","severity":1,"message":"601","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":14},{"ruleId":"593","severity":1,"message":"668","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":12},{"ruleId":"593","severity":1,"message":"635","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":12},{"ruleId":"593","severity":1,"message":"669","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":13},{"ruleId":"593","severity":1,"message":"670","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":20},{"ruleId":"593","severity":1,"message":"625","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":17},{"ruleId":"593","severity":1,"message":"671","line":14,"column":10,"nodeType":"595","messageId":"596","endLine":14,"endColumn":25},{"ruleId":"640","severity":1,"message":"641","line":73,"column":75,"nodeType":"605","messageId":"642","endLine":73,"endColumn":76},{"ruleId":"640","severity":1,"message":"641","line":111,"column":75,"nodeType":"605","messageId":"642","endLine":111,"endColumn":76},{"ruleId":"603","severity":1,"message":"628","line":150,"column":43,"nodeType":"605","messageId":"606","endLine":150,"endColumn":45},{"ruleId":"593","severity":1,"message":"672","line":1,"column":28,"nodeType":"595","messageId":"596","endLine":1,"endColumn":36},{"ruleId":"593","severity":1,"message":"673","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":18},{"ruleId":"593","severity":1,"message":"674","line":12,"column":8,"nodeType":"595","messageId":"596","endLine":12,"endColumn":28},{"ruleId":"603","severity":1,"message":"604","line":324,"column":48,"nodeType":"605","messageId":"606","endLine":324,"endColumn":50},{"ruleId":"603","severity":1,"message":"604","line":324,"column":96,"nodeType":"605","messageId":"606","endLine":324,"endColumn":98},{"ruleId":"593","severity":1,"message":"635","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":12},{"ruleId":"593","severity":1,"message":"618","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":14},{"ruleId":"622","severity":1,"message":"623","line":150,"column":29,"nodeType":"624","endLine":150,"endColumn":79},{"ruleId":"622","severity":1,"message":"623","line":168,"column":37,"nodeType":"624","endLine":168,"endColumn":90},{"ruleId":"622","severity":1,"message":"623","line":233,"column":29,"nodeType":"624","endLine":233,"endColumn":79},{"ruleId":"622","severity":1,"message":"623","line":298,"column":37,"nodeType":"624","endLine":298,"endColumn":88},{"ruleId":"587","replacedBy":"675"},{"ruleId":"589","replacedBy":"676"},{"ruleId":"593","severity":1,"message":"663","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":16},{"ruleId":"593","severity":1,"message":"654","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":11},{"ruleId":"593","severity":1,"message":"655","line":11,"column":8,"nodeType":"595","messageId":"596","endLine":11,"endColumn":18},{"ruleId":"644","severity":1,"message":"645","line":44,"column":5,"nodeType":"646","messageId":"647","endLine":47,"endColumn":6},{"ruleId":"622","severity":1,"message":"623","line":290,"column":29,"nodeType":"624","endLine":290,"endColumn":92},{"ruleId":"622","severity":1,"message":"623","line":296,"column":33,"nodeType":"624","endLine":296,"endColumn":95},{"ruleId":"677","severity":1,"message":"678","line":386,"column":58,"nodeType":"679","messageId":"680","endLine":386,"endColumn":60},{"ruleId":"677","severity":1,"message":"678","line":386,"column":106,"nodeType":"679","messageId":"680","endLine":386,"endColumn":108},{"ruleId":"622","severity":1,"message":"623","line":390,"column":29,"nodeType":"624","endLine":390,"endColumn":144},{"ruleId":"622","severity":1,"message":"623","line":396,"column":33,"nodeType":"624","endLine":396,"endColumn":148},{"ruleId":"593","severity":1,"message":"651","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":18},{"ruleId":"593","severity":1,"message":"681","line":4,"column":26,"nodeType":"595","messageId":"596","endLine":4,"endColumn":37},{"ruleId":"622","severity":1,"message":"623","line":18,"column":21,"nodeType":"624","endLine":18,"endColumn":71},{"ruleId":"593","severity":1,"message":"634","line":7,"column":8,"nodeType":"595","messageId":"596","endLine":7,"endColumn":16},{"ruleId":"593","severity":1,"message":"682","line":14,"column":8,"nodeType":"595","messageId":"596","endLine":14,"endColumn":12},{"ruleId":"593","severity":1,"message":"683","line":16,"column":8,"nodeType":"595","messageId":"596","endLine":16,"endColumn":12},{"ruleId":"640","severity":1,"message":"641","line":48,"column":47,"nodeType":"605","messageId":"642","endLine":48,"endColumn":48},{"ruleId":"640","severity":1,"message":"641","line":58,"column":47,"nodeType":"605","messageId":"642","endLine":58,"endColumn":48},{"ruleId":"637","severity":1,"message":"638","line":103,"column":44,"nodeType":"639","endLine":103,"endColumn":59},{"ruleId":"640","severity":1,"message":"641","line":118,"column":90,"nodeType":"605","messageId":"642","endLine":118,"endColumn":91},{"ruleId":"593","severity":1,"message":"684","line":12,"column":7,"nodeType":"595","messageId":"596","endLine":12,"endColumn":15},{"ruleId":"603","severity":1,"message":"604","line":62,"column":29,"nodeType":"605","messageId":"606","endLine":62,"endColumn":31},{"ruleId":"607","severity":1,"message":"608","line":119,"column":9,"nodeType":"609","messageId":"610","endLine":161,"endColumn":10},{"ruleId":"640","severity":1,"message":"641","line":59,"column":50,"nodeType":"605","messageId":"642","endLine":59,"endColumn":51},{"ruleId":"640","severity":1,"message":"641","line":75,"column":50,"nodeType":"605","messageId":"642","endLine":75,"endColumn":51},{"ruleId":"603","severity":1,"message":"604","line":150,"column":38,"nodeType":"605","messageId":"606","endLine":150,"endColumn":40},{"ruleId":"603","severity":1,"message":"628","line":214,"column":88,"nodeType":"605","messageId":"606","endLine":214,"endColumn":90},{"ruleId":"637","severity":1,"message":"638","line":216,"column":70,"nodeType":"639","endLine":216,"endColumn":85},{"ruleId":"603","severity":1,"message":"628","line":266,"column":88,"nodeType":"605","messageId":"606","endLine":266,"endColumn":90},{"ruleId":"637","severity":1,"message":"638","line":268,"column":70,"nodeType":"639","endLine":268,"endColumn":85},{"ruleId":"603","severity":1,"message":"628","line":321,"column":88,"nodeType":"605","messageId":"606","endLine":321,"endColumn":90},{"ruleId":"637","severity":1,"message":"638","line":323,"column":70,"nodeType":"639","endLine":323,"endColumn":85},{"ruleId":"603","severity":1,"message":"628","line":372,"column":88,"nodeType":"605","messageId":"606","endLine":372,"endColumn":90},{"ruleId":"637","severity":1,"message":"638","line":374,"column":70,"nodeType":"639","endLine":374,"endColumn":85},{"ruleId":"593","severity":1,"message":"631","line":6,"column":10,"nodeType":"595","messageId":"596","endLine":6,"endColumn":14},{"ruleId":"593","severity":1,"message":"651","line":6,"column":16,"nodeType":"595","messageId":"596","endLine":6,"endColumn":24},{"ruleId":"593","severity":1,"message":"631","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":14},{"ruleId":"622","severity":1,"message":"623","line":37,"column":21,"nodeType":"624","endLine":37,"endColumn":189},{"ruleId":"587","replacedBy":"685"},{"ruleId":"589","replacedBy":"686"},{"ruleId":"640","severity":1,"message":"641","line":51,"column":75,"nodeType":"605","messageId":"642","endLine":51,"endColumn":76},{"ruleId":"603","severity":1,"message":"604","line":85,"column":38,"nodeType":"605","messageId":"606","endLine":85,"endColumn":40},{"ruleId":"603","severity":1,"message":"604","line":85,"column":74,"nodeType":"605","messageId":"606","endLine":85,"endColumn":76},{"ruleId":"603","severity":1,"message":"604","line":93,"column":45,"nodeType":"605","messageId":"606","endLine":93,"endColumn":47},{"ruleId":"603","severity":1,"message":"604","line":93,"column":81,"nodeType":"605","messageId":"606","endLine":93,"endColumn":83},{"ruleId":"687","severity":1,"message":"688","line":94,"column":17,"nodeType":"595","messageId":"689","endLine":94,"endColumn":24},{"ruleId":"603","severity":1,"message":"604","line":101,"column":45,"nodeType":"605","messageId":"606","endLine":101,"endColumn":47},{"ruleId":"603","severity":1,"message":"604","line":101,"column":83,"nodeType":"605","messageId":"606","endLine":101,"endColumn":85},{"ruleId":"687","severity":1,"message":"688","line":102,"column":17,"nodeType":"595","messageId":"689","endLine":102,"endColumn":24},{"ruleId":"603","severity":1,"message":"604","line":109,"column":45,"nodeType":"605","messageId":"606","endLine":109,"endColumn":47},{"ruleId":"603","severity":1,"message":"604","line":109,"column":83,"nodeType":"605","messageId":"606","endLine":109,"endColumn":85},{"ruleId":"687","severity":1,"message":"688","line":110,"column":17,"nodeType":"595","messageId":"689","endLine":110,"endColumn":24},{"ruleId":"593","severity":1,"message":"690","line":170,"column":21,"nodeType":"595","messageId":"596","endLine":170,"endColumn":30},{"ruleId":"593","severity":1,"message":"691","line":170,"column":32,"nodeType":"595","messageId":"596","endLine":170,"endColumn":38},{"ruleId":"593","severity":1,"message":"692","line":170,"column":40,"nodeType":"595","messageId":"596","endLine":170,"endColumn":45},{"ruleId":"603","severity":1,"message":"604","line":184,"column":44,"nodeType":"605","messageId":"606","endLine":184,"endColumn":46},{"ruleId":"603","severity":1,"message":"604","line":192,"column":44,"nodeType":"605","messageId":"606","endLine":192,"endColumn":46},{"ruleId":"603","severity":1,"message":"604","line":211,"column":67,"nodeType":"605","messageId":"606","endLine":211,"endColumn":69},{"ruleId":"603","severity":1,"message":"604","line":222,"column":67,"nodeType":"605","messageId":"606","endLine":222,"endColumn":69},{"ruleId":"603","severity":1,"message":"604","line":234,"column":67,"nodeType":"605","messageId":"606","endLine":234,"endColumn":69},{"ruleId":"593","severity":1,"message":"693","line":1,"column":16,"nodeType":"595","messageId":"596","endLine":1,"endColumn":25},{"ruleId":"593","severity":1,"message":"631","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":14},{"ruleId":"593","severity":1,"message":"694","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":24},{"ruleId":"593","severity":1,"message":"695","line":3,"column":8,"nodeType":"595","messageId":"596","endLine":3,"endColumn":14},{"ruleId":"593","severity":1,"message":"625","line":4,"column":8,"nodeType":"595","messageId":"596","endLine":4,"endColumn":17},{"ruleId":"593","severity":1,"message":"601","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":14},{"ruleId":"593","severity":1,"message":"655","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":18},{"ruleId":"696","severity":1,"message":"697","line":22,"column":56,"nodeType":"698","messageId":"699","endLine":22,"endColumn":57,"suggestions":"700"},{"ruleId":"593","severity":1,"message":"701","line":23,"column":13,"nodeType":"595","messageId":"596","endLine":23,"endColumn":25},{"ruleId":"603","severity":1,"message":"628","line":54,"column":41,"nodeType":"605","messageId":"606","endLine":54,"endColumn":43},{"ruleId":"622","severity":1,"message":"623","line":94,"column":21,"nodeType":"624","endLine":94,"endColumn":71},{"ruleId":"702","severity":1,"message":"703","line":130,"column":41,"nodeType":"639","endLine":130,"endColumn":56},{"ruleId":"702","severity":1,"message":"703","line":142,"column":41,"nodeType":"639","endLine":142,"endColumn":56},{"ruleId":"593","severity":1,"message":"704","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":17},{"ruleId":"593","severity":1,"message":"705","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":21},{"ruleId":"593","severity":1,"message":"651","line":8,"column":16,"nodeType":"595","messageId":"596","endLine":8,"endColumn":24},{"ruleId":"593","severity":1,"message":"706","line":17,"column":7,"nodeType":"595","messageId":"596","endLine":17,"endColumn":16},{"ruleId":"603","severity":1,"message":"628","line":160,"column":32,"nodeType":"605","messageId":"606","endLine":160,"endColumn":34},{"ruleId":"603","severity":1,"message":"628","line":213,"column":41,"nodeType":"605","messageId":"606","endLine":213,"endColumn":43},{"ruleId":"640","severity":1,"message":"641","line":81,"column":75,"nodeType":"605","messageId":"642","endLine":81,"endColumn":76},{"ruleId":"587","replacedBy":"707"},{"ruleId":"589","replacedBy":"708"},{"ruleId":"593","severity":1,"message":"672","line":1,"column":28,"nodeType":"595","messageId":"596","endLine":1,"endColumn":36},{"ruleId":"593","severity":1,"message":"709","line":4,"column":19,"nodeType":"595","messageId":"596","endLine":4,"endColumn":29},{"ruleId":"593","severity":1,"message":"710","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":16},{"ruleId":"593","severity":1,"message":"711","line":10,"column":8,"nodeType":"595","messageId":"596","endLine":10,"endColumn":20},{"ruleId":"593","severity":1,"message":"712","line":14,"column":18,"nodeType":"595","messageId":"596","endLine":14,"endColumn":25},{"ruleId":"593","severity":1,"message":"601","line":16,"column":8,"nodeType":"595","messageId":"596","endLine":16,"endColumn":14},{"ruleId":"644","severity":1,"message":"645","line":65,"column":5,"nodeType":"646","messageId":"647","endLine":69,"endColumn":6},{"ruleId":"603","severity":1,"message":"604","line":80,"column":33,"nodeType":"605","messageId":"606","endLine":80,"endColumn":35},{"ruleId":"687","severity":1,"message":"713","line":95,"column":17,"nodeType":"595","messageId":"689","endLine":95,"endColumn":21},{"ruleId":"622","severity":1,"message":"623","line":163,"column":25,"nodeType":"624","endLine":163,"endColumn":55},{"ruleId":"714","severity":1,"message":"715","line":169,"column":25,"nodeType":"624","endLine":169,"endColumn":67},{"ruleId":"622","severity":1,"message":"623","line":233,"column":37,"nodeType":"624","endLine":233,"endColumn":120},{"ruleId":"716","severity":1,"message":"717","line":235,"column":103,"nodeType":"718","messageId":"719","endLine":235,"endColumn":104},{"ruleId":"622","severity":1,"message":"623","line":340,"column":37,"nodeType":"624","endLine":340,"endColumn":120},{"ruleId":"716","severity":1,"message":"717","line":342,"column":103,"nodeType":"718","messageId":"719","endLine":342,"endColumn":104},{"ruleId":"622","severity":1,"message":"623","line":448,"column":37,"nodeType":"624","endLine":448,"endColumn":120},{"ruleId":"716","severity":1,"message":"717","line":450,"column":103,"nodeType":"718","messageId":"719","endLine":450,"endColumn":104},{"ruleId":"593","severity":1,"message":"635","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":12},{"ruleId":"593","severity":1,"message":"669","line":7,"column":8,"nodeType":"595","messageId":"596","endLine":7,"endColumn":13},{"ruleId":"593","severity":1,"message":"670","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":20},{"ruleId":"593","severity":1,"message":"625","line":9,"column":8,"nodeType":"595","messageId":"596","endLine":9,"endColumn":17},{"ruleId":"687","severity":1,"message":"688","line":56,"column":17,"nodeType":"595","messageId":"689","endLine":56,"endColumn":24},{"ruleId":"687","severity":1,"message":"688","line":64,"column":17,"nodeType":"595","messageId":"689","endLine":64,"endColumn":24},{"ruleId":"687","severity":1,"message":"688","line":72,"column":17,"nodeType":"595","messageId":"689","endLine":72,"endColumn":24},{"ruleId":"593","severity":1,"message":"720","line":70,"column":13,"nodeType":"595","messageId":"596","endLine":70,"endColumn":18},{"ruleId":"593","severity":1,"message":"721","line":73,"column":13,"nodeType":"595","messageId":"596","endLine":73,"endColumn":20},{"ruleId":"593","severity":1,"message":"722","line":80,"column":13,"nodeType":"595","messageId":"596","endLine":80,"endColumn":21},{"ruleId":"593","severity":1,"message":"723","line":178,"column":25,"nodeType":"595","messageId":"596","endLine":178,"endColumn":37},{"ruleId":"603","severity":1,"message":"604","line":185,"column":27,"nodeType":"605","messageId":"606","endLine":185,"endColumn":29},{"ruleId":"622","severity":1,"message":"623","line":219,"column":21,"nodeType":"624","endLine":219,"endColumn":71},{"ruleId":"603","severity":1,"message":"604","line":233,"column":44,"nodeType":"605","messageId":"606","endLine":233,"endColumn":46},{"ruleId":"603","severity":1,"message":"604","line":242,"column":44,"nodeType":"605","messageId":"606","endLine":242,"endColumn":46},{"ruleId":"593","severity":1,"message":"668","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":12},{"ruleId":"644","severity":1,"message":"645","line":19,"column":5,"nodeType":"646","messageId":"647","endLine":22,"endColumn":6},{"ruleId":"622","severity":1,"message":"623","line":75,"column":25,"nodeType":"624","endLine":75,"endColumn":82},{"ruleId":"622","severity":1,"message":"623","line":84,"column":29,"nodeType":"624","endLine":84,"endColumn":86},{"ruleId":"593","severity":1,"message":"657","line":3,"column":8,"nodeType":"595","messageId":"596","endLine":3,"endColumn":15},{"ruleId":"593","severity":1,"message":"631","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"593","severity":1,"message":"658","line":5,"column":8,"nodeType":"595","messageId":"596","endLine":5,"endColumn":14},{"ruleId":"593","severity":1,"message":"724","line":1,"column":28,"nodeType":"595","messageId":"596","endLine":1,"endColumn":37},{"ruleId":"593","severity":1,"message":"651","line":11,"column":16,"nodeType":"595","messageId":"596","endLine":11,"endColumn":24},{"ruleId":"603","severity":1,"message":"604","line":152,"column":41,"nodeType":"605","messageId":"606","endLine":152,"endColumn":43},{"ruleId":"640","severity":1,"message":"641","line":182,"column":141,"nodeType":"605","messageId":"642","endLine":182,"endColumn":142},{"ruleId":"603","severity":1,"message":"604","line":197,"column":41,"nodeType":"605","messageId":"606","endLine":197,"endColumn":43},{"ruleId":"640","severity":1,"message":"641","line":223,"column":145,"nodeType":"605","messageId":"642","endLine":223,"endColumn":146},{"ruleId":"640","severity":1,"message":"641","line":71,"column":75,"nodeType":"605","messageId":"642","endLine":71,"endColumn":76},{"ruleId":"640","severity":1,"message":"641","line":151,"column":104,"nodeType":"605","messageId":"642","endLine":151,"endColumn":105},{"ruleId":"593","severity":1,"message":"631","line":3,"column":10,"nodeType":"595","messageId":"596","endLine":3,"endColumn":14},{"ruleId":"603","severity":1,"message":"628","line":55,"column":33,"nodeType":"605","messageId":"606","endLine":55,"endColumn":35},{"ruleId":"593","severity":1,"message":"631","line":4,"column":10,"nodeType":"595","messageId":"596","endLine":4,"endColumn":14},{"ruleId":"593","severity":1,"message":"725","line":8,"column":8,"nodeType":"595","messageId":"596","endLine":8,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":78,"column":75,"nodeType":"605","messageId":"642","endLine":78,"endColumn":76},{"ruleId":"640","severity":1,"message":"641","line":137,"column":78,"nodeType":"605","messageId":"642","endLine":137,"endColumn":79},{"ruleId":"587","replacedBy":"726"},{"ruleId":"589","replacedBy":"727"},{"ruleId":"593","severity":1,"message":"613","line":2,"column":10,"nodeType":"595","messageId":"596","endLine":2,"endColumn":23},{"ruleId":"593","severity":1,"message":"728","line":2,"column":8,"nodeType":"595","messageId":"596","endLine":2,"endColumn":22},{"ruleId":"729","severity":1,"message":"730","line":12,"column":13,"nodeType":"624","endLine":12,"endColumn":77},{"ruleId":"729","severity":1,"message":"730","line":16,"column":29,"nodeType":"624","endLine":16,"endColumn":68},{"ruleId":"593","severity":1,"message":"693","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"593","severity":1,"message":"632","line":6,"column":8,"nodeType":"595","messageId":"596","endLine":6,"endColumn":18},{"ruleId":"593","severity":1,"message":"634","line":13,"column":8,"nodeType":"595","messageId":"596","endLine":13,"endColumn":16},{"ruleId":"593","severity":1,"message":"635","line":17,"column":8,"nodeType":"595","messageId":"596","endLine":17,"endColumn":12},{"ruleId":"593","severity":1,"message":"636","line":23,"column":8,"nodeType":"595","messageId":"596","endLine":23,"endColumn":12},{"ruleId":"603","severity":1,"message":"628","line":174,"column":36,"nodeType":"605","messageId":"606","endLine":174,"endColumn":38},{"ruleId":"603","severity":1,"message":"604","line":186,"column":69,"nodeType":"605","messageId":"606","endLine":186,"endColumn":71},{"ruleId":"637","severity":1,"message":"638","line":197,"column":44,"nodeType":"639","endLine":197,"endColumn":59},{"ruleId":"640","severity":1,"message":"641","line":220,"column":94,"nodeType":"605","messageId":"642","endLine":220,"endColumn":95},{"ruleId":"731","severity":1,"message":"732","line":298,"column":25,"nodeType":"624","endLine":298,"endColumn":52},{"ruleId":"593","severity":1,"message":"693","line":1,"column":17,"nodeType":"595","messageId":"596","endLine":1,"endColumn":26},{"ruleId":"593","severity":1,"message":"733","line":3,"column":8,"nodeType":"595","messageId":"596","endLine":3,"endColumn":18},{"ruleId":"587","replacedBy":"734"},{"ruleId":"589","replacedBy":"735"},"no-native-reassign",["736"],"no-negated-in-lhs",["737"],["736"],["737"],"no-unused-vars","'FormDatosUniversidad' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["736"],["737"],"'BrowserRouter' is defined but never used.","'Footer' is defined but never used.","'pruebas' is defined but never used.","'user' is defined but never used.","'GlobalProfesor' is defined but never used.","'imagen' is defined but never used.","'imagenalumno' is defined but never used.","'imagenprof' is defined but never used.","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'SimpleReactValidator' is defined but never used.","'axios' is defined but never used.","Expected '!==' and instead saw '!='.",["736"],["737"],"'Link' is defined but never used.","'Documentos' is defined but never used.","'Global' is defined but never used.","'EditIcon' is defined but never used.","'swal' is defined but never used.","'btn3' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'NavLink' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["736"],["737"],"'GlobalPerfil' is defined but never used.","'Redirect' is defined but never used.",["736"],["737"],"'Col' is defined but never used.","'InputGroup' is defined but never used.","'tipo' is assigned a value but never used.","'Sidebar' is defined but never used.","'Header' is defined but never used.",["736"],["737"],["736"],["737"],"'ReactDOM' is defined but never used.","'bcrypt' is assigned a value but never used.",["736"],["737"],"'Router' is defined but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","'Autocomplete' is defined but never used.","'ColorizeRounded' is defined but never used.","'useState' is defined but never used.","'ButtonIcon' is defined but never used.","'AddCircleRoundedIcon' is defined but never used.",["736"],["737"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'hashHistory' is defined but never used.","'btn2' is defined but never used.","'btn4' is defined but never used.","'validate' is assigned a value but never used.",["736"],["737"],"no-redeclare","'mensaje' is already defined.","redeclared","'mensajeId' is assigned a value but never used.","'emisor' is assigned a value but never used.","'texto' is assigned a value but never used.","'Component' is defined but never used.","'MuiThemeProvider' is defined but never used.","'AppBar' is defined but never used.","no-useless-escape","Unnecessary escape character: \\].","Literal","unnecessaryEscape",["738","739"],"'regexnumeros' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'useStyles' is assigned a value but never used.",["736"],["737"],"'useHistory' is defined but never used.","'Dropdown' is defined but never used.","'InicioSesion' is defined but never used.","'FaTimes' is defined but never used.","'elem' is already defined.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'body3' is assigned a value but never used.","'mensaje' is assigned a value but never used.","'mensaje2' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'useEffect' is defined but never used.","'Toast' is defined but never used.",["736"],["737"],"'ScrollToBottom' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'imagenlogo' is defined but never used.",["736"],["737"],"no-global-assign","no-unsafe-negation",{"messageId":"740","fix":"741","desc":"742"},{"messageId":"743","fix":"744","desc":"745"},"removeEscape",{"range":"746","text":"747"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"748","text":"749"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[741,742],"",[741,741],"\\"]